{"version":3,"sources":["webpack:///./resources/js/Lib/vuetify-formjson/Fields/Blockly/Blockly.vue?d3b9","webpack:///./resources/js/Lib/vuetify-formjson/Fields/Blockly/Blockly.vue?23dd","webpack:///resources/js/Lib/vuetify-formjson/Fields/Blockly/Blockly.vue","webpack:///./resources/js/Lib/vuetify-formjson/Fields/Blockly/Blockly.vue"],"names":["mixins","name","props","id","String","field","Object","value","Array","data","ignoreChange","windowWidth","windowHeight","methods","onWindowResize","element","blocklyArea","x","y","offsetLeft","offsetTop","offsetParent","blocklyDiv","style","left","top","width","offsetWidth","height","offsetHeight","refreshSize","this","updateBlocks","pasteToWorkspace","console","log","dom","block","mounted","blockContainer","blocks","blockEditor","toolbox","BlocklyToolbox","zoom","controls","wheel","startScale","maxScale","minScale","scaleSpeed","addChangeListener","event","blockId","$nextTick","window","addEventListener","beforeDestroy","removeEventListener","component","_h","$createElement","_c","_self","class","_v","_s","label","ref","staticClass","staticStyle"],"mappings":"mGAAA,I,6CCAyN,ECazN,CACEA,OAAQ,CAAC,EAAX,GACEC,KAAM,mBACNC,MAAO,CACLC,GAAIC,OACJC,MAAOC,OACPC,MAAO,CAACH,OAAQI,MAAOF,SAEzBG,KARF,WASI,MAAO,CACLC,cAAc,EACdC,YAAa,EACbC,aAAc,IAGlBC,QAAS,CACPC,eADJ,SACA,GACM,IAAN,uBACUC,EAAUC,EACVC,EAAI,EACJC,EAAI,EACR,GACED,GAAKF,EAAQI,WACbD,GAAKH,EAAQK,UACbL,EAAUA,EAAQM,mBAC1B,GACM,IAAN,yBACMC,EAAWC,MAAMC,KAAOP,EAAI,KAC5BK,EAAWC,MAAME,IAAMP,EAAI,KAC3BI,EAAWC,MAAMG,MAAQV,EAAYW,YAAc,KACnDL,EAAWC,MAAMK,OAASZ,EAAYa,aAAe,KACrD,EAAN,+BAEIC,YAlBJ,WAmBMC,KAAKjB,eAAe,OAEtBkB,aArBJ,WAsBM,GAAID,KAAKxB,OAAwB,KAAfwB,KAAKxB,MACrB,IACE,EAAV,mCACA,8BACA,kBAEA,YAII0B,iBAhCJ,SAgCA,GACM,IAAN,uBACA,yCACMC,QAAQC,IAAI,iBAAkBC,EAAKC,GACnC,EAAN,wCACMN,KAAKD,gBAGTQ,QAvDF,WAuDA,WACA,yBACI,GAAIC,EAAgB,CAClB,IAAN,mBACQC,OAAQT,KAAK1B,MAAMmC,OAAST,KAAK1B,MAAMmC,OAAS,OAuBlD,GArBAT,KAAKU,YAAc,EAAzB,YACQC,QAASC,EACTC,KAAM,CACJC,UAAU,EACVC,OAAO,EACPC,WAAY,EACZC,SAAU,EACVC,SAAU,GACVC,WAAY,OAGhBnB,KAAKU,YAAYU,mBAAkB,SAAzC,GACQ,GAAsB,UAAlBC,EAAMrC,SAAuBqC,EAAMC,QAAS,CAC9C,IAAV,wCACA,wBACU,EAAV,wCAEQ,IAAR,wCACQ,EAAR,6BACQ,EAAR,4BAEUtB,KAAKxB,OAAwB,KAAfwB,KAAKxB,MACrB,IACE,EAAV,mCACA,8BACA,kBAEA,UAEM,EAAN,8BAEIwB,KAAKuB,WAAU,WACbC,OAAOC,iBAAiB,SAAUzB,KAAKjB,gBACvCiB,KAAKjB,qBAGT2C,cAjGF,WAkGIF,OAAOG,oBAAoB,SAAU3B,KAAKjB,kB,YCxG1C6C,EAAY,YACd,GHRW,WAAa,IAAiBC,EAAT7B,KAAgB8B,eAAmBC,EAAnC/B,KAA0CgC,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACE,MAAO,iDAA/EjC,KAAsI1B,MAAM2D,MAA5IjC,KAAwJ1B,MAAM2D,MAAQ,KAAM,CAACF,EAAG,QAAQ,CAAxL/B,KAA6LkC,GAA7LlC,KAAoMmC,GAApMnC,KAA2M1B,MAAM8D,UAAjNpC,KAA+NkC,GAAG,KAAKH,EAAG,MAAM,CAACM,IAAI,YAAYC,YAAY,cAAcC,YAAY,CAAC,MAAQ,OAAO,aAAa,QAAQ,OAAS,SAAS,CAACR,EAAG,MAAM,CAACM,IAAI,sBACzX,IGUpB,EACA,KACA,KACA,MAIa,UAAAT,E","file":"blockly.bundle.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:(\"vf-input vf-blockly-input d-flex flex-column \" + (_vm.field.class ? _vm.field.class : ''))},[_c('label',[_vm._v(_vm._s(_vm.field.label))]),_vm._v(\" \"),_c('div',{ref:\"blockArea\",staticClass:\"fill-height\",staticStyle:{\"width\":\"100%\",\"min-height\":\"500px\",\"height\":\"100%\"}},[_c('div',{ref:\"blockEditor\"})])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Blockly.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Blockly.vue?vue&type=script&lang=js&\"","<template>\n  <div :class=\"`vf-input vf-blockly-input d-flex flex-column ${field.class ? field.class : ''}`\">\n    <label>{{ field.label }}</label>\n    <div ref=\"blockArea\" style=\"width: 100%; min-height: 500px; height: 100%\" class=\"fill-height\">\n      <div ref=\"blockEditor\"></div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport BaseComponent from \"./../mixins\";\nimport Blockly from \"blockly\";\nimport RegisterBlocksAndGetToolbox from \"./toolbox\";\nexport default {\n  mixins: [BaseComponent],\n  name: \"vf-blockly-input\",\n  props: {\n    id: String,\n    field: Object,\n    value: [String, Array, Object]\n  },\n  data() {\n    return {\n      ignoreChange: false,\n      windowWidth: 0,\n      windowHeight: 0\n    };\n  },\n  methods: {\n    onWindowResize(event) {\n      const blocklyArea = this.$refs.blockArea;\n      var element = blocklyArea;\n      var x = 0;\n      var y = 0;\n      do {\n        x += element.offsetLeft;\n        y += element.offsetTop;\n        element = element.offsetParent;\n      } while (element);\n      const blocklyDiv = this.$refs.blockEditor;\n      blocklyDiv.style.left = x + \"px\";\n      blocklyDiv.style.top = y + \"px\";\n      blocklyDiv.style.width = blocklyArea.offsetWidth + \"px\";\n      blocklyDiv.style.height = blocklyArea.offsetHeight + \"px\";\n      Blockly.svgResize(this.blockEditor);\n    },\n    refreshSize() {\n      this.onWindowResize(null);\n    },\n    updateBlocks() {\n      if (this.value && this.value !== \"\") {\n        try {\n          Blockly.Xml.clearWorkspaceAndLoadFromXml(\n            Blockly.Xml.textToDom(this.value),\n            this.blockEditor\n          );\n        } catch (e) {}\n      }\n    },\n\n    pasteToWorkspace(xml) {\n      const dom = Blockly.Xml.textToDom(xml);\n      const block = Blockly.Xml.domToBlock(dom, this.blockEditor);\n      console.log(\"domToWorkspace\", dom, block);\n      Blockly.Events.fire(new Blockly.Events.Create(block));\n      this.refreshSize();\n    }\n  },\n  mounted() {\n    const blockContainer = this.$refs.blockEditor;\n    if (blockContainer) {\n      const BlocklyToolbox = RegisterBlocksAndGetToolbox(Blockly, {\n        blocks: this.field.blocks ? this.field.blocks : null\n      });\n      this.blockEditor = Blockly.inject(blockContainer, {\n        toolbox: BlocklyToolbox,\n        zoom: {\n          controls: true,\n          wheel: true,\n          startScale: 1.0,\n          maxScale: 3,\n          minScale: 0.3,\n          scaleSpeed: 1.2\n        }\n      });\n      this.blockEditor.addChangeListener(event => {\n        if (event.element === \"click\" && event.blockId) {\n          const block = this.blockEditor.getBlockById(event.blockId);\n          const blockDom = Blockly.Xml.blockToDom(block);\n          this.$emit(\"selection\", Blockly.Xml.domToText(blockDom));\n        }\n        const dom = Blockly.Xml.workspaceToDom(this.blockEditor);\n        this.devalue = Blockly.Xml.domToText(dom);\n        this.$emit(\"input\", this.devalue);\n      });\n      if (this.value && this.value !== \"\") {\n        try {\n          Blockly.Xml.clearWorkspaceAndLoadFromXml(\n            Blockly.Xml.textToDom(this.value),\n            this.blockEditor\n          );\n        } catch (e) {}\n      }\n      Blockly.svgResize(this.blockEditor);\n    }\n    this.$nextTick(function() {\n      window.addEventListener(\"resize\", this.onWindowResize);\n      this.onWindowResize();\n    });\n  },\n  beforeDestroy() {\n    window.removeEventListener(\"resize\", this.onWindowResize);\n  }\n};\n</script>\n","import { render, staticRenderFns } from \"./Blockly.vue?vue&type=template&id=b7038212&\"\nimport script from \"./Blockly.vue?vue&type=script&lang=js&\"\nexport * from \"./Blockly.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}