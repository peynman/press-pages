(window["webpackJsonp"] = window["webpackJsonp"] || []).push([["stackedit-input"],{

/***/ "./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=script&lang=js&":
/*!***********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/babel-loader/lib??ref--4-0!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=script&lang=js& ***!
  \***********************************************************************************************************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _extensions_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./extensions/index.js */ \"./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/index.js\");\n/* harmony import */ var _services_markdownConversionSvc_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./services/markdownConversionSvc.js */ \"./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/markdownConversionSvc.js\");\n//\n//\n//\n//\n//\n//\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  name: 'VfStackeditInput',\n  props: {\n    field: Object,\n    value: String,\n    id: String\n  },\n  created: function created() {\n    _services_markdownConversionSvc_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].init();\n  },\n  mounted: function mounted() {\n    var converter = _services_markdownConversionSvc_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].createConverter({});\n    console.log(_services_markdownConversionSvc_js__WEBPACK_IMPORTED_MODULE_1__[\"default\"].parseSections(converter, 'd **asd as**d '));\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vcmVzb3VyY2VzL2pzL0xpYi92dWV0aWZ5LWZvcm1qc29uL0ZpZWxkcy9TdGFja0VkaXQvU3RhY2tFZGl0LnZ1ZT83MGI5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQU9BO0FBQ0E7QUFFQTtBQUNBLDBCQURBO0FBRUE7QUFDQSxpQkFEQTtBQUVBLGlCQUZBO0FBR0E7QUFIQSxHQUZBO0FBT0EsU0FQQSxxQkFPQTtBQUNBO0FBQ0EsR0FUQTtBQVVBLFNBVkEscUJBVUE7QUFDQTtBQUNBO0FBQ0E7QUFiQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8hLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9TdGFja0VkaXQudnVlP3Z1ZSZ0eXBlPXNjcmlwdCZsYW5nPWpzJi5qcyIsInNvdXJjZXNDb250ZW50IjpbIjx0ZW1wbGF0ZT5cbiAgPGRpdiByZWY9XCJtYXJrZG93bkNvbnRlbnRcIj5cbiAgICBjb250ZW50XG4gIDwvZGl2PlxuPC90ZW1wbGF0ZT5cblxuPHNjcmlwdD5cbmltcG9ydCAnLi9leHRlbnNpb25zL2luZGV4LmpzJztcbmltcG9ydCBtYXJrZG93bkNvbnZlcnNpb25TdmMgZnJvbSAnLi9zZXJ2aWNlcy9tYXJrZG93bkNvbnZlcnNpb25TdmMuanMnXG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBuYW1lOiAnVmZTdGFja2VkaXRJbnB1dCcsXG4gICAgcHJvcHM6IHtcbiAgICAgICAgZmllbGQ6IE9iamVjdCxcbiAgICAgICAgdmFsdWU6IFN0cmluZyxcbiAgICAgICAgaWQ6IFN0cmluZ1xuICAgIH0sXG4gICAgY3JlYXRlZCgpIHtcbiAgICAgICAgbWFya2Rvd25Db252ZXJzaW9uU3ZjLmluaXQoKTtcbiAgICB9LFxuICAgIG1vdW50ZWQoKSB7XG4gICAgICAgIGNvbnN0IGNvbnZlcnRlciA9IG1hcmtkb3duQ29udmVyc2lvblN2Yy5jcmVhdGVDb252ZXJ0ZXIoe30pO1xuICAgICAgICBjb25zb2xlLmxvZyhtYXJrZG93bkNvbnZlcnNpb25TdmMucGFyc2VTZWN0aW9ucyhjb252ZXJ0ZXIsICdkICoqYXNkIGFzKipkICcpKVxuICAgIH1cbn1cbjwvc2NyaXB0PlxuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=template&id=8eb78f2a&":
/*!***************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!./node_modules/vue-loader/lib??vue-loader-options!./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=template&id=8eb78f2a& ***!
  \***************************************************************************************************************************************************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return render; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return staticRenderFns; });\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { ref: \"markdownContent\" }, [_vm._v(\"\\n  content\\n\")])\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9TdGFja0VkaXQudnVlP2ZiMmUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IseUJBQXlCO0FBQzdDO0FBQ0E7QUFDQSIsImZpbGUiOiIuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9sb2FkZXJzL3RlbXBsYXRlTG9hZGVyLmpzPyEuL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8hLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9TdGFja0VkaXQudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPThlYjc4ZjJhJi5qcyIsInNvdXJjZXNDb250ZW50IjpbInZhciByZW5kZXIgPSBmdW5jdGlvbigpIHtcbiAgdmFyIF92bSA9IHRoaXNcbiAgdmFyIF9oID0gX3ZtLiRjcmVhdGVFbGVtZW50XG4gIHZhciBfYyA9IF92bS5fc2VsZi5fYyB8fCBfaFxuICByZXR1cm4gX2MoXCJkaXZcIiwgeyByZWY6IFwibWFya2Rvd25Db250ZW50XCIgfSwgW192bS5fdihcIlxcbiAgY29udGVudFxcblwiKV0pXG59XG52YXIgc3RhdGljUmVuZGVyRm5zID0gW11cbnJlbmRlci5fd2l0aFN0cmlwcGVkID0gdHJ1ZVxuXG5leHBvcnQgeyByZW5kZXIsIHN0YXRpY1JlbmRlckZucyB9Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=template&id=8eb78f2a&\n");

/***/ }),

/***/ "./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue":
/*!**************************************************************************!*\
  !*** ./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue ***!
  \**************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _StackEdit_vue_vue_type_template_id_8eb78f2a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./StackEdit.vue?vue&type=template&id=8eb78f2a& */ \"./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=template&id=8eb78f2a&\");\n/* harmony import */ var _StackEdit_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./StackEdit.vue?vue&type=script&lang=js& */ \"./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport *//* harmony import */ var _node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js */ \"./node_modules/vue-loader/lib/runtime/componentNormalizer.js\");\n\n\n\n\n\n/* normalize component */\n\nvar component = Object(_node_modules_vue_loader_lib_runtime_componentNormalizer_js__WEBPACK_IMPORTED_MODULE_2__[\"default\"])(\n  _StackEdit_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  _StackEdit_vue_vue_type_template_id_8eb78f2a___WEBPACK_IMPORTED_MODULE_0__[\"render\"],\n  _StackEdit_vue_vue_type_template_id_8eb78f2a___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"],\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (false) { var api; }\ncomponent.options.__file = \"resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue\"\n/* harmony default export */ __webpack_exports__[\"default\"] = (component.exports);//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9TdGFja0VkaXQudnVlP2IzMjkiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBd0Y7QUFDM0I7QUFDTDs7O0FBR3hEO0FBQ3NHO0FBQ3RHLGdCQUFnQiwyR0FBVTtBQUMxQixFQUFFLCtFQUFNO0FBQ1IsRUFBRSxvRkFBTTtBQUNSLEVBQUUsNkZBQWU7QUFDakI7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7QUFDQSxJQUFJLEtBQVUsRUFBRSxZQWlCZjtBQUNEO0FBQ2UsZ0YiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9TdGFja0VkaXQudnVlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgcmVuZGVyLCBzdGF0aWNSZW5kZXJGbnMgfSBmcm9tIFwiLi9TdGFja0VkaXQudnVlP3Z1ZSZ0eXBlPXRlbXBsYXRlJmlkPThlYjc4ZjJhJlwiXG5pbXBvcnQgc2NyaXB0IGZyb20gXCIuL1N0YWNrRWRpdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcbmV4cG9ydCAqIGZyb20gXCIuL1N0YWNrRWRpdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCJcblxuXG4vKiBub3JtYWxpemUgY29tcG9uZW50ICovXG5pbXBvcnQgbm9ybWFsaXplciBmcm9tIFwiIS4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9ydW50aW1lL2NvbXBvbmVudE5vcm1hbGl6ZXIuanNcIlxudmFyIGNvbXBvbmVudCA9IG5vcm1hbGl6ZXIoXG4gIHNjcmlwdCxcbiAgcmVuZGVyLFxuICBzdGF0aWNSZW5kZXJGbnMsXG4gIGZhbHNlLFxuICBudWxsLFxuICBudWxsLFxuICBudWxsXG4gIFxuKVxuXG4vKiBob3QgcmVsb2FkICovXG5pZiAobW9kdWxlLmhvdCkge1xuICB2YXIgYXBpID0gcmVxdWlyZShcIi9Vc2Vycy9wZXltYW4vRGV2ZWxvcGVyL3ByZXNzL3ByZXNzL3BhY2thZ2VzL2xhcmFwcmVzcy1wYWdlcy9ub2RlX21vZHVsZXMvdnVlLWhvdC1yZWxvYWQtYXBpL2Rpc3QvaW5kZXguanNcIilcbiAgYXBpLmluc3RhbGwocmVxdWlyZSgndnVlJykpXG4gIGlmIChhcGkuY29tcGF0aWJsZSkge1xuICAgIG1vZHVsZS5ob3QuYWNjZXB0KClcbiAgICBpZiAoIWFwaS5pc1JlY29yZGVkKCc4ZWI3OGYyYScpKSB7XG4gICAgICBhcGkuY3JlYXRlUmVjb3JkKCc4ZWI3OGYyYScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVsb2FkKCc4ZWI3OGYyYScsIGNvbXBvbmVudC5vcHRpb25zKVxuICAgIH1cbiAgICBtb2R1bGUuaG90LmFjY2VwdChcIi4vU3RhY2tFZGl0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD04ZWI3OGYyYSZcIiwgZnVuY3Rpb24gKCkge1xuICAgICAgYXBpLnJlcmVuZGVyKCc4ZWI3OGYyYScsIHtcbiAgICAgICAgcmVuZGVyOiByZW5kZXIsXG4gICAgICAgIHN0YXRpY1JlbmRlckZuczogc3RhdGljUmVuZGVyRm5zXG4gICAgICB9KVxuICAgIH0pXG4gIH1cbn1cbmNvbXBvbmVudC5vcHRpb25zLl9fZmlsZSA9IFwicmVzb3VyY2VzL2pzL0xpYi92dWV0aWZ5LWZvcm1qc29uL0ZpZWxkcy9TdGFja0VkaXQvU3RhY2tFZGl0LnZ1ZVwiXG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnQuZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue\n");

/***/ }),

/***/ "./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=script&lang=js&":
/*!***************************************************************************************************!*\
  !*** ./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=script&lang=js& ***!
  \***************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StackEdit_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../node_modules/babel-loader/lib??ref--4-0!../../../../../../node_modules/vue-loader/lib??vue-loader-options!./StackEdit.vue?vue&type=script&lang=js& */ \"./node_modules/babel-loader/lib/index.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=script&lang=js&\");\n/* empty/unused harmony star reexport */ /* harmony default export */ __webpack_exports__[\"default\"] = (_node_modules_babel_loader_lib_index_js_ref_4_0_node_modules_vue_loader_lib_index_js_vue_loader_options_StackEdit_vue_vue_type_script_lang_js___WEBPACK_IMPORTED_MODULE_0__[\"default\"]); //# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9TdGFja0VkaXQudnVlP2ZiOTYiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBLHdDQUEyTSxDQUFnQixxUEFBRyxFQUFDIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL0xpYi92dWV0aWZ5LWZvcm1qc29uL0ZpZWxkcy9TdGFja0VkaXQvU3RhY2tFZGl0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgbW9kIGZyb20gXCItIS4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9iYWJlbC1sb2FkZXIvbGliL2luZGV4LmpzPz9yZWYtLTQtMCEuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvaW5kZXguanM/P3Z1ZS1sb2FkZXItb3B0aW9ucyEuL1N0YWNrRWRpdC52dWU/dnVlJnR5cGU9c2NyaXB0Jmxhbmc9anMmXCI7IGV4cG9ydCBkZWZhdWx0IG1vZDsgZXhwb3J0ICogZnJvbSBcIi0hLi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2JhYmVsLWxvYWRlci9saWIvaW5kZXguanM/P3JlZi0tNC0wIS4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vU3RhY2tFZGl0LnZ1ZT92dWUmdHlwZT1zY3JpcHQmbGFuZz1qcyZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=script&lang=js&\n");

/***/ }),

/***/ "./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=template&id=8eb78f2a&":
/*!*********************************************************************************************************!*\
  !*** ./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=template&id=8eb78f2a& ***!
  \*********************************************************************************************************/
/*! exports provided: render, staticRenderFns */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StackEdit_vue_vue_type_template_id_8eb78f2a___WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! -!../../../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../../../node_modules/vue-loader/lib??vue-loader-options!./StackEdit.vue?vue&type=template&id=8eb78f2a& */ \"./node_modules/vue-loader/lib/loaders/templateLoader.js?!./node_modules/vue-loader/lib/index.js?!./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=template&id=8eb78f2a&\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"render\", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StackEdit_vue_vue_type_template_id_8eb78f2a___WEBPACK_IMPORTED_MODULE_0__[\"render\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"staticRenderFns\", function() { return _node_modules_vue_loader_lib_loaders_templateLoader_js_vue_loader_options_node_modules_vue_loader_lib_index_js_vue_loader_options_StackEdit_vue_vue_type_template_id_8eb78f2a___WEBPACK_IMPORTED_MODULE_0__[\"staticRenderFns\"]; });\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9TdGFja0VkaXQudnVlPzYwNjAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBIiwiZmlsZSI6Ii4vcmVzb3VyY2VzL2pzL0xpYi92dWV0aWZ5LWZvcm1qc29uL0ZpZWxkcy9TdGFja0VkaXQvU3RhY2tFZGl0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD04ZWI3OGYyYSYuanMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgKiBmcm9tIFwiLSEuLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvdnVlLWxvYWRlci9saWIvbG9hZGVycy90ZW1wbGF0ZUxvYWRlci5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4uLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy92dWUtbG9hZGVyL2xpYi9pbmRleC5qcz8/dnVlLWxvYWRlci1vcHRpb25zIS4vU3RhY2tFZGl0LnZ1ZT92dWUmdHlwZT10ZW1wbGF0ZSZpZD04ZWI3OGYyYSZcIiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/Lib/vuetify-formjson/Fields/StackEdit/StackEdit.vue?vue&type=template&id=8eb78f2a&\n");

/***/ }),

/***/ "./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/index.js":
/*!********************************************************************************!*\
  !*** ./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/index.js ***!
  \********************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _katexExtension__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./katexExtension */ \"./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/katexExtension.js\");\n/* harmony import */ var _markdownExtension__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./markdownExtension */ \"./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/markdownExtension.js\");\n// import './emojiExtension';\n// import './abcExtension';\n\n // import './mermaidExtension';//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9leHRlbnNpb25zL2luZGV4LmpzPzMzOGQiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0NBRUEiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9leHRlbnNpb25zL2luZGV4LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gaW1wb3J0ICcuL2Vtb2ppRXh0ZW5zaW9uJztcbi8vIGltcG9ydCAnLi9hYmNFeHRlbnNpb24nO1xuaW1wb3J0ICcuL2thdGV4RXh0ZW5zaW9uJztcbmltcG9ydCAnLi9tYXJrZG93bkV4dGVuc2lvbic7XG4vLyBpbXBvcnQgJy4vbWVybWFpZEV4dGVuc2lvbic7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/index.js\n");

/***/ }),

/***/ "./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/katexExtension.js":
/*!*****************************************************************************************!*\
  !*** ./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/katexExtension.js ***!
  \*****************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var katex__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! katex */ \"./node_modules/katex/dist/katex.js\");\n/* harmony import */ var katex__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(katex__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _libs_markdownItMath__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./libs/markdownItMath */ \"./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/libs/markdownItMath.js\");\n/* harmony import */ var _services_extensionSvc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../services/extensionSvc */ \"./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/extensionSvc.js\");\n\n\n\n_services_extensionSvc__WEBPACK_IMPORTED_MODULE_2__[\"default\"].onGetOptions(function (options, properties) {\n  options.math = properties.extensions.katex.enabled;\n});\n_services_extensionSvc__WEBPACK_IMPORTED_MODULE_2__[\"default\"].onInitConverter(2, function (markdown, options) {\n  if (options.math) {\n    markdown.use(_libs_markdownItMath__WEBPACK_IMPORTED_MODULE_1__[\"default\"]);\n\n    markdown.renderer.rules.inline_math = function (tokens, idx) {\n      return \"<span class=\\\"katex--inline\\\">\".concat(markdown.utils.escapeHtml(tokens[idx].content), \"</span>\");\n    };\n\n    markdown.renderer.rules.display_math = function (tokens, idx) {\n      return \"<span class=\\\"katex--display\\\">\".concat(markdown.utils.escapeHtml(tokens[idx].content), \"</span>\");\n    };\n  }\n});\n_services_extensionSvc__WEBPACK_IMPORTED_MODULE_2__[\"default\"].onSectionPreview(function (elt) {\n  var highlighter = function highlighter(displayMode) {\n    return function (katexElt) {\n      if (!katexElt.highlighted) {\n        try {\n          katex__WEBPACK_IMPORTED_MODULE_0___default.a.render(katexElt.textContent, katexElt, {\n            displayMode: displayMode\n          });\n        } catch (e) {\n          katexElt.textContent = \"\".concat(e.message);\n        }\n      }\n\n      katexElt.highlighted = true;\n    };\n  };\n\n  elt.querySelectorAll('.katex--inline').cl_each(highlighter(false));\n  elt.querySelectorAll('.katex--display').cl_each(highlighter(true));\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9leHRlbnNpb25zL2thdGV4RXh0ZW5zaW9uLmpzPzVmN2EiXSwibmFtZXMiOlsiZXh0ZW5zaW9uU3ZjIiwib25HZXRPcHRpb25zIiwib3B0aW9ucyIsInByb3BlcnRpZXMiLCJtYXRoIiwiZXh0ZW5zaW9ucyIsImthdGV4IiwiZW5hYmxlZCIsIm9uSW5pdENvbnZlcnRlciIsIm1hcmtkb3duIiwidXNlIiwibWFya2Rvd25JdE1hdGgiLCJyZW5kZXJlciIsInJ1bGVzIiwiaW5saW5lX21hdGgiLCJ0b2tlbnMiLCJpZHgiLCJ1dGlscyIsImVzY2FwZUh0bWwiLCJjb250ZW50IiwiZGlzcGxheV9tYXRoIiwib25TZWN0aW9uUHJldmlldyIsImVsdCIsImhpZ2hsaWdodGVyIiwiZGlzcGxheU1vZGUiLCJrYXRleEVsdCIsImhpZ2hsaWdodGVkIiwicmVuZGVyIiwidGV4dENvbnRlbnQiLCJlIiwibWVzc2FnZSIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjbF9lYWNoIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBRUFBLDhEQUFZLENBQUNDLFlBQWIsQ0FBMEIsVUFBQ0MsT0FBRCxFQUFVQyxVQUFWLEVBQXlCO0FBQy9DRCxTQUFPLENBQUNFLElBQVIsR0FBZUQsVUFBVSxDQUFDRSxVQUFYLENBQXNCQyxLQUF0QixDQUE0QkMsT0FBM0M7QUFDSCxDQUZEO0FBSUFQLDhEQUFZLENBQUNRLGVBQWIsQ0FBNkIsQ0FBN0IsRUFBZ0MsVUFBQ0MsUUFBRCxFQUFXUCxPQUFYLEVBQXVCO0FBQ25ELE1BQUlBLE9BQU8sQ0FBQ0UsSUFBWixFQUFrQjtBQUNkSyxZQUFRLENBQUNDLEdBQVQsQ0FBYUMsNERBQWI7O0FBQ0FGLFlBQVEsQ0FBQ0csUUFBVCxDQUFrQkMsS0FBbEIsQ0FBd0JDLFdBQXhCLEdBQXNDLFVBQUNDLE1BQUQsRUFBU0MsR0FBVDtBQUFBLHFEQUNIUCxRQUFRLENBQUNRLEtBQVQsQ0FBZUMsVUFBZixDQUEwQkgsTUFBTSxDQUFDQyxHQUFELENBQU4sQ0FBWUcsT0FBdEMsQ0FERztBQUFBLEtBQXRDOztBQUVBVixZQUFRLENBQUNHLFFBQVQsQ0FBa0JDLEtBQWxCLENBQXdCTyxZQUF4QixHQUF1QyxVQUFDTCxNQUFELEVBQVNDLEdBQVQ7QUFBQSxzREFDSFAsUUFBUSxDQUFDUSxLQUFULENBQWVDLFVBQWYsQ0FBMEJILE1BQU0sQ0FBQ0MsR0FBRCxDQUFOLENBQVlHLE9BQXRDLENBREc7QUFBQSxLQUF2QztBQUVIO0FBQ0osQ0FSRDtBQVVBbkIsOERBQVksQ0FBQ3FCLGdCQUFiLENBQThCLFVBQUNDLEdBQUQsRUFBUztBQUNuQyxNQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBYyxDQUFBQyxXQUFXO0FBQUEsV0FBSSxVQUFDQyxRQUFELEVBQWM7QUFDN0MsVUFBSSxDQUFDQSxRQUFRLENBQUNDLFdBQWQsRUFBMkI7QUFDdkIsWUFBSTtBQUNBcEIsc0RBQUssQ0FBQ3FCLE1BQU4sQ0FBYUYsUUFBUSxDQUFDRyxXQUF0QixFQUFtQ0gsUUFBbkMsRUFBNkM7QUFBRUQsdUJBQVcsRUFBWEE7QUFBRixXQUE3QztBQUNILFNBRkQsQ0FFRSxPQUFPSyxDQUFQLEVBQVU7QUFDUkosa0JBQVEsQ0FBQ0csV0FBVCxhQUEwQkMsQ0FBQyxDQUFDQyxPQUE1QjtBQUNIO0FBQ0o7O0FBQ0RMLGNBQVEsQ0FBQ0MsV0FBVCxHQUF1QixJQUF2QjtBQUNILEtBVDhCO0FBQUEsR0FBL0I7O0FBVUFKLEtBQUcsQ0FBQ1MsZ0JBQUosQ0FBcUIsZ0JBQXJCLEVBQXVDQyxPQUF2QyxDQUErQ1QsV0FBVyxDQUFDLEtBQUQsQ0FBMUQ7QUFDQUQsS0FBRyxDQUFDUyxnQkFBSixDQUFxQixpQkFBckIsRUFBd0NDLE9BQXhDLENBQWdEVCxXQUFXLENBQUMsSUFBRCxDQUEzRDtBQUNILENBYkQiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9leHRlbnNpb25zL2thdGV4RXh0ZW5zaW9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGthdGV4IGZyb20gJ2thdGV4JztcbmltcG9ydCBtYXJrZG93bkl0TWF0aCBmcm9tICcuL2xpYnMvbWFya2Rvd25JdE1hdGgnO1xuaW1wb3J0IGV4dGVuc2lvblN2YyBmcm9tICcuLi9zZXJ2aWNlcy9leHRlbnNpb25TdmMnO1xuXG5leHRlbnNpb25TdmMub25HZXRPcHRpb25zKChvcHRpb25zLCBwcm9wZXJ0aWVzKSA9PiB7XG4gICAgb3B0aW9ucy5tYXRoID0gcHJvcGVydGllcy5leHRlbnNpb25zLmthdGV4LmVuYWJsZWQ7XG59KTtcblxuZXh0ZW5zaW9uU3ZjLm9uSW5pdENvbnZlcnRlcigyLCAobWFya2Rvd24sIG9wdGlvbnMpID0+IHtcbiAgICBpZiAob3B0aW9ucy5tYXRoKSB7XG4gICAgICAgIG1hcmtkb3duLnVzZShtYXJrZG93bkl0TWF0aCk7XG4gICAgICAgIG1hcmtkb3duLnJlbmRlcmVyLnJ1bGVzLmlubGluZV9tYXRoID0gKHRva2VucywgaWR4KSA9PlxuICAgICAgICAgICAgYDxzcGFuIGNsYXNzPVwia2F0ZXgtLWlubGluZVwiPiR7bWFya2Rvd24udXRpbHMuZXNjYXBlSHRtbCh0b2tlbnNbaWR4XS5jb250ZW50KX08L3NwYW4+YDtcbiAgICAgICAgbWFya2Rvd24ucmVuZGVyZXIucnVsZXMuZGlzcGxheV9tYXRoID0gKHRva2VucywgaWR4KSA9PlxuICAgICAgICAgICAgYDxzcGFuIGNsYXNzPVwia2F0ZXgtLWRpc3BsYXlcIj4ke21hcmtkb3duLnV0aWxzLmVzY2FwZUh0bWwodG9rZW5zW2lkeF0uY29udGVudCl9PC9zcGFuPmA7XG4gICAgfVxufSk7XG5cbmV4dGVuc2lvblN2Yy5vblNlY3Rpb25QcmV2aWV3KChlbHQpID0+IHtcbiAgICBjb25zdCBoaWdobGlnaHRlciA9IGRpc3BsYXlNb2RlID0+IChrYXRleEVsdCkgPT4ge1xuICAgICAgICBpZiAoIWthdGV4RWx0LmhpZ2hsaWdodGVkKSB7XG4gICAgICAgICAgICB0cnkge1xuICAgICAgICAgICAgICAgIGthdGV4LnJlbmRlcihrYXRleEVsdC50ZXh0Q29udGVudCwga2F0ZXhFbHQsIHsgZGlzcGxheU1vZGUgfSk7XG4gICAgICAgICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgICAgICAgICAga2F0ZXhFbHQudGV4dENvbnRlbnQgPSBgJHtlLm1lc3NhZ2V9YDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBrYXRleEVsdC5oaWdobGlnaHRlZCA9IHRydWU7XG4gICAgfTtcbiAgICBlbHQucXVlcnlTZWxlY3RvckFsbCgnLmthdGV4LS1pbmxpbmUnKS5jbF9lYWNoKGhpZ2hsaWdodGVyKGZhbHNlKSk7XG4gICAgZWx0LnF1ZXJ5U2VsZWN0b3JBbGwoJy5rYXRleC0tZGlzcGxheScpLmNsX2VhY2goaGlnaGxpZ2h0ZXIodHJ1ZSkpO1xufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/katexExtension.js\n");

/***/ }),

/***/ "./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/libs/markdownItAnchor.js":
/*!************************************************************************************************!*\
  !*** ./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/libs/markdownItAnchor.js ***!
  \************************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (md) {\n  md.core.ruler.before('replacements', 'anchors', function (state) {\n    var anchorHash = {};\n    var headingOpenToken;\n    var headingContent;\n    state.tokens.forEach(function (token) {\n      if (token.type === 'heading_open') {\n        headingContent = '';\n        headingOpenToken = token;\n      } else if (token.type === 'heading_close') {\n        headingOpenToken.headingContent = headingContent; // According to http://pandoc.org/README.html#extension-auto_identifiers\n\n        var slug = headingContent.replace(/\\s/g, '-') // Replace all spaces and newlines with hyphens\n        .replace(/[\\0-,/:-@[-^`{-~]/g, '') // Remove all punctuation, except underscores, hyphens, and periods\n        .toLowerCase(); // Convert all alphabetic characters to lowercase\n        // Remove everything up to the first letter\n\n        var i;\n\n        for (i = 0; i < slug.length; i += 1) {\n          var charCode = slug.charCodeAt(i);\n\n          if (charCode >= 0x61 && charCode <= 0x7A || charCode > 0x7E) {\n            break;\n          }\n        } // If nothing left after this, use `section`\n\n\n        slug = slug.slice(i) || 'section';\n        var anchor = slug;\n        var index = 1;\n\n        while (Object.prototype.hasOwnProperty.call(anchorHash, anchor)) {\n          anchor = \"\".concat(slug, \"-\").concat(index);\n          index += 1;\n        }\n\n        anchorHash[anchor] = true;\n        headingOpenToken.headingAnchor = anchor;\n        headingOpenToken.attrs = [['id', anchor]];\n        headingOpenToken = undefined;\n      } else if (headingOpenToken) {\n        headingContent += token.children.reduce(function (result, child) {\n          if (child.type !== 'footnote_ref') {\n            return result + child.content;\n          }\n\n          return result;\n        }, '');\n      }\n    });\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9leHRlbnNpb25zL2xpYnMvbWFya2Rvd25JdEFuY2hvci5qcz8zZmY5Il0sIm5hbWVzIjpbIm1kIiwiY29yZSIsInJ1bGVyIiwiYmVmb3JlIiwic3RhdGUiLCJhbmNob3JIYXNoIiwiaGVhZGluZ09wZW5Ub2tlbiIsImhlYWRpbmdDb250ZW50IiwidG9rZW5zIiwiZm9yRWFjaCIsInRva2VuIiwidHlwZSIsInNsdWciLCJyZXBsYWNlIiwidG9Mb3dlckNhc2UiLCJpIiwibGVuZ3RoIiwiY2hhckNvZGUiLCJjaGFyQ29kZUF0Iiwic2xpY2UiLCJhbmNob3IiLCJpbmRleCIsIk9iamVjdCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImhlYWRpbmdBbmNob3IiLCJhdHRycyIsInVuZGVmaW5lZCIsImNoaWxkcmVuIiwicmVkdWNlIiwicmVzdWx0IiwiY2hpbGQiLCJjb250ZW50Il0sIm1hcHBpbmdzIjoiQUFBQTtBQUFlLHlFQUFDQSxFQUFELEVBQVE7QUFDckJBLElBQUUsQ0FBQ0MsSUFBSCxDQUFRQyxLQUFSLENBQWNDLE1BQWQsQ0FBcUIsY0FBckIsRUFBcUMsU0FBckMsRUFBZ0QsVUFBQ0MsS0FBRCxFQUFXO0FBQ3pELFFBQU1DLFVBQVUsR0FBRyxFQUFuQjtBQUNBLFFBQUlDLGdCQUFKO0FBQ0EsUUFBSUMsY0FBSjtBQUNBSCxTQUFLLENBQUNJLE1BQU4sQ0FBYUMsT0FBYixDQUFxQixVQUFDQyxLQUFELEVBQVc7QUFDOUIsVUFBSUEsS0FBSyxDQUFDQyxJQUFOLEtBQWUsY0FBbkIsRUFBbUM7QUFDakNKLHNCQUFjLEdBQUcsRUFBakI7QUFDQUQsd0JBQWdCLEdBQUdJLEtBQW5CO0FBQ0QsT0FIRCxNQUdPLElBQUlBLEtBQUssQ0FBQ0MsSUFBTixLQUFlLGVBQW5CLEVBQW9DO0FBQ3pDTCx3QkFBZ0IsQ0FBQ0MsY0FBakIsR0FBa0NBLGNBQWxDLENBRHlDLENBR3pDOztBQUNBLFlBQUlLLElBQUksR0FBR0wsY0FBYyxDQUN0Qk0sT0FEUSxDQUNBLEtBREEsRUFDTyxHQURQLEVBQ1k7QUFEWixTQUVSQSxPQUZRLENBRUEsb0JBRkEsRUFFc0IsRUFGdEIsRUFFMEI7QUFGMUIsU0FHUkMsV0FIUSxFQUFYLENBSnlDLENBT3ZCO0FBRWxCOztBQUNBLFlBQUlDLENBQUo7O0FBQ0EsYUFBS0EsQ0FBQyxHQUFHLENBQVQsRUFBWUEsQ0FBQyxHQUFHSCxJQUFJLENBQUNJLE1BQXJCLEVBQTZCRCxDQUFDLElBQUksQ0FBbEMsRUFBcUM7QUFDbkMsY0FBTUUsUUFBUSxHQUFHTCxJQUFJLENBQUNNLFVBQUwsQ0FBZ0JILENBQWhCLENBQWpCOztBQUNBLGNBQUtFLFFBQVEsSUFBSSxJQUFaLElBQW9CQSxRQUFRLElBQUksSUFBakMsSUFBMENBLFFBQVEsR0FBRyxJQUF6RCxFQUErRDtBQUM3RDtBQUNEO0FBQ0YsU0FoQndDLENBa0J6Qzs7O0FBQ0FMLFlBQUksR0FBR0EsSUFBSSxDQUFDTyxLQUFMLENBQVdKLENBQVgsS0FBaUIsU0FBeEI7QUFFQSxZQUFJSyxNQUFNLEdBQUdSLElBQWI7QUFDQSxZQUFJUyxLQUFLLEdBQUcsQ0FBWjs7QUFDQSxlQUFPQyxNQUFNLENBQUNDLFNBQVAsQ0FBaUJDLGNBQWpCLENBQWdDQyxJQUFoQyxDQUFxQ3BCLFVBQXJDLEVBQWlEZSxNQUFqRCxDQUFQLEVBQWlFO0FBQy9EQSxnQkFBTSxhQUFNUixJQUFOLGNBQWNTLEtBQWQsQ0FBTjtBQUNBQSxlQUFLLElBQUksQ0FBVDtBQUNEOztBQUNEaEIsa0JBQVUsQ0FBQ2UsTUFBRCxDQUFWLEdBQXFCLElBQXJCO0FBQ0FkLHdCQUFnQixDQUFDb0IsYUFBakIsR0FBaUNOLE1BQWpDO0FBQ0FkLHdCQUFnQixDQUFDcUIsS0FBakIsR0FBeUIsQ0FDdkIsQ0FBQyxJQUFELEVBQU9QLE1BQVAsQ0FEdUIsQ0FBekI7QUFHQWQsd0JBQWdCLEdBQUdzQixTQUFuQjtBQUNELE9BakNNLE1BaUNBLElBQUl0QixnQkFBSixFQUFzQjtBQUMzQkMsc0JBQWMsSUFBSUcsS0FBSyxDQUFDbUIsUUFBTixDQUFlQyxNQUFmLENBQXNCLFVBQUNDLE1BQUQsRUFBU0MsS0FBVCxFQUFtQjtBQUN6RCxjQUFJQSxLQUFLLENBQUNyQixJQUFOLEtBQWUsY0FBbkIsRUFBbUM7QUFDakMsbUJBQU9vQixNQUFNLEdBQUdDLEtBQUssQ0FBQ0MsT0FBdEI7QUFDRDs7QUFDRCxpQkFBT0YsTUFBUDtBQUNELFNBTGlCLEVBS2YsRUFMZSxDQUFsQjtBQU1EO0FBQ0YsS0E3Q0Q7QUE4Q0QsR0FsREQ7QUFtREQsQ0FwREQiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9leHRlbnNpb25zL2xpYnMvbWFya2Rvd25JdEFuY2hvci5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IChtZCkgPT4ge1xuICBtZC5jb3JlLnJ1bGVyLmJlZm9yZSgncmVwbGFjZW1lbnRzJywgJ2FuY2hvcnMnLCAoc3RhdGUpID0+IHtcbiAgICBjb25zdCBhbmNob3JIYXNoID0ge307XG4gICAgbGV0IGhlYWRpbmdPcGVuVG9rZW47XG4gICAgbGV0IGhlYWRpbmdDb250ZW50O1xuICAgIHN0YXRlLnRva2Vucy5mb3JFYWNoKCh0b2tlbikgPT4ge1xuICAgICAgaWYgKHRva2VuLnR5cGUgPT09ICdoZWFkaW5nX29wZW4nKSB7XG4gICAgICAgIGhlYWRpbmdDb250ZW50ID0gJyc7XG4gICAgICAgIGhlYWRpbmdPcGVuVG9rZW4gPSB0b2tlbjtcbiAgICAgIH0gZWxzZSBpZiAodG9rZW4udHlwZSA9PT0gJ2hlYWRpbmdfY2xvc2UnKSB7XG4gICAgICAgIGhlYWRpbmdPcGVuVG9rZW4uaGVhZGluZ0NvbnRlbnQgPSBoZWFkaW5nQ29udGVudDtcblxuICAgICAgICAvLyBBY2NvcmRpbmcgdG8gaHR0cDovL3BhbmRvYy5vcmcvUkVBRE1FLmh0bWwjZXh0ZW5zaW9uLWF1dG9faWRlbnRpZmllcnNcbiAgICAgICAgbGV0IHNsdWcgPSBoZWFkaW5nQ29udGVudFxuICAgICAgICAgIC5yZXBsYWNlKC9cXHMvZywgJy0nKSAvLyBSZXBsYWNlIGFsbCBzcGFjZXMgYW5kIG5ld2xpbmVzIHdpdGggaHlwaGVuc1xuICAgICAgICAgIC5yZXBsYWNlKC9bXFwwLSwvOi1AWy1eYHstfl0vZywgJycpIC8vIFJlbW92ZSBhbGwgcHVuY3R1YXRpb24sIGV4Y2VwdCB1bmRlcnNjb3JlcywgaHlwaGVucywgYW5kIHBlcmlvZHNcbiAgICAgICAgICAudG9Mb3dlckNhc2UoKTsgLy8gQ29udmVydCBhbGwgYWxwaGFiZXRpYyBjaGFyYWN0ZXJzIHRvIGxvd2VyY2FzZVxuXG4gICAgICAgIC8vIFJlbW92ZSBldmVyeXRoaW5nIHVwIHRvIHRoZSBmaXJzdCBsZXR0ZXJcbiAgICAgICAgbGV0IGk7XG4gICAgICAgIGZvciAoaSA9IDA7IGkgPCBzbHVnLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICAgICAgY29uc3QgY2hhckNvZGUgPSBzbHVnLmNoYXJDb2RlQXQoaSk7XG4gICAgICAgICAgaWYgKChjaGFyQ29kZSA+PSAweDYxICYmIGNoYXJDb2RlIDw9IDB4N0EpIHx8IGNoYXJDb2RlID4gMHg3RSkge1xuICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgLy8gSWYgbm90aGluZyBsZWZ0IGFmdGVyIHRoaXMsIHVzZSBgc2VjdGlvbmBcbiAgICAgICAgc2x1ZyA9IHNsdWcuc2xpY2UoaSkgfHwgJ3NlY3Rpb24nO1xuXG4gICAgICAgIGxldCBhbmNob3IgPSBzbHVnO1xuICAgICAgICBsZXQgaW5kZXggPSAxO1xuICAgICAgICB3aGlsZSAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKGFuY2hvckhhc2gsIGFuY2hvcikpIHtcbiAgICAgICAgICBhbmNob3IgPSBgJHtzbHVnfS0ke2luZGV4fWA7XG4gICAgICAgICAgaW5kZXggKz0gMTtcbiAgICAgICAgfVxuICAgICAgICBhbmNob3JIYXNoW2FuY2hvcl0gPSB0cnVlO1xuICAgICAgICBoZWFkaW5nT3BlblRva2VuLmhlYWRpbmdBbmNob3IgPSBhbmNob3I7XG4gICAgICAgIGhlYWRpbmdPcGVuVG9rZW4uYXR0cnMgPSBbXG4gICAgICAgICAgWydpZCcsIGFuY2hvcl0sXG4gICAgICAgIF07XG4gICAgICAgIGhlYWRpbmdPcGVuVG9rZW4gPSB1bmRlZmluZWQ7XG4gICAgICB9IGVsc2UgaWYgKGhlYWRpbmdPcGVuVG9rZW4pIHtcbiAgICAgICAgaGVhZGluZ0NvbnRlbnQgKz0gdG9rZW4uY2hpbGRyZW4ucmVkdWNlKChyZXN1bHQsIGNoaWxkKSA9PiB7XG4gICAgICAgICAgaWYgKGNoaWxkLnR5cGUgIT09ICdmb290bm90ZV9yZWYnKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0ICsgY2hpbGQuY29udGVudDtcbiAgICAgICAgICB9XG4gICAgICAgICAgcmV0dXJuIHJlc3VsdDtcbiAgICAgICAgfSwgJycpO1xuICAgICAgfVxuICAgIH0pO1xuICB9KTtcbn07XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/libs/markdownItAnchor.js\n");

/***/ }),

/***/ "./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/libs/markdownItMath.js":
/*!**********************************************************************************************!*\
  !*** ./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/libs/markdownItMath.js ***!
  \**********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction texMath(state, silent) {\n  var startMathPos = state.pos;\n\n  if (state.src.charCodeAt(startMathPos) !== 0x24\n  /* $ */\n  ) {\n      return false;\n    } // Parse tex math according to http://pandoc.org/README.html#math\n\n\n  var endMarker = '$';\n  startMathPos += 1;\n  var afterStartMarker = state.src.charCodeAt(startMathPos);\n\n  if (afterStartMarker === 0x24\n  /* $ */\n  ) {\n      endMarker = '$$';\n      startMathPos += 1;\n\n      if (state.src.charCodeAt(startMathPos) === 0x24\n      /* $ */\n      ) {\n          // 3 markers are too much\n          return false;\n        }\n    } else if ( // Skip if opening $ is succeeded by a space character\n  afterStartMarker === 0x20\n  /* space */\n  || afterStartMarker === 0x09\n  /* \\t */\n  || afterStartMarker === 0x0a\n  /* \\n */\n  ) {\n      return false;\n    }\n\n  var endMarkerPos = state.src.indexOf(endMarker, startMathPos);\n\n  if (endMarkerPos === -1) {\n    return false;\n  }\n\n  if (state.src.charCodeAt(endMarkerPos - 1) === 0x5C\n  /* \\ */\n  ) {\n      return false;\n    }\n\n  var nextPos = endMarkerPos + endMarker.length;\n\n  if (endMarker.length === 1) {\n    // Skip if $ is preceded by a space character\n    var beforeEndMarker = state.src.charCodeAt(endMarkerPos - 1);\n\n    if (beforeEndMarker === 0x20\n    /* space */\n    || beforeEndMarker === 0x09\n    /* \\t */\n    || beforeEndMarker === 0x0a\n    /* \\n */\n    ) {\n        return false;\n      } // Skip if closing $ is succeeded by a digit (eg $5 $10 ...)\n\n\n    var suffix = state.src.charCodeAt(nextPos);\n\n    if (suffix >= 0x30 && suffix < 0x3A) {\n      return false;\n    }\n  }\n\n  if (!silent) {\n    var token = state.push(endMarker.length === 1 ? 'inline_math' : 'display_math', '', 0);\n    token.content = state.src.slice(startMathPos, endMarkerPos);\n  }\n\n  state.pos = nextPos;\n  return true;\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (function (md) {\n  md.inline.ruler.push('texMath', texMath);\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9leHRlbnNpb25zL2xpYnMvbWFya2Rvd25JdE1hdGguanM/ZjQ3MiJdLCJuYW1lcyI6WyJ0ZXhNYXRoIiwic3RhdGUiLCJzaWxlbnQiLCJzdGFydE1hdGhQb3MiLCJwb3MiLCJzcmMiLCJjaGFyQ29kZUF0IiwiZW5kTWFya2VyIiwiYWZ0ZXJTdGFydE1hcmtlciIsImVuZE1hcmtlclBvcyIsImluZGV4T2YiLCJuZXh0UG9zIiwibGVuZ3RoIiwiYmVmb3JlRW5kTWFya2VyIiwic3VmZml4IiwidG9rZW4iLCJwdXNoIiwiY29udGVudCIsInNsaWNlIiwibWQiLCJpbmxpbmUiLCJydWxlciJdLCJtYXBwaW5ncyI6IkFBQUE7QUFBQSxTQUFTQSxPQUFULENBQWlCQyxLQUFqQixFQUF3QkMsTUFBeEIsRUFBZ0M7QUFDOUIsTUFBSUMsWUFBWSxHQUFHRixLQUFLLENBQUNHLEdBQXpCOztBQUNBLE1BQUlILEtBQUssQ0FBQ0ksR0FBTixDQUFVQyxVQUFWLENBQXFCSCxZQUFyQixNQUF1QztBQUFLO0FBQWhELElBQXlEO0FBQ3ZELGFBQU8sS0FBUDtBQUNELEtBSjZCLENBTTlCOzs7QUFDQSxNQUFJSSxTQUFTLEdBQUcsR0FBaEI7QUFDQUosY0FBWSxJQUFJLENBQWhCO0FBQ0EsTUFBTUssZ0JBQWdCLEdBQUdQLEtBQUssQ0FBQ0ksR0FBTixDQUFVQyxVQUFWLENBQXFCSCxZQUFyQixDQUF6Qjs7QUFDQSxNQUFJSyxnQkFBZ0IsS0FBSztBQUFLO0FBQTlCLElBQXVDO0FBQ3JDRCxlQUFTLEdBQUcsSUFBWjtBQUNBSixrQkFBWSxJQUFJLENBQWhCOztBQUNBLFVBQUlGLEtBQUssQ0FBQ0ksR0FBTixDQUFVQyxVQUFWLENBQXFCSCxZQUFyQixNQUF1QztBQUFLO0FBQWhELFFBQXlEO0FBQ3ZEO0FBQ0EsaUJBQU8sS0FBUDtBQUNEO0FBQ0YsS0FQRCxNQU9PLEtBQ0w7QUFDQUssa0JBQWdCLEtBQUs7QUFBSztBQUExQixLQUNHQSxnQkFBZ0IsS0FBSztBQUFLO0FBRDdCLEtBRUdBLGdCQUFnQixLQUFLO0FBQUs7QUFKeEIsSUFLTDtBQUNBLGFBQU8sS0FBUDtBQUNEOztBQUNELE1BQU1DLFlBQVksR0FBR1IsS0FBSyxDQUFDSSxHQUFOLENBQVVLLE9BQVYsQ0FBa0JILFNBQWxCLEVBQTZCSixZQUE3QixDQUFyQjs7QUFDQSxNQUFJTSxZQUFZLEtBQUssQ0FBQyxDQUF0QixFQUF5QjtBQUN2QixXQUFPLEtBQVA7QUFDRDs7QUFDRCxNQUFJUixLQUFLLENBQUNJLEdBQU4sQ0FBVUMsVUFBVixDQUFxQkcsWUFBWSxHQUFHLENBQXBDLE1BQTJDO0FBQUs7QUFBcEQsSUFBNkQ7QUFDM0QsYUFBTyxLQUFQO0FBQ0Q7O0FBQ0QsTUFBTUUsT0FBTyxHQUFHRixZQUFZLEdBQUdGLFNBQVMsQ0FBQ0ssTUFBekM7O0FBQ0EsTUFBSUwsU0FBUyxDQUFDSyxNQUFWLEtBQXFCLENBQXpCLEVBQTRCO0FBQzFCO0FBQ0EsUUFBTUMsZUFBZSxHQUFHWixLQUFLLENBQUNJLEdBQU4sQ0FBVUMsVUFBVixDQUFxQkcsWUFBWSxHQUFHLENBQXBDLENBQXhCOztBQUNBLFFBQUlJLGVBQWUsS0FBSztBQUFLO0FBQXpCLE9BQ0NBLGVBQWUsS0FBSztBQUFLO0FBRDFCLE9BRUNBLGVBQWUsS0FBSztBQUFLO0FBRjlCLE1BRXdDO0FBQ3RDLGVBQU8sS0FBUDtBQUNELE9BUHlCLENBUTFCOzs7QUFDQSxRQUFNQyxNQUFNLEdBQUdiLEtBQUssQ0FBQ0ksR0FBTixDQUFVQyxVQUFWLENBQXFCSyxPQUFyQixDQUFmOztBQUNBLFFBQUlHLE1BQU0sSUFBSSxJQUFWLElBQWtCQSxNQUFNLEdBQUcsSUFBL0IsRUFBcUM7QUFDbkMsYUFBTyxLQUFQO0FBQ0Q7QUFDRjs7QUFFRCxNQUFJLENBQUNaLE1BQUwsRUFBYTtBQUNYLFFBQU1hLEtBQUssR0FBR2QsS0FBSyxDQUFDZSxJQUFOLENBQVdULFNBQVMsQ0FBQ0ssTUFBVixLQUFxQixDQUFyQixHQUF5QixhQUF6QixHQUF5QyxjQUFwRCxFQUFvRSxFQUFwRSxFQUF3RSxDQUF4RSxDQUFkO0FBQ0FHLFNBQUssQ0FBQ0UsT0FBTixHQUFnQmhCLEtBQUssQ0FBQ0ksR0FBTixDQUFVYSxLQUFWLENBQWdCZixZQUFoQixFQUE4Qk0sWUFBOUIsQ0FBaEI7QUFDRDs7QUFDRFIsT0FBSyxDQUFDRyxHQUFOLEdBQVlPLE9BQVo7QUFDQSxTQUFPLElBQVA7QUFDRDs7QUFFYyx5RUFBQ1EsRUFBRCxFQUFRO0FBQ3JCQSxJQUFFLENBQUNDLE1BQUgsQ0FBVUMsS0FBVixDQUFnQkwsSUFBaEIsQ0FBcUIsU0FBckIsRUFBZ0NoQixPQUFoQztBQUNELENBRkQiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9leHRlbnNpb25zL2xpYnMvbWFya2Rvd25JdE1hdGguanMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJmdW5jdGlvbiB0ZXhNYXRoKHN0YXRlLCBzaWxlbnQpIHtcbiAgbGV0IHN0YXJ0TWF0aFBvcyA9IHN0YXRlLnBvcztcbiAgaWYgKHN0YXRlLnNyYy5jaGFyQ29kZUF0KHN0YXJ0TWF0aFBvcykgIT09IDB4MjQgLyogJCAqLykge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIC8vIFBhcnNlIHRleCBtYXRoIGFjY29yZGluZyB0byBodHRwOi8vcGFuZG9jLm9yZy9SRUFETUUuaHRtbCNtYXRoXG4gIGxldCBlbmRNYXJrZXIgPSAnJCc7XG4gIHN0YXJ0TWF0aFBvcyArPSAxO1xuICBjb25zdCBhZnRlclN0YXJ0TWFya2VyID0gc3RhdGUuc3JjLmNoYXJDb2RlQXQoc3RhcnRNYXRoUG9zKTtcbiAgaWYgKGFmdGVyU3RhcnRNYXJrZXIgPT09IDB4MjQgLyogJCAqLykge1xuICAgIGVuZE1hcmtlciA9ICckJCc7XG4gICAgc3RhcnRNYXRoUG9zICs9IDE7XG4gICAgaWYgKHN0YXRlLnNyYy5jaGFyQ29kZUF0KHN0YXJ0TWF0aFBvcykgPT09IDB4MjQgLyogJCAqLykge1xuICAgICAgLy8gMyBtYXJrZXJzIGFyZSB0b28gbXVjaFxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfSBlbHNlIGlmIChcbiAgICAvLyBTa2lwIGlmIG9wZW5pbmcgJCBpcyBzdWNjZWVkZWQgYnkgYSBzcGFjZSBjaGFyYWN0ZXJcbiAgICBhZnRlclN0YXJ0TWFya2VyID09PSAweDIwIC8qIHNwYWNlICovXG4gICAgfHwgYWZ0ZXJTdGFydE1hcmtlciA9PT0gMHgwOSAvKiBcXHQgKi9cbiAgICB8fCBhZnRlclN0YXJ0TWFya2VyID09PSAweDBhIC8qIFxcbiAqL1xuICApIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgY29uc3QgZW5kTWFya2VyUG9zID0gc3RhdGUuc3JjLmluZGV4T2YoZW5kTWFya2VyLCBzdGFydE1hdGhQb3MpO1xuICBpZiAoZW5kTWFya2VyUG9zID09PSAtMSkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBpZiAoc3RhdGUuc3JjLmNoYXJDb2RlQXQoZW5kTWFya2VyUG9zIC0gMSkgPT09IDB4NUMgLyogXFwgKi8pIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgY29uc3QgbmV4dFBvcyA9IGVuZE1hcmtlclBvcyArIGVuZE1hcmtlci5sZW5ndGg7XG4gIGlmIChlbmRNYXJrZXIubGVuZ3RoID09PSAxKSB7XG4gICAgLy8gU2tpcCBpZiAkIGlzIHByZWNlZGVkIGJ5IGEgc3BhY2UgY2hhcmFjdGVyXG4gICAgY29uc3QgYmVmb3JlRW5kTWFya2VyID0gc3RhdGUuc3JjLmNoYXJDb2RlQXQoZW5kTWFya2VyUG9zIC0gMSk7XG4gICAgaWYgKGJlZm9yZUVuZE1hcmtlciA9PT0gMHgyMCAvKiBzcGFjZSAqL1xuICAgICAgfHwgYmVmb3JlRW5kTWFya2VyID09PSAweDA5IC8qIFxcdCAqL1xuICAgICAgfHwgYmVmb3JlRW5kTWFya2VyID09PSAweDBhIC8qIFxcbiAqLykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICAvLyBTa2lwIGlmIGNsb3NpbmcgJCBpcyBzdWNjZWVkZWQgYnkgYSBkaWdpdCAoZWcgJDUgJDEwIC4uLilcbiAgICBjb25zdCBzdWZmaXggPSBzdGF0ZS5zcmMuY2hhckNvZGVBdChuZXh0UG9zKTtcbiAgICBpZiAoc3VmZml4ID49IDB4MzAgJiYgc3VmZml4IDwgMHgzQSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgfVxuXG4gIGlmICghc2lsZW50KSB7XG4gICAgY29uc3QgdG9rZW4gPSBzdGF0ZS5wdXNoKGVuZE1hcmtlci5sZW5ndGggPT09IDEgPyAnaW5saW5lX21hdGgnIDogJ2Rpc3BsYXlfbWF0aCcsICcnLCAwKTtcbiAgICB0b2tlbi5jb250ZW50ID0gc3RhdGUuc3JjLnNsaWNlKHN0YXJ0TWF0aFBvcywgZW5kTWFya2VyUG9zKTtcbiAgfVxuICBzdGF0ZS5wb3MgPSBuZXh0UG9zO1xuICByZXR1cm4gdHJ1ZTtcbn1cblxuZXhwb3J0IGRlZmF1bHQgKG1kKSA9PiB7XG4gIG1kLmlubGluZS5ydWxlci5wdXNoKCd0ZXhNYXRoJywgdGV4TWF0aCk7XG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/libs/markdownItMath.js\n");

/***/ }),

/***/ "./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/libs/markdownItTasklist.js":
/*!**************************************************************************************************!*\
  !*** ./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/libs/markdownItTasklist.js ***!
  \**************************************************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("function attrSet(token, name, value) {\n  var index = token.attrIndex(name);\n  var attr = [name, value];\n\n  if (index < 0) {\n    token.attrPush(attr);\n  } else {\n    token.attrs[index] = attr;\n  }\n}\n\nmodule.exports = function (md) {\n  md.core.ruler.after('inline', 'tasklist', function (_ref) {\n    var tokens = _ref.tokens,\n        Token = _ref.Token;\n\n    for (var i = 2; i < tokens.length; i += 1) {\n      var token = tokens[i];\n\n      if (token.content && token.content.charCodeAt(0) === 0x5b\n      /* [ */\n      && token.content.charCodeAt(2) === 0x5d\n      /* ] */\n      && token.content.charCodeAt(3) === 0x20\n      /* space */\n      && token.type === 'inline' && tokens[i - 1].type === 'paragraph_open' && tokens[i - 2].type === 'list_item_open') {\n        var cross = token.content[1].toLowerCase();\n\n        if (cross === ' ' || cross === 'x') {\n          var checkbox = new Token('html_inline', '', 0);\n\n          if (cross === ' ') {\n            checkbox.content = '<span class=\"task-list-item-checkbox\" type=\"checkbox\">&#9744;</span>';\n          } else {\n            checkbox.content = '<span class=\"task-list-item-checkbox checked\" type=\"checkbox\">&#9745;</span>';\n          }\n\n          token.children.unshift(checkbox);\n          token.children[1].content = token.children[1].content.slice(3);\n          token.content = token.content.slice(3);\n          attrSet(tokens[i - 2], 'class', 'task-list-item');\n        }\n      }\n    }\n  });\n};//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9leHRlbnNpb25zL2xpYnMvbWFya2Rvd25JdFRhc2tsaXN0LmpzP2Y4MTkiXSwibmFtZXMiOlsiYXR0clNldCIsInRva2VuIiwibmFtZSIsInZhbHVlIiwiaW5kZXgiLCJhdHRySW5kZXgiLCJhdHRyIiwiYXR0clB1c2giLCJhdHRycyIsIm1vZHVsZSIsImV4cG9ydHMiLCJtZCIsImNvcmUiLCJydWxlciIsImFmdGVyIiwidG9rZW5zIiwiVG9rZW4iLCJpIiwibGVuZ3RoIiwiY29udGVudCIsImNoYXJDb2RlQXQiLCJ0eXBlIiwiY3Jvc3MiLCJ0b0xvd2VyQ2FzZSIsImNoZWNrYm94IiwiY2hpbGRyZW4iLCJ1bnNoaWZ0Iiwic2xpY2UiXSwibWFwcGluZ3MiOiJBQUFBLFNBQVNBLE9BQVQsQ0FBaUJDLEtBQWpCLEVBQXdCQyxJQUF4QixFQUE4QkMsS0FBOUIsRUFBcUM7QUFDbkMsTUFBTUMsS0FBSyxHQUFHSCxLQUFLLENBQUNJLFNBQU4sQ0FBZ0JILElBQWhCLENBQWQ7QUFDQSxNQUFNSSxJQUFJLEdBQUcsQ0FBQ0osSUFBRCxFQUFPQyxLQUFQLENBQWI7O0FBRUEsTUFBSUMsS0FBSyxHQUFHLENBQVosRUFBZTtBQUNiSCxTQUFLLENBQUNNLFFBQU4sQ0FBZUQsSUFBZjtBQUNELEdBRkQsTUFFTztBQUNMTCxTQUFLLENBQUNPLEtBQU4sQ0FBWUosS0FBWixJQUFxQkUsSUFBckI7QUFDRDtBQUNGOztBQUVERyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsVUFBQ0MsRUFBRCxFQUFRO0FBQ3ZCQSxJQUFFLENBQUNDLElBQUgsQ0FBUUMsS0FBUixDQUFjQyxLQUFkLENBQW9CLFFBQXBCLEVBQThCLFVBQTlCLEVBQTBDLGdCQUF1QjtBQUFBLFFBQXBCQyxNQUFvQixRQUFwQkEsTUFBb0I7QUFBQSxRQUFaQyxLQUFZLFFBQVpBLEtBQVk7O0FBQy9ELFNBQUssSUFBSUMsQ0FBQyxHQUFHLENBQWIsRUFBZ0JBLENBQUMsR0FBR0YsTUFBTSxDQUFDRyxNQUEzQixFQUFtQ0QsQ0FBQyxJQUFJLENBQXhDLEVBQTJDO0FBQ3pDLFVBQU1oQixLQUFLLEdBQUdjLE1BQU0sQ0FBQ0UsQ0FBRCxDQUFwQjs7QUFDQSxVQUFJaEIsS0FBSyxDQUFDa0IsT0FBTixJQUNDbEIsS0FBSyxDQUFDa0IsT0FBTixDQUFjQyxVQUFkLENBQXlCLENBQXpCLE1BQWdDO0FBQUs7QUFEdEMsU0FFQ25CLEtBQUssQ0FBQ2tCLE9BQU4sQ0FBY0MsVUFBZCxDQUF5QixDQUF6QixNQUFnQztBQUFLO0FBRnRDLFNBR0NuQixLQUFLLENBQUNrQixPQUFOLENBQWNDLFVBQWQsQ0FBeUIsQ0FBekIsTUFBZ0M7QUFBSztBQUh0QyxTQUlDbkIsS0FBSyxDQUFDb0IsSUFBTixLQUFlLFFBSmhCLElBS0NOLE1BQU0sQ0FBQ0UsQ0FBQyxHQUFHLENBQUwsQ0FBTixDQUFjSSxJQUFkLEtBQXVCLGdCQUx4QixJQU1DTixNQUFNLENBQUNFLENBQUMsR0FBRyxDQUFMLENBQU4sQ0FBY0ksSUFBZCxLQUF1QixnQkFONUIsRUFPRTtBQUNBLFlBQU1DLEtBQUssR0FBR3JCLEtBQUssQ0FBQ2tCLE9BQU4sQ0FBYyxDQUFkLEVBQWlCSSxXQUFqQixFQUFkOztBQUNBLFlBQUlELEtBQUssS0FBSyxHQUFWLElBQWlCQSxLQUFLLEtBQUssR0FBL0IsRUFBb0M7QUFDbEMsY0FBTUUsUUFBUSxHQUFHLElBQUlSLEtBQUosQ0FBVSxhQUFWLEVBQXlCLEVBQXpCLEVBQTZCLENBQTdCLENBQWpCOztBQUNBLGNBQUlNLEtBQUssS0FBSyxHQUFkLEVBQW1CO0FBQ2pCRSxvQkFBUSxDQUFDTCxPQUFULEdBQW1CLHNFQUFuQjtBQUNELFdBRkQsTUFFTztBQUNMSyxvQkFBUSxDQUFDTCxPQUFULEdBQW1CLDhFQUFuQjtBQUNEOztBQUNEbEIsZUFBSyxDQUFDd0IsUUFBTixDQUFlQyxPQUFmLENBQXVCRixRQUF2QjtBQUNBdkIsZUFBSyxDQUFDd0IsUUFBTixDQUFlLENBQWYsRUFBa0JOLE9BQWxCLEdBQTRCbEIsS0FBSyxDQUFDd0IsUUFBTixDQUFlLENBQWYsRUFBa0JOLE9BQWxCLENBQTBCUSxLQUExQixDQUFnQyxDQUFoQyxDQUE1QjtBQUNBMUIsZUFBSyxDQUFDa0IsT0FBTixHQUFnQmxCLEtBQUssQ0FBQ2tCLE9BQU4sQ0FBY1EsS0FBZCxDQUFvQixDQUFwQixDQUFoQjtBQUNBM0IsaUJBQU8sQ0FBQ2UsTUFBTSxDQUFDRSxDQUFDLEdBQUcsQ0FBTCxDQUFQLEVBQWdCLE9BQWhCLEVBQXlCLGdCQUF6QixDQUFQO0FBQ0Q7QUFDRjtBQUNGO0FBQ0YsR0ExQkQ7QUEyQkQsQ0E1QkQiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9leHRlbnNpb25zL2xpYnMvbWFya2Rvd25JdFRhc2tsaXN0LmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiZnVuY3Rpb24gYXR0clNldCh0b2tlbiwgbmFtZSwgdmFsdWUpIHtcbiAgY29uc3QgaW5kZXggPSB0b2tlbi5hdHRySW5kZXgobmFtZSk7XG4gIGNvbnN0IGF0dHIgPSBbbmFtZSwgdmFsdWVdO1xuXG4gIGlmIChpbmRleCA8IDApIHtcbiAgICB0b2tlbi5hdHRyUHVzaChhdHRyKTtcbiAgfSBlbHNlIHtcbiAgICB0b2tlbi5hdHRyc1tpbmRleF0gPSBhdHRyO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gKG1kKSA9PiB7XG4gIG1kLmNvcmUucnVsZXIuYWZ0ZXIoJ2lubGluZScsICd0YXNrbGlzdCcsICh7IHRva2VucywgVG9rZW4gfSkgPT4ge1xuICAgIGZvciAobGV0IGkgPSAyOyBpIDwgdG9rZW5zLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBjb25zdCB0b2tlbiA9IHRva2Vuc1tpXTtcbiAgICAgIGlmICh0b2tlbi5jb250ZW50XG4gICAgICAgICYmIHRva2VuLmNvbnRlbnQuY2hhckNvZGVBdCgwKSA9PT0gMHg1YiAvKiBbICovXG4gICAgICAgICYmIHRva2VuLmNvbnRlbnQuY2hhckNvZGVBdCgyKSA9PT0gMHg1ZCAvKiBdICovXG4gICAgICAgICYmIHRva2VuLmNvbnRlbnQuY2hhckNvZGVBdCgzKSA9PT0gMHgyMCAvKiBzcGFjZSAqL1xuICAgICAgICAmJiB0b2tlbi50eXBlID09PSAnaW5saW5lJ1xuICAgICAgICAmJiB0b2tlbnNbaSAtIDFdLnR5cGUgPT09ICdwYXJhZ3JhcGhfb3BlbidcbiAgICAgICAgJiYgdG9rZW5zW2kgLSAyXS50eXBlID09PSAnbGlzdF9pdGVtX29wZW4nXG4gICAgICApIHtcbiAgICAgICAgY29uc3QgY3Jvc3MgPSB0b2tlbi5jb250ZW50WzFdLnRvTG93ZXJDYXNlKCk7XG4gICAgICAgIGlmIChjcm9zcyA9PT0gJyAnIHx8IGNyb3NzID09PSAneCcpIHtcbiAgICAgICAgICBjb25zdCBjaGVja2JveCA9IG5ldyBUb2tlbignaHRtbF9pbmxpbmUnLCAnJywgMCk7XG4gICAgICAgICAgaWYgKGNyb3NzID09PSAnICcpIHtcbiAgICAgICAgICAgIGNoZWNrYm94LmNvbnRlbnQgPSAnPHNwYW4gY2xhc3M9XCJ0YXNrLWxpc3QtaXRlbS1jaGVja2JveFwiIHR5cGU9XCJjaGVja2JveFwiPiYjOTc0NDs8L3NwYW4+JztcbiAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY2hlY2tib3guY29udGVudCA9ICc8c3BhbiBjbGFzcz1cInRhc2stbGlzdC1pdGVtLWNoZWNrYm94IGNoZWNrZWRcIiB0eXBlPVwiY2hlY2tib3hcIj4mIzk3NDU7PC9zcGFuPic7XG4gICAgICAgICAgfVxuICAgICAgICAgIHRva2VuLmNoaWxkcmVuLnVuc2hpZnQoY2hlY2tib3gpO1xuICAgICAgICAgIHRva2VuLmNoaWxkcmVuWzFdLmNvbnRlbnQgPSB0b2tlbi5jaGlsZHJlblsxXS5jb250ZW50LnNsaWNlKDMpO1xuICAgICAgICAgIHRva2VuLmNvbnRlbnQgPSB0b2tlbi5jb250ZW50LnNsaWNlKDMpO1xuICAgICAgICAgIGF0dHJTZXQodG9rZW5zW2kgLSAyXSwgJ2NsYXNzJywgJ3Rhc2stbGlzdC1pdGVtJyk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH0pO1xufTtcbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/libs/markdownItTasklist.js\n");

/***/ }),

/***/ "./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/markdownExtension.js":
/*!********************************************************************************************!*\
  !*** ./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/markdownExtension.js ***!
  \********************************************************************************************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var markdown_it_abbr__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! markdown-it-abbr */ \"./node_modules/markdown-it-abbr/index.js\");\n/* harmony import */ var markdown_it_abbr__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(markdown_it_abbr__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var markdown_it_deflist__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! markdown-it-deflist */ \"./node_modules/markdown-it-deflist/index.js\");\n/* harmony import */ var markdown_it_deflist__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(markdown_it_deflist__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var markdown_it_footnote__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! markdown-it-footnote */ \"./node_modules/markdown-it-footnote/index.js\");\n/* harmony import */ var markdown_it_footnote__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(markdown_it_footnote__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var markdown_it_mark__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! markdown-it-mark */ \"./node_modules/markdown-it-mark/index.js\");\n/* harmony import */ var markdown_it_mark__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(markdown_it_mark__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var markdown_it_sub__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! markdown-it-sub */ \"./node_modules/markdown-it-sub/index.js\");\n/* harmony import */ var markdown_it_sub__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(markdown_it_sub__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var markdown_it_sup__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! markdown-it-sup */ \"./node_modules/markdown-it-sup/index.js\");\n/* harmony import */ var markdown_it_sup__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(markdown_it_sup__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _libs_markdownItTasklist__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./libs/markdownItTasklist */ \"./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/libs/markdownItTasklist.js\");\n/* harmony import */ var _libs_markdownItTasklist__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_libs_markdownItTasklist__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _libs_markdownItAnchor__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./libs/markdownItAnchor */ \"./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/libs/markdownItAnchor.js\");\n/* harmony import */ var _services_extensionSvc__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../services/extensionSvc */ \"./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/extensionSvc.js\");\n\n\n\n\n\n\n\n\n\nvar coreBaseRules = ['normalize', 'block', 'inline', 'linkify', 'replacements', 'smartquotes'];\nvar blockBaseRules = ['code', 'fence', 'blockquote', 'hr', 'list', 'reference', 'heading', 'lheading', 'html_block', 'table', 'paragraph'];\nvar inlineBaseRules = ['text', 'newline', 'escape', 'backticks', 'strikethrough', 'emphasis', 'link', 'image', 'autolink', 'html_inline', 'entity'];\nvar inlineBaseRules2 = ['balance_pairs', 'strikethrough', 'emphasis', 'text_collapse'];\n_services_extensionSvc__WEBPACK_IMPORTED_MODULE_8__[\"default\"].onGetOptions(function (options, properties) {\n  return Object.assign(options, properties.extensions.markdown);\n});\n_services_extensionSvc__WEBPACK_IMPORTED_MODULE_8__[\"default\"].onInitConverter(0, function (markdown, options) {\n  markdown.set({\n    html: true,\n    breaks: !!options.breaks,\n    linkify: !!options.linkify,\n    typographer: !!options.typographer,\n    langPrefix: 'prism language-'\n  });\n  markdown.core.ruler.enable(coreBaseRules);\n  var blockRules = blockBaseRules.slice();\n\n  if (!options.fence) {\n    blockRules.splice(blockRules.indexOf('fence'), 1);\n  }\n\n  if (!options.table) {\n    blockRules.splice(blockRules.indexOf('table'), 1);\n  }\n\n  markdown.block.ruler.enable(blockRules);\n  var inlineRules = inlineBaseRules.slice();\n  var inlineRules2 = inlineBaseRules2.slice();\n\n  if (!options.del) {\n    inlineRules.splice(blockRules.indexOf('strikethrough'), 1);\n    inlineRules2.splice(blockRules.indexOf('strikethrough'), 1);\n  }\n\n  markdown.inline.ruler.enable(inlineRules);\n  markdown.inline.ruler2.enable(inlineRules2);\n\n  if (options.abbr) {\n    markdown.use(markdown_it_abbr__WEBPACK_IMPORTED_MODULE_0___default.a);\n  }\n\n  if (options.deflist) {\n    markdown.use(markdown_it_deflist__WEBPACK_IMPORTED_MODULE_1___default.a);\n  }\n\n  if (options.footnote) {\n    markdown.use(markdown_it_footnote__WEBPACK_IMPORTED_MODULE_2___default.a);\n  }\n\n  if (options.imgsize) {\n    markdown.use(markdownitImgsize);\n  }\n\n  if (options.mark) {\n    markdown.use(markdown_it_mark__WEBPACK_IMPORTED_MODULE_3___default.a);\n  }\n\n  if (options.sub) {\n    markdown.use(markdown_it_sub__WEBPACK_IMPORTED_MODULE_4___default.a);\n  }\n\n  if (options.sup) {\n    markdown.use(markdown_it_sup__WEBPACK_IMPORTED_MODULE_5___default.a);\n  }\n\n  if (options.tasklist) {\n    markdown.use(_libs_markdownItTasklist__WEBPACK_IMPORTED_MODULE_6___default.a);\n  }\n\n  markdown.use(_libs_markdownItAnchor__WEBPACK_IMPORTED_MODULE_7__[\"default\"]); // Wrap tables into a div for scrolling\n\n  markdown.renderer.rules.table_open = function (tokens, idx, opts) {\n    return \"<div class=\\\"table-wrapper\\\">\".concat(markdown.renderer.renderToken(tokens, idx, opts));\n  };\n\n  markdown.renderer.rules.table_close = function (tokens, idx, opts) {\n    return \"\".concat(markdown.renderer.renderToken(tokens, idx, opts), \"</div>\");\n  }; // Transform style into align attribute to pass the HTML sanitizer\n\n\n  var textAlignLength = 'text-align:'.length;\n\n  markdown.renderer.rules.td_open = function (tokens, idx, opts) {\n    var token = tokens[idx];\n\n    if (token.attrs && token.attrs.length && token.attrs[0][0] === 'style') {\n      token.attrs = [['align', token.attrs[0][1].slice(textAlignLength)]];\n    }\n\n    return markdown.renderer.renderToken(tokens, idx, opts);\n  };\n\n  markdown.renderer.rules.th_open = markdown.renderer.rules.td_open;\n\n  markdown.renderer.rules.footnote_ref = function (tokens, idx) {\n    var n = \"\".concat(Number(tokens[idx].meta.id + 1));\n    var id = \"fnref\".concat(n);\n\n    if (tokens[idx].meta.subId > 0) {\n      id += \":\".concat(tokens[idx].meta.subId);\n    }\n\n    return \"<sup class=\\\"footnote-ref\\\"><a href=\\\"#fn\".concat(n, \"\\\" id=\\\"\").concat(id, \"\\\">\").concat(n, \"</a></sup>\");\n  };\n});\n_services_extensionSvc__WEBPACK_IMPORTED_MODULE_8__[\"default\"].onSectionPreview(function (elt, options, isEditor) {\n  // Transform task spans into checkboxes\n  elt.querySelectorAll('span.task-list-item-checkbox').cl_each(function (spanElt) {\n    var checkboxElt = document.createElement('input');\n    checkboxElt.type = 'checkbox';\n    checkboxElt.className = 'task-list-item-checkbox';\n\n    if (spanElt.classList.contains('checked')) {\n      checkboxElt.setAttribute('checked', true);\n    }\n\n    if (!isEditor) {\n      checkboxElt.disabled = 'disabled';\n    }\n\n    spanElt.parentNode.replaceChild(checkboxElt, spanElt);\n  });\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9leHRlbnNpb25zL21hcmtkb3duRXh0ZW5zaW9uLmpzP2NjY2UiXSwibmFtZXMiOlsiY29yZUJhc2VSdWxlcyIsImJsb2NrQmFzZVJ1bGVzIiwiaW5saW5lQmFzZVJ1bGVzIiwiaW5saW5lQmFzZVJ1bGVzMiIsImV4dGVuc2lvblN2YyIsIm9uR2V0T3B0aW9ucyIsIm9wdGlvbnMiLCJwcm9wZXJ0aWVzIiwiT2JqZWN0IiwiYXNzaWduIiwiZXh0ZW5zaW9ucyIsIm1hcmtkb3duIiwib25Jbml0Q29udmVydGVyIiwic2V0IiwiaHRtbCIsImJyZWFrcyIsImxpbmtpZnkiLCJ0eXBvZ3JhcGhlciIsImxhbmdQcmVmaXgiLCJjb3JlIiwicnVsZXIiLCJlbmFibGUiLCJibG9ja1J1bGVzIiwic2xpY2UiLCJmZW5jZSIsInNwbGljZSIsImluZGV4T2YiLCJ0YWJsZSIsImJsb2NrIiwiaW5saW5lUnVsZXMiLCJpbmxpbmVSdWxlczIiLCJkZWwiLCJpbmxpbmUiLCJydWxlcjIiLCJhYmJyIiwidXNlIiwibWFya2Rvd25pdEFiYnIiLCJkZWZsaXN0IiwibWFya2Rvd25pdERlZmxpc3QiLCJmb290bm90ZSIsIm1hcmtkb3duaXRGb290bm90ZSIsImltZ3NpemUiLCJtYXJrZG93bml0SW1nc2l6ZSIsIm1hcmsiLCJtYXJrZG93bml0TWFyayIsInN1YiIsIm1hcmtkb3duaXRTdWIiLCJzdXAiLCJtYXJrZG93bml0U3VwIiwidGFza2xpc3QiLCJtYXJrZG93bml0VGFza2xpc3QiLCJtYXJrZG93bml0QW5jaG9yIiwicmVuZGVyZXIiLCJydWxlcyIsInRhYmxlX29wZW4iLCJ0b2tlbnMiLCJpZHgiLCJvcHRzIiwicmVuZGVyVG9rZW4iLCJ0YWJsZV9jbG9zZSIsInRleHRBbGlnbkxlbmd0aCIsImxlbmd0aCIsInRkX29wZW4iLCJ0b2tlbiIsImF0dHJzIiwidGhfb3BlbiIsImZvb3Rub3RlX3JlZiIsIm4iLCJOdW1iZXIiLCJtZXRhIiwiaWQiLCJzdWJJZCIsIm9uU2VjdGlvblByZXZpZXciLCJlbHQiLCJpc0VkaXRvciIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJjbF9lYWNoIiwic3BhbkVsdCIsImNoZWNrYm94RWx0IiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwidHlwZSIsImNsYXNzTmFtZSIsImNsYXNzTGlzdCIsImNvbnRhaW5zIiwic2V0QXR0cmlidXRlIiwiZGlzYWJsZWQiLCJwYXJlbnROb2RlIiwicmVwbGFjZUNoaWxkIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBRUEsSUFBTUEsYUFBYSxHQUFHLENBQ2xCLFdBRGtCLEVBRWxCLE9BRmtCLEVBR2xCLFFBSGtCLEVBSWxCLFNBSmtCLEVBS2xCLGNBTGtCLEVBTWxCLGFBTmtCLENBQXRCO0FBUUEsSUFBTUMsY0FBYyxHQUFHLENBQ25CLE1BRG1CLEVBRW5CLE9BRm1CLEVBR25CLFlBSG1CLEVBSW5CLElBSm1CLEVBS25CLE1BTG1CLEVBTW5CLFdBTm1CLEVBT25CLFNBUG1CLEVBUW5CLFVBUm1CLEVBU25CLFlBVG1CLEVBVW5CLE9BVm1CLEVBV25CLFdBWG1CLENBQXZCO0FBYUEsSUFBTUMsZUFBZSxHQUFHLENBQ3BCLE1BRG9CLEVBRXBCLFNBRm9CLEVBR3BCLFFBSG9CLEVBSXBCLFdBSm9CLEVBS3BCLGVBTG9CLEVBTXBCLFVBTm9CLEVBT3BCLE1BUG9CLEVBUXBCLE9BUm9CLEVBU3BCLFVBVG9CLEVBVXBCLGFBVm9CLEVBV3BCLFFBWG9CLENBQXhCO0FBYUEsSUFBTUMsZ0JBQWdCLEdBQUcsQ0FDckIsZUFEcUIsRUFFckIsZUFGcUIsRUFHckIsVUFIcUIsRUFJckIsZUFKcUIsQ0FBekI7QUFPQUMsOERBQVksQ0FBQ0MsWUFBYixDQUEwQixVQUFDQyxPQUFELEVBQVVDLFVBQVY7QUFBQSxTQUF5QkMsTUFBTSxDQUNwREMsTUFEOEMsQ0FDdkNILE9BRHVDLEVBQzlCQyxVQUFVLENBQUNHLFVBQVgsQ0FBc0JDLFFBRFEsQ0FBekI7QUFBQSxDQUExQjtBQUdBUCw4REFBWSxDQUFDUSxlQUFiLENBQTZCLENBQTdCLEVBQWdDLFVBQUNELFFBQUQsRUFBV0wsT0FBWCxFQUF1QjtBQUNuREssVUFBUSxDQUFDRSxHQUFULENBQWE7QUFDVEMsUUFBSSxFQUFFLElBREc7QUFFVEMsVUFBTSxFQUFFLENBQUMsQ0FBQ1QsT0FBTyxDQUFDUyxNQUZUO0FBR1RDLFdBQU8sRUFBRSxDQUFDLENBQUNWLE9BQU8sQ0FBQ1UsT0FIVjtBQUlUQyxlQUFXLEVBQUUsQ0FBQyxDQUFDWCxPQUFPLENBQUNXLFdBSmQ7QUFLVEMsY0FBVSxFQUFFO0FBTEgsR0FBYjtBQVFBUCxVQUFRLENBQUNRLElBQVQsQ0FBY0MsS0FBZCxDQUFvQkMsTUFBcEIsQ0FBMkJyQixhQUEzQjtBQUVBLE1BQU1zQixVQUFVLEdBQUdyQixjQUFjLENBQUNzQixLQUFmLEVBQW5COztBQUNBLE1BQUksQ0FBQ2pCLE9BQU8sQ0FBQ2tCLEtBQWIsRUFBb0I7QUFDaEJGLGNBQVUsQ0FBQ0csTUFBWCxDQUFrQkgsVUFBVSxDQUFDSSxPQUFYLENBQW1CLE9BQW5CLENBQWxCLEVBQStDLENBQS9DO0FBQ0g7O0FBQ0QsTUFBSSxDQUFDcEIsT0FBTyxDQUFDcUIsS0FBYixFQUFvQjtBQUNoQkwsY0FBVSxDQUFDRyxNQUFYLENBQWtCSCxVQUFVLENBQUNJLE9BQVgsQ0FBbUIsT0FBbkIsQ0FBbEIsRUFBK0MsQ0FBL0M7QUFDSDs7QUFDRGYsVUFBUSxDQUFDaUIsS0FBVCxDQUFlUixLQUFmLENBQXFCQyxNQUFyQixDQUE0QkMsVUFBNUI7QUFFQSxNQUFNTyxXQUFXLEdBQUczQixlQUFlLENBQUNxQixLQUFoQixFQUFwQjtBQUNBLE1BQU1PLFlBQVksR0FBRzNCLGdCQUFnQixDQUFDb0IsS0FBakIsRUFBckI7O0FBQ0EsTUFBSSxDQUFDakIsT0FBTyxDQUFDeUIsR0FBYixFQUFrQjtBQUNkRixlQUFXLENBQUNKLE1BQVosQ0FBbUJILFVBQVUsQ0FBQ0ksT0FBWCxDQUFtQixlQUFuQixDQUFuQixFQUF3RCxDQUF4RDtBQUNBSSxnQkFBWSxDQUFDTCxNQUFiLENBQW9CSCxVQUFVLENBQUNJLE9BQVgsQ0FBbUIsZUFBbkIsQ0FBcEIsRUFBeUQsQ0FBekQ7QUFDSDs7QUFDRGYsVUFBUSxDQUFDcUIsTUFBVCxDQUFnQlosS0FBaEIsQ0FBc0JDLE1BQXRCLENBQTZCUSxXQUE3QjtBQUNBbEIsVUFBUSxDQUFDcUIsTUFBVCxDQUFnQkMsTUFBaEIsQ0FBdUJaLE1BQXZCLENBQThCUyxZQUE5Qjs7QUFFQSxNQUFJeEIsT0FBTyxDQUFDNEIsSUFBWixFQUFrQjtBQUNkdkIsWUFBUSxDQUFDd0IsR0FBVCxDQUFhQyx1REFBYjtBQUNIOztBQUNELE1BQUk5QixPQUFPLENBQUMrQixPQUFaLEVBQXFCO0FBQ2pCMUIsWUFBUSxDQUFDd0IsR0FBVCxDQUFhRywwREFBYjtBQUNIOztBQUNELE1BQUloQyxPQUFPLENBQUNpQyxRQUFaLEVBQXNCO0FBQ2xCNUIsWUFBUSxDQUFDd0IsR0FBVCxDQUFhSywyREFBYjtBQUNIOztBQUNELE1BQUlsQyxPQUFPLENBQUNtQyxPQUFaLEVBQXFCO0FBQ2pCOUIsWUFBUSxDQUFDd0IsR0FBVCxDQUFhTyxpQkFBYjtBQUNIOztBQUNELE1BQUlwQyxPQUFPLENBQUNxQyxJQUFaLEVBQWtCO0FBQ2RoQyxZQUFRLENBQUN3QixHQUFULENBQWFTLHVEQUFiO0FBQ0g7O0FBQ0QsTUFBSXRDLE9BQU8sQ0FBQ3VDLEdBQVosRUFBaUI7QUFDYmxDLFlBQVEsQ0FBQ3dCLEdBQVQsQ0FBYVcsc0RBQWI7QUFDSDs7QUFDRCxNQUFJeEMsT0FBTyxDQUFDeUMsR0FBWixFQUFpQjtBQUNicEMsWUFBUSxDQUFDd0IsR0FBVCxDQUFhYSxzREFBYjtBQUNIOztBQUNELE1BQUkxQyxPQUFPLENBQUMyQyxRQUFaLEVBQXNCO0FBQ2xCdEMsWUFBUSxDQUFDd0IsR0FBVCxDQUFhZSwrREFBYjtBQUNIOztBQUNEdkMsVUFBUSxDQUFDd0IsR0FBVCxDQUFhZ0IsOERBQWIsRUFyRG1ELENBdURuRDs7QUFDQXhDLFVBQVEsQ0FBQ3lDLFFBQVQsQ0FBa0JDLEtBQWxCLENBQXdCQyxVQUF4QixHQUFxQyxVQUFDQyxNQUFELEVBQVNDLEdBQVQsRUFBY0MsSUFBZDtBQUFBLGtEQUNIOUMsUUFBUSxDQUFDeUMsUUFBVCxDQUFrQk0sV0FBbEIsQ0FBOEJILE1BQTlCLEVBQXNDQyxHQUF0QyxFQUEyQ0MsSUFBM0MsQ0FERztBQUFBLEdBQXJDOztBQUVBOUMsVUFBUSxDQUFDeUMsUUFBVCxDQUFrQkMsS0FBbEIsQ0FBd0JNLFdBQXhCLEdBQXNDLFVBQUNKLE1BQUQsRUFBU0MsR0FBVCxFQUFjQyxJQUFkO0FBQUEscUJBQy9COUMsUUFBUSxDQUFDeUMsUUFBVCxDQUFrQk0sV0FBbEIsQ0FBOEJILE1BQTlCLEVBQXNDQyxHQUF0QyxFQUEyQ0MsSUFBM0MsQ0FEK0I7QUFBQSxHQUF0QyxDQTFEbUQsQ0E2RG5EOzs7QUFDQSxNQUFNRyxlQUFlLEdBQUcsY0FBY0MsTUFBdEM7O0FBQ0FsRCxVQUFRLENBQUN5QyxRQUFULENBQWtCQyxLQUFsQixDQUF3QlMsT0FBeEIsR0FBa0MsVUFBQ1AsTUFBRCxFQUFTQyxHQUFULEVBQWNDLElBQWQsRUFBdUI7QUFDckQsUUFBTU0sS0FBSyxHQUFHUixNQUFNLENBQUNDLEdBQUQsQ0FBcEI7O0FBQ0EsUUFBSU8sS0FBSyxDQUFDQyxLQUFOLElBQWVELEtBQUssQ0FBQ0MsS0FBTixDQUFZSCxNQUEzQixJQUFxQ0UsS0FBSyxDQUFDQyxLQUFOLENBQVksQ0FBWixFQUFlLENBQWYsTUFBc0IsT0FBL0QsRUFBd0U7QUFDcEVELFdBQUssQ0FBQ0MsS0FBTixHQUFjLENBQ1YsQ0FBQyxPQUFELEVBQVVELEtBQUssQ0FBQ0MsS0FBTixDQUFZLENBQVosRUFBZSxDQUFmLEVBQWtCekMsS0FBbEIsQ0FBd0JxQyxlQUF4QixDQUFWLENBRFUsQ0FBZDtBQUdIOztBQUNELFdBQU9qRCxRQUFRLENBQUN5QyxRQUFULENBQWtCTSxXQUFsQixDQUE4QkgsTUFBOUIsRUFBc0NDLEdBQXRDLEVBQTJDQyxJQUEzQyxDQUFQO0FBQ0gsR0FSRDs7QUFTQTlDLFVBQVEsQ0FBQ3lDLFFBQVQsQ0FBa0JDLEtBQWxCLENBQXdCWSxPQUF4QixHQUFrQ3RELFFBQVEsQ0FBQ3lDLFFBQVQsQ0FBa0JDLEtBQWxCLENBQXdCUyxPQUExRDs7QUFFQW5ELFVBQVEsQ0FBQ3lDLFFBQVQsQ0FBa0JDLEtBQWxCLENBQXdCYSxZQUF4QixHQUF1QyxVQUFDWCxNQUFELEVBQVNDLEdBQVQsRUFBaUI7QUFDcEQsUUFBTVcsQ0FBQyxhQUFNQyxNQUFNLENBQUNiLE1BQU0sQ0FBQ0MsR0FBRCxDQUFOLENBQVlhLElBQVosQ0FBaUJDLEVBQWpCLEdBQXNCLENBQXZCLENBQVosQ0FBUDtBQUNBLFFBQUlBLEVBQUUsa0JBQVdILENBQVgsQ0FBTjs7QUFDQSxRQUFJWixNQUFNLENBQUNDLEdBQUQsQ0FBTixDQUFZYSxJQUFaLENBQWlCRSxLQUFqQixHQUF5QixDQUE3QixFQUFnQztBQUM1QkQsUUFBRSxlQUFRZixNQUFNLENBQUNDLEdBQUQsQ0FBTixDQUFZYSxJQUFaLENBQWlCRSxLQUF6QixDQUFGO0FBQ0g7O0FBQ0QsOERBQWdESixDQUFoRCxxQkFBMERHLEVBQTFELGdCQUFpRUgsQ0FBakU7QUFDSCxHQVBEO0FBUUgsQ0FsRkQ7QUFvRkEvRCw4REFBWSxDQUFDb0UsZ0JBQWIsQ0FBOEIsVUFBQ0MsR0FBRCxFQUFNbkUsT0FBTixFQUFlb0UsUUFBZixFQUE0QjtBQUN0RDtBQUNBRCxLQUFHLENBQUNFLGdCQUFKLENBQXFCLDhCQUFyQixFQUFxREMsT0FBckQsQ0FBNkQsVUFBQ0MsT0FBRCxFQUFhO0FBQ3RFLFFBQU1DLFdBQVcsR0FBR0MsUUFBUSxDQUFDQyxhQUFULENBQXVCLE9BQXZCLENBQXBCO0FBQ0FGLGVBQVcsQ0FBQ0csSUFBWixHQUFtQixVQUFuQjtBQUNBSCxlQUFXLENBQUNJLFNBQVosR0FBd0IseUJBQXhCOztBQUNBLFFBQUlMLE9BQU8sQ0FBQ00sU0FBUixDQUFrQkMsUUFBbEIsQ0FBMkIsU0FBM0IsQ0FBSixFQUEyQztBQUN2Q04saUJBQVcsQ0FBQ08sWUFBWixDQUF5QixTQUF6QixFQUFvQyxJQUFwQztBQUNIOztBQUNELFFBQUksQ0FBQ1gsUUFBTCxFQUFlO0FBQ1hJLGlCQUFXLENBQUNRLFFBQVosR0FBdUIsVUFBdkI7QUFDSDs7QUFDRFQsV0FBTyxDQUFDVSxVQUFSLENBQW1CQyxZQUFuQixDQUFnQ1YsV0FBaEMsRUFBNkNELE9BQTdDO0FBQ0gsR0FYRDtBQVlILENBZEQiLCJmaWxlIjoiLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9leHRlbnNpb25zL21hcmtkb3duRXh0ZW5zaW9uLmpzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IG1hcmtkb3duaXRBYmJyIGZyb20gJ21hcmtkb3duLWl0LWFiYnInO1xuaW1wb3J0IG1hcmtkb3duaXREZWZsaXN0IGZyb20gJ21hcmtkb3duLWl0LWRlZmxpc3QnO1xuaW1wb3J0IG1hcmtkb3duaXRGb290bm90ZSBmcm9tICdtYXJrZG93bi1pdC1mb290bm90ZSc7XG5pbXBvcnQgbWFya2Rvd25pdE1hcmsgZnJvbSAnbWFya2Rvd24taXQtbWFyayc7XG5pbXBvcnQgbWFya2Rvd25pdFN1YiBmcm9tICdtYXJrZG93bi1pdC1zdWInO1xuaW1wb3J0IG1hcmtkb3duaXRTdXAgZnJvbSAnbWFya2Rvd24taXQtc3VwJztcbmltcG9ydCBtYXJrZG93bml0VGFza2xpc3QgZnJvbSAnLi9saWJzL21hcmtkb3duSXRUYXNrbGlzdCc7XG5pbXBvcnQgbWFya2Rvd25pdEFuY2hvciBmcm9tICcuL2xpYnMvbWFya2Rvd25JdEFuY2hvcic7XG5pbXBvcnQgZXh0ZW5zaW9uU3ZjIGZyb20gJy4uL3NlcnZpY2VzL2V4dGVuc2lvblN2Yyc7XG5cbmNvbnN0IGNvcmVCYXNlUnVsZXMgPSBbXG4gICAgJ25vcm1hbGl6ZScsXG4gICAgJ2Jsb2NrJyxcbiAgICAnaW5saW5lJyxcbiAgICAnbGlua2lmeScsXG4gICAgJ3JlcGxhY2VtZW50cycsXG4gICAgJ3NtYXJ0cXVvdGVzJyxcbl07XG5jb25zdCBibG9ja0Jhc2VSdWxlcyA9IFtcbiAgICAnY29kZScsXG4gICAgJ2ZlbmNlJyxcbiAgICAnYmxvY2txdW90ZScsXG4gICAgJ2hyJyxcbiAgICAnbGlzdCcsXG4gICAgJ3JlZmVyZW5jZScsXG4gICAgJ2hlYWRpbmcnLFxuICAgICdsaGVhZGluZycsXG4gICAgJ2h0bWxfYmxvY2snLFxuICAgICd0YWJsZScsXG4gICAgJ3BhcmFncmFwaCcsXG5dO1xuY29uc3QgaW5saW5lQmFzZVJ1bGVzID0gW1xuICAgICd0ZXh0JyxcbiAgICAnbmV3bGluZScsXG4gICAgJ2VzY2FwZScsXG4gICAgJ2JhY2t0aWNrcycsXG4gICAgJ3N0cmlrZXRocm91Z2gnLFxuICAgICdlbXBoYXNpcycsXG4gICAgJ2xpbmsnLFxuICAgICdpbWFnZScsXG4gICAgJ2F1dG9saW5rJyxcbiAgICAnaHRtbF9pbmxpbmUnLFxuICAgICdlbnRpdHknLFxuXTtcbmNvbnN0IGlubGluZUJhc2VSdWxlczIgPSBbXG4gICAgJ2JhbGFuY2VfcGFpcnMnLFxuICAgICdzdHJpa2V0aHJvdWdoJyxcbiAgICAnZW1waGFzaXMnLFxuICAgICd0ZXh0X2NvbGxhcHNlJyxcbl07XG5cbmV4dGVuc2lvblN2Yy5vbkdldE9wdGlvbnMoKG9wdGlvbnMsIHByb3BlcnRpZXMpID0+IE9iamVjdFxuICAgIC5hc3NpZ24ob3B0aW9ucywgcHJvcGVydGllcy5leHRlbnNpb25zLm1hcmtkb3duKSk7XG5cbmV4dGVuc2lvblN2Yy5vbkluaXRDb252ZXJ0ZXIoMCwgKG1hcmtkb3duLCBvcHRpb25zKSA9PiB7XG4gICAgbWFya2Rvd24uc2V0KHtcbiAgICAgICAgaHRtbDogdHJ1ZSxcbiAgICAgICAgYnJlYWtzOiAhIW9wdGlvbnMuYnJlYWtzLFxuICAgICAgICBsaW5raWZ5OiAhIW9wdGlvbnMubGlua2lmeSxcbiAgICAgICAgdHlwb2dyYXBoZXI6ICEhb3B0aW9ucy50eXBvZ3JhcGhlcixcbiAgICAgICAgbGFuZ1ByZWZpeDogJ3ByaXNtIGxhbmd1YWdlLScsXG4gICAgfSk7XG5cbiAgICBtYXJrZG93bi5jb3JlLnJ1bGVyLmVuYWJsZShjb3JlQmFzZVJ1bGVzKTtcblxuICAgIGNvbnN0IGJsb2NrUnVsZXMgPSBibG9ja0Jhc2VSdWxlcy5zbGljZSgpO1xuICAgIGlmICghb3B0aW9ucy5mZW5jZSkge1xuICAgICAgICBibG9ja1J1bGVzLnNwbGljZShibG9ja1J1bGVzLmluZGV4T2YoJ2ZlbmNlJyksIDEpO1xuICAgIH1cbiAgICBpZiAoIW9wdGlvbnMudGFibGUpIHtcbiAgICAgICAgYmxvY2tSdWxlcy5zcGxpY2UoYmxvY2tSdWxlcy5pbmRleE9mKCd0YWJsZScpLCAxKTtcbiAgICB9XG4gICAgbWFya2Rvd24uYmxvY2sucnVsZXIuZW5hYmxlKGJsb2NrUnVsZXMpO1xuXG4gICAgY29uc3QgaW5saW5lUnVsZXMgPSBpbmxpbmVCYXNlUnVsZXMuc2xpY2UoKTtcbiAgICBjb25zdCBpbmxpbmVSdWxlczIgPSBpbmxpbmVCYXNlUnVsZXMyLnNsaWNlKCk7XG4gICAgaWYgKCFvcHRpb25zLmRlbCkge1xuICAgICAgICBpbmxpbmVSdWxlcy5zcGxpY2UoYmxvY2tSdWxlcy5pbmRleE9mKCdzdHJpa2V0aHJvdWdoJyksIDEpO1xuICAgICAgICBpbmxpbmVSdWxlczIuc3BsaWNlKGJsb2NrUnVsZXMuaW5kZXhPZignc3RyaWtldGhyb3VnaCcpLCAxKTtcbiAgICB9XG4gICAgbWFya2Rvd24uaW5saW5lLnJ1bGVyLmVuYWJsZShpbmxpbmVSdWxlcyk7XG4gICAgbWFya2Rvd24uaW5saW5lLnJ1bGVyMi5lbmFibGUoaW5saW5lUnVsZXMyKTtcblxuICAgIGlmIChvcHRpb25zLmFiYnIpIHtcbiAgICAgICAgbWFya2Rvd24udXNlKG1hcmtkb3duaXRBYmJyKTtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMuZGVmbGlzdCkge1xuICAgICAgICBtYXJrZG93bi51c2UobWFya2Rvd25pdERlZmxpc3QpO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5mb290bm90ZSkge1xuICAgICAgICBtYXJrZG93bi51c2UobWFya2Rvd25pdEZvb3Rub3RlKTtcbiAgICB9XG4gICAgaWYgKG9wdGlvbnMuaW1nc2l6ZSkge1xuICAgICAgICBtYXJrZG93bi51c2UobWFya2Rvd25pdEltZ3NpemUpO1xuICAgIH1cbiAgICBpZiAob3B0aW9ucy5tYXJrKSB7XG4gICAgICAgIG1hcmtkb3duLnVzZShtYXJrZG93bml0TWFyayk7XG4gICAgfVxuICAgIGlmIChvcHRpb25zLnN1Yikge1xuICAgICAgICBtYXJrZG93bi51c2UobWFya2Rvd25pdFN1Yik7XG4gICAgfVxuICAgIGlmIChvcHRpb25zLnN1cCkge1xuICAgICAgICBtYXJrZG93bi51c2UobWFya2Rvd25pdFN1cCk7XG4gICAgfVxuICAgIGlmIChvcHRpb25zLnRhc2tsaXN0KSB7XG4gICAgICAgIG1hcmtkb3duLnVzZShtYXJrZG93bml0VGFza2xpc3QpO1xuICAgIH1cbiAgICBtYXJrZG93bi51c2UobWFya2Rvd25pdEFuY2hvcik7XG5cbiAgICAvLyBXcmFwIHRhYmxlcyBpbnRvIGEgZGl2IGZvciBzY3JvbGxpbmdcbiAgICBtYXJrZG93bi5yZW5kZXJlci5ydWxlcy50YWJsZV9vcGVuID0gKHRva2VucywgaWR4LCBvcHRzKSA9PlxuICAgICAgICBgPGRpdiBjbGFzcz1cInRhYmxlLXdyYXBwZXJcIj4ke21hcmtkb3duLnJlbmRlcmVyLnJlbmRlclRva2VuKHRva2VucywgaWR4LCBvcHRzKX1gO1xuICAgIG1hcmtkb3duLnJlbmRlcmVyLnJ1bGVzLnRhYmxlX2Nsb3NlID0gKHRva2VucywgaWR4LCBvcHRzKSA9PlxuICAgICAgICBgJHttYXJrZG93bi5yZW5kZXJlci5yZW5kZXJUb2tlbih0b2tlbnMsIGlkeCwgb3B0cyl9PC9kaXY+YDtcblxuICAgIC8vIFRyYW5zZm9ybSBzdHlsZSBpbnRvIGFsaWduIGF0dHJpYnV0ZSB0byBwYXNzIHRoZSBIVE1MIHNhbml0aXplclxuICAgIGNvbnN0IHRleHRBbGlnbkxlbmd0aCA9ICd0ZXh0LWFsaWduOicubGVuZ3RoO1xuICAgIG1hcmtkb3duLnJlbmRlcmVyLnJ1bGVzLnRkX29wZW4gPSAodG9rZW5zLCBpZHgsIG9wdHMpID0+IHtcbiAgICAgICAgY29uc3QgdG9rZW4gPSB0b2tlbnNbaWR4XTtcbiAgICAgICAgaWYgKHRva2VuLmF0dHJzICYmIHRva2VuLmF0dHJzLmxlbmd0aCAmJiB0b2tlbi5hdHRyc1swXVswXSA9PT0gJ3N0eWxlJykge1xuICAgICAgICAgICAgdG9rZW4uYXR0cnMgPSBbXG4gICAgICAgICAgICAgICAgWydhbGlnbicsIHRva2VuLmF0dHJzWzBdWzFdLnNsaWNlKHRleHRBbGlnbkxlbmd0aCldLFxuICAgICAgICAgICAgXTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gbWFya2Rvd24ucmVuZGVyZXIucmVuZGVyVG9rZW4odG9rZW5zLCBpZHgsIG9wdHMpO1xuICAgIH07XG4gICAgbWFya2Rvd24ucmVuZGVyZXIucnVsZXMudGhfb3BlbiA9IG1hcmtkb3duLnJlbmRlcmVyLnJ1bGVzLnRkX29wZW47XG5cbiAgICBtYXJrZG93bi5yZW5kZXJlci5ydWxlcy5mb290bm90ZV9yZWYgPSAodG9rZW5zLCBpZHgpID0+IHtcbiAgICAgICAgY29uc3QgbiA9IGAke051bWJlcih0b2tlbnNbaWR4XS5tZXRhLmlkICsgMSl9YDtcbiAgICAgICAgbGV0IGlkID0gYGZucmVmJHtufWA7XG4gICAgICAgIGlmICh0b2tlbnNbaWR4XS5tZXRhLnN1YklkID4gMCkge1xuICAgICAgICAgICAgaWQgKz0gYDoke3Rva2Vuc1tpZHhdLm1ldGEuc3ViSWR9YDtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYDxzdXAgY2xhc3M9XCJmb290bm90ZS1yZWZcIj48YSBocmVmPVwiI2ZuJHtufVwiIGlkPVwiJHtpZH1cIj4ke259PC9hPjwvc3VwPmA7XG4gICAgfTtcbn0pO1xuXG5leHRlbnNpb25TdmMub25TZWN0aW9uUHJldmlldygoZWx0LCBvcHRpb25zLCBpc0VkaXRvcikgPT4ge1xuICAgIC8vIFRyYW5zZm9ybSB0YXNrIHNwYW5zIGludG8gY2hlY2tib3hlc1xuICAgIGVsdC5xdWVyeVNlbGVjdG9yQWxsKCdzcGFuLnRhc2stbGlzdC1pdGVtLWNoZWNrYm94JykuY2xfZWFjaCgoc3BhbkVsdCkgPT4ge1xuICAgICAgICBjb25zdCBjaGVja2JveEVsdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2lucHV0Jyk7XG4gICAgICAgIGNoZWNrYm94RWx0LnR5cGUgPSAnY2hlY2tib3gnO1xuICAgICAgICBjaGVja2JveEVsdC5jbGFzc05hbWUgPSAndGFzay1saXN0LWl0ZW0tY2hlY2tib3gnO1xuICAgICAgICBpZiAoc3BhbkVsdC5jbGFzc0xpc3QuY29udGFpbnMoJ2NoZWNrZWQnKSkge1xuICAgICAgICAgICAgY2hlY2tib3hFbHQuc2V0QXR0cmlidXRlKCdjaGVja2VkJywgdHJ1ZSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFpc0VkaXRvcikge1xuICAgICAgICAgICAgY2hlY2tib3hFbHQuZGlzYWJsZWQgPSAnZGlzYWJsZWQnO1xuICAgICAgICB9XG4gICAgICAgIHNwYW5FbHQucGFyZW50Tm9kZS5yZXBsYWNlQ2hpbGQoY2hlY2tib3hFbHQsIHNwYW5FbHQpO1xuICAgIH0pO1xufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./resources/js/Lib/vuetify-formjson/Fields/StackEdit/extensions/markdownExtension.js\n");

/***/ }),

/***/ "./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/extensionSvc.js":
/*!*************************************************************************************!*\
  !*** ./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/extensionSvc.js ***!
  \*************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar getOptionsListeners = [];\nvar initConverterListeners = [];\nvar sectionPreviewListeners = [];\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  onGetOptions: function onGetOptions(listener) {\n    getOptionsListeners.push(listener);\n  },\n  onInitConverter: function onInitConverter(priority, listener) {\n    initConverterListeners[priority] = listener;\n  },\n  onSectionPreview: function onSectionPreview(listener) {\n    sectionPreviewListeners.push(listener);\n  },\n  getOptions: function getOptions(properties, isCurrentFile) {\n    return getOptionsListeners.reduce(function (options, listener) {\n      listener(options, properties, isCurrentFile);\n      return options;\n    }, {});\n  },\n  initConverter: function initConverter(markdown, options) {\n    // Use forEach as it's a sparsed array\n    initConverterListeners.forEach(function (listener) {\n      listener(markdown, options);\n    });\n  },\n  sectionPreview: function sectionPreview(elt, options, isEditor) {\n    sectionPreviewListeners.forEach(function (listener) {\n      listener(elt, options, isEditor);\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZXNvdXJjZXMvanMvTGliL3Z1ZXRpZnktZm9ybWpzb24vRmllbGRzL1N0YWNrRWRpdC9zZXJ2aWNlcy9leHRlbnNpb25TdmMuanM/YjU0OCJdLCJuYW1lcyI6WyJnZXRPcHRpb25zTGlzdGVuZXJzIiwiaW5pdENvbnZlcnRlckxpc3RlbmVycyIsInNlY3Rpb25QcmV2aWV3TGlzdGVuZXJzIiwib25HZXRPcHRpb25zIiwibGlzdGVuZXIiLCJwdXNoIiwib25Jbml0Q29udmVydGVyIiwicHJpb3JpdHkiLCJvblNlY3Rpb25QcmV2aWV3IiwiZ2V0T3B0aW9ucyIsInByb3BlcnRpZXMiLCJpc0N1cnJlbnRGaWxlIiwicmVkdWNlIiwib3B0aW9ucyIsImluaXRDb252ZXJ0ZXIiLCJtYXJrZG93biIsImZvckVhY2giLCJzZWN0aW9uUHJldmlldyIsImVsdCIsImlzRWRpdG9yIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUFBLElBQU1BLG1CQUFtQixHQUFHLEVBQTVCO0FBQ0EsSUFBTUMsc0JBQXNCLEdBQUcsRUFBL0I7QUFDQSxJQUFNQyx1QkFBdUIsR0FBRyxFQUFoQztBQUVlO0FBQ1hDLGNBRFcsd0JBQ0VDLFFBREYsRUFDWTtBQUNuQkosdUJBQW1CLENBQUNLLElBQXBCLENBQXlCRCxRQUF6QjtBQUNILEdBSFU7QUFLWEUsaUJBTFcsMkJBS0tDLFFBTEwsRUFLZUgsUUFMZixFQUt5QjtBQUNoQ0gsMEJBQXNCLENBQUNNLFFBQUQsQ0FBdEIsR0FBbUNILFFBQW5DO0FBQ0gsR0FQVTtBQVNYSSxrQkFUVyw0QkFTTUosUUFUTixFQVNnQjtBQUN2QkYsMkJBQXVCLENBQUNHLElBQXhCLENBQTZCRCxRQUE3QjtBQUNILEdBWFU7QUFhWEssWUFiVyxzQkFhQUMsVUFiQSxFQWFZQyxhQWJaLEVBYTJCO0FBQ2xDLFdBQU9YLG1CQUFtQixDQUFDWSxNQUFwQixDQUEyQixVQUFDQyxPQUFELEVBQVVULFFBQVYsRUFBdUI7QUFDckRBLGNBQVEsQ0FBQ1MsT0FBRCxFQUFVSCxVQUFWLEVBQXNCQyxhQUF0QixDQUFSO0FBQ0EsYUFBT0UsT0FBUDtBQUNILEtBSE0sRUFHSixFQUhJLENBQVA7QUFJSCxHQWxCVTtBQW9CWEMsZUFwQlcseUJBb0JHQyxRQXBCSCxFQW9CYUYsT0FwQmIsRUFvQnNCO0FBQ2pDO0FBQ0laLDBCQUFzQixDQUFDZSxPQUF2QixDQUErQixVQUFDWixRQUFELEVBQWM7QUFDekNBLGNBQVEsQ0FBQ1csUUFBRCxFQUFXRixPQUFYLENBQVI7QUFDSCxLQUZEO0FBR0gsR0F6QlU7QUEyQlhJLGdCQTNCVywwQkEyQklDLEdBM0JKLEVBMkJTTCxPQTNCVCxFQTJCa0JNLFFBM0JsQixFQTJCNEI7QUFDbkNqQiwyQkFBdUIsQ0FBQ2MsT0FBeEIsQ0FBZ0MsVUFBQ1osUUFBRCxFQUFjO0FBQzFDQSxjQUFRLENBQUNjLEdBQUQsRUFBTUwsT0FBTixFQUFlTSxRQUFmLENBQVI7QUFDSCxLQUZEO0FBR0g7QUEvQlUsQ0FBZiIsImZpbGUiOiIuL3Jlc291cmNlcy9qcy9MaWIvdnVldGlmeS1mb3JtanNvbi9GaWVsZHMvU3RhY2tFZGl0L3NlcnZpY2VzL2V4dGVuc2lvblN2Yy5qcy5qcyIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGdldE9wdGlvbnNMaXN0ZW5lcnMgPSBbXTtcbmNvbnN0IGluaXRDb252ZXJ0ZXJMaXN0ZW5lcnMgPSBbXTtcbmNvbnN0IHNlY3Rpb25QcmV2aWV3TGlzdGVuZXJzID0gW107XG5cbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBvbkdldE9wdGlvbnMobGlzdGVuZXIpIHtcbiAgICAgICAgZ2V0T3B0aW9uc0xpc3RlbmVycy5wdXNoKGxpc3RlbmVyKTtcbiAgICB9LFxuXG4gICAgb25Jbml0Q29udmVydGVyKHByaW9yaXR5LCBsaXN0ZW5lcikge1xuICAgICAgICBpbml0Q29udmVydGVyTGlzdGVuZXJzW3ByaW9yaXR5XSA9IGxpc3RlbmVyO1xuICAgIH0sXG5cbiAgICBvblNlY3Rpb25QcmV2aWV3KGxpc3RlbmVyKSB7XG4gICAgICAgIHNlY3Rpb25QcmV2aWV3TGlzdGVuZXJzLnB1c2gobGlzdGVuZXIpO1xuICAgIH0sXG5cbiAgICBnZXRPcHRpb25zKHByb3BlcnRpZXMsIGlzQ3VycmVudEZpbGUpIHtcbiAgICAgICAgcmV0dXJuIGdldE9wdGlvbnNMaXN0ZW5lcnMucmVkdWNlKChvcHRpb25zLCBsaXN0ZW5lcikgPT4ge1xuICAgICAgICAgICAgbGlzdGVuZXIob3B0aW9ucywgcHJvcGVydGllcywgaXNDdXJyZW50RmlsZSk7XG4gICAgICAgICAgICByZXR1cm4gb3B0aW9ucztcbiAgICAgICAgfSwge30pO1xuICAgIH0sXG5cbiAgICBpbml0Q29udmVydGVyKG1hcmtkb3duLCBvcHRpb25zKSB7XG4gICAgLy8gVXNlIGZvckVhY2ggYXMgaXQncyBhIHNwYXJzZWQgYXJyYXlcbiAgICAgICAgaW5pdENvbnZlcnRlckxpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcikgPT4ge1xuICAgICAgICAgICAgbGlzdGVuZXIobWFya2Rvd24sIG9wdGlvbnMpO1xuICAgICAgICB9KTtcbiAgICB9LFxuXG4gICAgc2VjdGlvblByZXZpZXcoZWx0LCBvcHRpb25zLCBpc0VkaXRvcikge1xuICAgICAgICBzZWN0aW9uUHJldmlld0xpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcikgPT4ge1xuICAgICAgICAgICAgbGlzdGVuZXIoZWx0LCBvcHRpb25zLCBpc0VkaXRvcik7XG4gICAgICAgIH0pO1xuICAgIH0sXG59O1xuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/extensionSvc.js\n");

/***/ }),

/***/ "./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/markdownConversionSvc.js":
/*!**********************************************************************************************!*\
  !*** ./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/markdownConversionSvc.js ***!
  \**********************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var diff_match_patch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! diff-match-patch */ \"./node_modules/diff-match-patch/index.js\");\n/* harmony import */ var diff_match_patch__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(diff_match_patch__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var markdown_it__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! markdown-it */ \"./node_modules/markdown-it/index.js\");\n/* harmony import */ var markdown_it__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(markdown_it__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _markdownGrammarSvc__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./markdownGrammarSvc */ \"./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/markdownGrammarSvc.js\");\n/* harmony import */ var _extensionSvc__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./extensionSvc */ \"./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/extensionSvc.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils */ \"./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/utils.js\");\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n\n\n\n\n\nvar htmlSectionMarker = \"\\uF111\\uF222\\uF333\\uF444\";\nvar diffMatchPatch = new diff_match_patch__WEBPACK_IMPORTED_MODULE_0___default.a(); // Disable spell checking in specific tokens\n\nvar noSpellcheckTokens = Object.create(null);\n\nfunction createFlagMap(arr) {\n  return arr.reduce(function (map, type) {\n    return _objectSpread(_objectSpread({}, map), {}, _defineProperty({}, type, true));\n  }, {});\n}\n\nvar startSectionBlockTypeMap = createFlagMap(['paragraph_open', 'blockquote_open', 'heading_open', 'code', 'fence', 'table_open', 'html_block', 'bullet_list_open', 'ordered_list_open', 'hr', 'dl_open']);\nvar listBlockTypeMap = createFlagMap(['bullet_list_open', 'ordered_list_open']);\nvar blockquoteBlockTypeMap = createFlagMap(['blockquote_open']);\nvar tableBlockTypeMap = createFlagMap(['table_open']);\nvar deflistBlockTypeMap = createFlagMap(['dl_open']);\n\nfunction hashArray(arr, valueHash, valueArray) {\n  var hash = [];\n  arr.forEach(function (str) {\n    var strHash = valueHash[str];\n\n    if (strHash === undefined) {\n      strHash = valueArray.length;\n      valueArray.push(str);\n      valueHash[str] = strHash;\n    }\n\n    hash.push(strHash);\n  });\n  return String.fromCharCode.apply(null, hash);\n}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  defaultOptions: null,\n  defaultConverter: null,\n  defaultPrismGrammars: null,\n  init: function init() {\n    var defaultProperties = {\n      extensions: _utils__WEBPACK_IMPORTED_MODULE_4__[\"default\"].computedPresets[\"default\"]\n    }; // Default options for the markdown converter and the grammar\n\n    this.defaultOptions = _objectSpread(_objectSpread({}, _extensionSvc__WEBPACK_IMPORTED_MODULE_3__[\"default\"].getOptions(defaultProperties)), {}, {\n      insideFences: insideFences\n    });\n    this.defaultConverter = this.createConverter(this.defaultOptions);\n    this.defaultPrismGrammars = _markdownGrammarSvc__WEBPACK_IMPORTED_MODULE_2__[\"default\"].makeGrammars(this.defaultOptions);\n  },\n\n  /**\n  * Creates a converter and init it with extensions.\n  * @returns {Object} A converter.\n  */\n  createConverter: function createConverter(options) {\n    // Let the listeners add the rules\n    var converter = new markdown_it__WEBPACK_IMPORTED_MODULE_1___default.a('zero');\n    converter.core.ruler.enable([], true);\n    converter.block.ruler.enable([], true);\n    converter.inline.ruler.enable([], true);\n    _extensionSvc__WEBPACK_IMPORTED_MODULE_3__[\"default\"].initConverter(converter, options);\n    Object.keys(startSectionBlockTypeMap).forEach(function (type) {\n      var rule = converter.renderer.rules[type] || converter.renderer.renderToken;\n\n      converter.renderer.rules[type] = function (tokens, idx, opts, env, self) {\n        if (tokens[idx].sectionDelimiter) {\n          // Add section delimiter\n          return htmlSectionMarker + rule.call(converter.renderer, tokens, idx, opts, env, self);\n        }\n\n        return rule.call(converter.renderer, tokens, idx, opts, env, self);\n      };\n    });\n    return converter;\n  },\n\n  /**\n  * Parse markdown sections by passing the 2 first block rules of the markdown-it converter.\n  * @param {Object} converter The markdown-it converter.\n  * @param {String} text The text to be parsed.\n  * @returns {Object} A parsing context to be passed to `convert`.\n  */\n  parseSections: function parseSections(converter, text) {\n    var markdownState = new converter.core.State(text, converter, {});\n    var markdownCoreRules = converter.core.ruler.getRules('');\n    markdownCoreRules[0](markdownState); // Pass the normalize rule\n\n    markdownCoreRules[1](markdownState); // Pass the block rule\n\n    var lines = text.split('\\n');\n\n    if (!lines[lines.length - 1]) {\n      // In cledit, last char is always '\\n'.\n      // Remove it as one will be added by addSection\n      lines.pop();\n    }\n\n    var parsingCtx = {\n      text: text,\n      sections: [],\n      converter: converter,\n      markdownState: markdownState,\n      markdownCoreRules: markdownCoreRules\n    };\n    var data = 'main';\n    var i = 0;\n\n    function addSection(maxLine) {\n      var section = {\n        text: '',\n        data: data\n      };\n\n      for (; i < maxLine; i += 1) {\n        section.text += \"\".concat(lines[i], \"\\n\");\n      }\n\n      if (section) {\n        parsingCtx.sections.push(section);\n      }\n    }\n\n    markdownState.tokens.forEach(function (token, index) {\n      // index === 0 means there are empty lines at the begining of the file\n      if (token.level === 0 && startSectionBlockTypeMap[token.type] === true) {\n        if (index > 0) {\n          token.sectionDelimiter = true;\n          addSection(token.map[0]);\n        }\n\n        if (listBlockTypeMap[token.type] === true) {\n          data = 'list';\n        } else if (blockquoteBlockTypeMap[token.type] === true) {\n          data = 'blockquote';\n        } else if (tableBlockTypeMap[token.type] === true) {\n          data = 'table';\n        } else if (deflistBlockTypeMap[token.type] === true) {\n          data = 'deflist';\n        } else {\n          data = 'main';\n        }\n      }\n    });\n    addSection(lines.length);\n    return parsingCtx;\n  },\n\n  /**\n  * Convert markdown sections previously parsed with `parseSections`.\n  * @param {Object} parsingCtx The parsing context returned by `parseSections`.\n  * @param {Object} previousConversionCtx The conversion context returned by a previous call\n  * to `convert`, in order to calculate the `htmlSectionDiff` of the returned conversion context.\n  * @returns {Object} A conversion context.\n  */\n  convert: function convert(parsingCtx, previousConversionCtx) {\n    // This function can be called twice without editor modification\n    // so prevent from converting it again.\n    if (!parsingCtx.markdownState.isConverted) {\n      // Skip 2 first rules previously passed in parseSections\n      parsingCtx.markdownCoreRules.slice(2).forEach(function (rule) {\n        return rule(parsingCtx.markdownState);\n      });\n      parsingCtx.markdownState.isConverted = true;\n    }\n\n    var tokens = parsingCtx.markdownState.tokens;\n    var html = parsingCtx.converter.renderer.render(tokens, parsingCtx.converter.options, parsingCtx.markdownState.env);\n    var htmlSectionList = html.split(htmlSectionMarker);\n\n    if (htmlSectionList[0] === '') {\n      htmlSectionList.shift();\n    }\n\n    var valueHash = Object.create(null);\n    var valueArray = [];\n    var newSectionHash = hashArray(htmlSectionList, valueHash, valueArray);\n    var htmlSectionDiff;\n\n    if (previousConversionCtx) {\n      var oldSectionHash = hashArray(previousConversionCtx.htmlSectionList, valueHash, valueArray);\n      htmlSectionDiff = diffMatchPatch.diff_main(oldSectionHash, newSectionHash, false);\n    } else {\n      htmlSectionDiff = [[1, newSectionHash]];\n    }\n\n    return {\n      text: parsingCtx.text,\n      sectionList: parsingCtx.sectionList,\n      htmlSectionList: htmlSectionList,\n      htmlSectionDiff: htmlSectionDiff\n    };\n  },\n\n  /**\n  * Helper to highlight arbitrary markdown\n  * @param {Object} markdown The markdown content to highlight.\n  * @param {Object} converter An optional converter.\n  * @param {Object} grammars Optional grammars.\n  * @returns {Object} The highlighted markdown in HTML format.\n  */\n  highlight: function highlight(markdown) {\n    var converter = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.defaultConverter;\n    var grammars = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.defaultPrismGrammars;\n    var parsingCtx = this.parseSections(converter, markdown);\n    return {};\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/markdownConversionSvc.js\n");

/***/ }),

/***/ "./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/markdownGrammarSvc.js":
/*!*******************************************************************************************!*\
  !*** ./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/markdownGrammarSvc.js ***!
  \*******************************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nvar charInsideUrl = '(&|[-A-Z0-9+@#/%?=~_|[\\\\]()!:,.;])';\nvar charEndingUrl = '(&|[-A-Z0-9+@#/%=~_|[\\\\])])';\nvar urlPattern = new RegExp(\"(https?|ftp)(://\".concat(charInsideUrl, \"*\").concat(charEndingUrl, \")(?=$|\\\\W)\"), 'gi');\nvar emailPattern = /(?:mailto:)?([-.\\w]+@[-a-z0-9]+(\\.[-a-z0-9]+)*\\.[a-z]+)/gi;\nvar markup = {\n  comment: /<!--[\\w\\W]*?-->/g,\n  tag: {\n    pattern: /<\\/?[\\w:-]+\\s*(?:\\s+[\\w:-]+(?:=(?:(\"|')(\\\\?[\\w\\W])*?\\1|[^\\s'\">=]+))?\\s*)*\\/?>/gi,\n    inside: {\n      tag: {\n        pattern: /^<\\/?[\\w:-]+/i,\n        inside: {\n          punctuation: /^<\\/?/,\n          namespace: /^[\\w-]+?:/\n        }\n      },\n      'attr-value': {\n        pattern: /=(?:('|\")[\\w\\W]*?(\\1)|[^\\s>]+)/gi,\n        inside: {\n          punctuation: /=|>|\"/g\n        }\n      },\n      punctuation: /\\/?>/g,\n      'attr-name': {\n        pattern: /[\\w:-]+/g,\n        inside: {\n          namespace: /^[\\w-]+?:/\n        }\n      }\n    }\n  },\n  entity: /&#?[\\da-z]{1,8};/gi\n};\nvar latex = {\n  // A tex command e.g. \\foo\n  keyword: /\\\\(?:[^a-zA-Z]|[a-zA-Z]+)/g,\n  // Curly and square braces\n  lparen: /[[({]/g,\n  // Curly and square braces\n  rparen: /[\\])}]/g,\n  // A comment. Tex comments start with % and go to\n  // the end of the line\n  comment: /%.*/g\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  makeGrammars: function makeGrammars(options) {\n    var grammars = {\n      main: {},\n      list: {},\n      blockquote: {},\n      table: {},\n      deflist: {}\n    };\n    grammars.deflist.deflist = {\n      pattern: new RegExp(['^ {0,3}\\\\S.*\\\\n', // Description line\n      '(?:[ \\\\t]*\\\\n)?', // Optional empty line\n      '(?:', '[ \\\\t]*:[ \\\\t].*\\\\n', // Colon line\n      '(?:', '(?:', '.*\\\\S.*\\\\n', // Non-empty line\n      '|', '[ \\\\t]*\\\\n(?! ?\\\\S)', // Or empty line not followed by unindented line\n      ')', ')*', '(?:[ \\\\t]*\\\\n)*', // Empty lines\n      ')+'].join(''), 'm'),\n      inside: {\n        term: /^.+/,\n        cl: /^[ \\t]*:[ \\t]/gm\n      }\n    };\n    var insideFences = options.insideFences || {};\n    insideFences['cl cl-pre'] = /```|~~~/;\n\n    if (options.fence) {\n      grammars.main['pre gfm'] = {\n        pattern: /^(```|~~~)[\\s\\S]*?\\n\\1 *$/gm,\n        inside: insideFences\n      };\n      grammars.list['pre gfm'] = {\n        pattern: /^(?: {4}|\\t)(```|~~~)[\\s\\S]*?\\n(?: {4}|\\t)\\1\\s*$/gm,\n        inside: insideFences\n      };\n      grammars.deflist.deflist.inside['pre gfm'] = grammars.list['pre gfm'];\n    }\n\n    grammars.main['h1 alt'] = {\n      pattern: /^.+\\n=+[ \\t]*$/gm,\n      inside: {\n        'cl cl-hash': /=+[ \\t]*$/\n      }\n    };\n    grammars.main['h2 alt'] = {\n      pattern: /^.+\\n-+[ \\t]*$/gm,\n      inside: {\n        'cl cl-hash': /-+[ \\t]*$/\n      }\n    };\n\n    for (var i = 6; i >= 1; i -= 1) {\n      grammars.main[\"h\".concat(i)] = {\n        pattern: new RegExp(\"^#{\".concat(i, \"}[ \\t].+$\"), 'gm'),\n        inside: {\n          'cl cl-hash': new RegExp(\"^#{\".concat(i, \"}\"))\n        }\n      };\n    }\n\n    var list = /^[ \\t]*([*+-]|\\d+\\.)[ \\t]/gm;\n    var blockquote = {\n      pattern: /^\\s*>.*(?:\\n[ \\t]*\\S.*)*/gm,\n      inside: {\n        'cl cl-gt': /^\\s*>/gm,\n        'cl cl-li': list\n      }\n    };\n    grammars.list.blockquote = blockquote;\n    grammars.blockquote.blockquote = blockquote;\n    grammars.deflist.deflist.inside.blockquote = blockquote;\n    grammars.list['cl cl-li'] = list;\n    grammars.blockquote['cl cl-li'] = list;\n    grammars.deflist.deflist.inside['cl cl-li'] = list;\n    grammars.table.table = {\n      pattern: new RegExp(['^\\\\s*\\\\S.*[|].*\\\\n', // Header Row\n      '[-| :]+\\\\n', // Separator\n      '(?:.*[|].*\\\\n?)*', // Table rows\n      '$'].join(''), 'gm'),\n      inside: {\n        'cl cl-title-separator': /^[-| :]+$/gm,\n        'cl cl-pipe': /[|]/gm\n      }\n    };\n    grammars.main.hr = {\n      pattern: /^ {0,3}([*\\-_] *){3,}$/gm\n    };\n\n    if (options.tasklist) {\n      grammars.list.task = {\n        pattern: /^\\[[ xX]\\] /,\n        inside: {\n          cl: /[[\\]]/,\n          strong: /[xX]/\n        }\n      };\n    }\n\n    var defs = {};\n\n    if (options.footnote) {\n      defs.fndef = {\n        pattern: /^ {0,3}\\[\\^.*?\\]:.*$/gm,\n        inside: {\n          'ref-id': {\n            pattern: /^ {0,3}\\[\\^.*?\\]/,\n            inside: {\n              cl: /(\\[\\^|\\])/\n            }\n          }\n        }\n      };\n    }\n\n    if (options.abbr) {\n      defs.abbrdef = {\n        pattern: /^ {0,3}\\*\\[.*?\\]:.*$/gm,\n        inside: {\n          'abbr-id': {\n            pattern: /^ {0,3}\\*\\[.*?\\]/,\n            inside: {\n              cl: /(\\*\\[|\\])/\n            }\n          }\n        }\n      };\n    }\n\n    defs.linkdef = {\n      pattern: /^ {0,3}\\[.*?\\]:.*$/gm,\n      inside: {\n        'link-id': {\n          pattern: /^ {0,3}\\[.*?\\]/,\n          inside: {\n            cl: /[[\\]]/\n          }\n        },\n        url: urlPattern\n      }\n    };\n    Object.entries(defs).forEach(function (_ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          name = _ref2[0],\n          def = _ref2[1];\n\n      grammars.main[name] = def;\n      grammars.list[name] = def;\n      grammars.blockquote[name] = def;\n      grammars.table[name] = def;\n      grammars.deflist[name] = def;\n    });\n    grammars.main.pre = {\n      pattern: /^\\s*\\n(?: {4}|\\t).*\\S.*\\n((?: {4}|\\t).*\\n)*/gm\n    };\n    var rest = {};\n    rest.code = {\n      pattern: /(`+)[\\s\\S]*?\\1/g,\n      inside: {\n        'cl cl-code': /`/\n      }\n    };\n\n    if (options.math) {\n      rest['math block'] = {\n        pattern: /\\\\\\\\\\[[\\s\\S]*?\\\\\\\\\\]/g,\n        inside: {\n          'cl cl-bracket-start': /^\\\\\\\\\\[/,\n          'cl cl-bracket-end': /\\\\\\\\\\]$/,\n          rest: latex\n        }\n      };\n      rest['math inline'] = {\n        pattern: /\\\\\\\\\\([\\s\\S]*?\\\\\\\\\\)/g,\n        inside: {\n          'cl cl-bracket-start': /^\\\\\\\\\\(/,\n          'cl cl-bracket-end': /\\\\\\\\\\)$/,\n          rest: latex\n        }\n      };\n      rest['math expr block'] = {\n        pattern: /(\\$\\$)[\\s\\S]*?\\1/g,\n        inside: {\n          'cl cl-bracket-start': /^\\$\\$/,\n          'cl cl-bracket-end': /\\$\\$$/,\n          rest: latex\n        }\n      };\n      rest['math expr inline'] = {\n        pattern: /\\$(?!\\s)[\\s\\S]*?\\S\\$(?!\\d)/g,\n        inside: {\n          'cl cl-bracket-start': /^\\$/,\n          'cl cl-bracket-end': /\\$$/,\n          rest: latex\n        }\n      };\n    }\n\n    if (options.footnote) {\n      rest.inlinefn = {\n        pattern: /\\^\\[.+?\\]/g,\n        inside: {\n          cl: /(\\^\\[|\\])/\n        }\n      };\n      rest.fn = {\n        pattern: /\\[\\^.+?\\]/g,\n        inside: {\n          cl: /(\\[\\^|\\])/\n        }\n      };\n    }\n\n    rest.img = {\n      pattern: /!\\[.*?\\]\\(.+?\\)/g,\n      inside: {\n        'cl cl-title': /['‘][^'’]*['’]|[\"“][^\"”]*[\"”](?=\\)$)/,\n        'cl cl-src': {\n          pattern: /(\\]\\()[^('\" \\t]+(?=[)'\" \\t])/,\n          lookbehind: true\n        }\n      }\n    };\n\n    if (options.imgsize) {\n      rest.img.inside['cl cl-size'] = /=\\d*x\\d*/;\n    }\n\n    rest.link = {\n      pattern: /\\[.*?\\]\\(.+?\\)/gm,\n      inside: {\n        'cl cl-underlined-text': {\n          pattern: /(\\[)[^\\]]*/,\n          lookbehind: true\n        },\n        'cl cl-title': /['‘][^'’]*['’]|[\"“][^\"”]*[\"”](?=\\)$)/\n      }\n    };\n    rest.imgref = {\n      pattern: /!\\[.*?\\][ \\t]*\\[.*?\\]/g\n    };\n    rest.linkref = {\n      pattern: /\\[.*?\\][ \\t]*\\[.*?\\]/g,\n      inside: {\n        'cl cl-underlined-text': {\n          pattern: /^(\\[)[^\\]]*(?=\\][ \\t]*\\[)/,\n          lookbehind: true\n        }\n      }\n    };\n    rest.comment = markup.comment;\n    rest.tag = markup.tag;\n    rest.url = urlPattern;\n    rest.email = emailPattern;\n    rest.strong = {\n      pattern: /(^|[^\\w*])(__|\\*\\*)(?![_*])[\\s\\S]*?\\2(?=([^\\w*]|$))/gm,\n      lookbehind: true,\n      inside: {\n        'cl cl-strong cl-start': /^(__|\\*\\*)/,\n        'cl cl-strong cl-close': /(__|\\*\\*)$/\n      }\n    };\n    rest.em = {\n      pattern: /(^|[^\\w*])(_|\\*)(?![_*])[\\s\\S]*?\\2(?=([^\\w*]|$))/gm,\n      lookbehind: true,\n      inside: {\n        'cl cl-em cl-start': /^(_|\\*)/,\n        'cl cl-em cl-close': /(_|\\*)$/\n      }\n    };\n    rest['strong em'] = {\n      pattern: /(^|[^\\w*])(__|\\*\\*)(_|\\*)(?![_*])[\\s\\S]*?\\3\\2(?=([^\\w*]|$))/gm,\n      lookbehind: true,\n      inside: {\n        'cl cl-strong cl-start': /^(__|\\*\\*)(_|\\*)/,\n        'cl cl-strong cl-close': /(_|\\*)(__|\\*\\*)$/\n      }\n    };\n    rest['strong em inv'] = {\n      pattern: /(^|[^\\w*])(_|\\*)(__|\\*\\*)(?![_*])[\\s\\S]*?\\3\\2(?=([^\\w*]|$))/gm,\n      lookbehind: true,\n      inside: {\n        'cl cl-strong cl-start': /^(_|\\*)(__|\\*\\*)/,\n        'cl cl-strong cl-close': /(__|\\*\\*)(_|\\*)$/\n      }\n    };\n\n    if (options.del) {\n      rest.del = {\n        pattern: /(^|[^\\w*])(~~)[\\s\\S]*?\\2(?=([^\\w*]|$))/gm,\n        lookbehind: true,\n        inside: {\n          cl: /~~/,\n          'cl-del-text': /[^~]+/\n        }\n      };\n    }\n\n    if (options.mark) {\n      rest.mark = {\n        pattern: /(^|[^\\w*])(==)[\\s\\S]*?\\2(?=([^\\w*]|$))/gm,\n        lookbehind: true,\n        inside: {\n          cl: /==/,\n          'cl-mark-text': /[^=]+/\n        }\n      };\n    }\n\n    if (options.sub) {\n      rest.sub = {\n        pattern: /(~)(?=\\S)(.*?\\S)\\1/gm,\n        inside: {\n          cl: /~/\n        }\n      };\n    }\n\n    if (options.sup) {\n      rest.sup = {\n        pattern: /(\\^)(?=\\S)(.*?\\S)\\1/gm,\n        inside: {\n          cl: /\\^/\n        }\n      };\n    }\n\n    rest.entity = markup.entity;\n\n    for (var c = 6; c >= 1; c -= 1) {\n      grammars.main[\"h\".concat(c)].inside.rest = rest;\n    }\n\n    grammars.main['h1 alt'].inside.rest = rest;\n    grammars.main['h2 alt'].inside.rest = rest;\n    grammars.table.table.inside.rest = rest;\n    grammars.main.rest = rest;\n    grammars.list.rest = rest;\n    grammars.blockquote.blockquote.inside.rest = rest;\n    grammars.deflist.deflist.inside.rest = rest;\n\n    if (options.footnote) {\n      grammars.main.fndef.inside.rest = rest;\n    }\n\n    var restLight = {\n      code: rest.code,\n      inlinefn: rest.inlinefn,\n      fn: rest.fn,\n      link: rest.link,\n      linkref: rest.linkref\n    };\n    rest.strong.inside.rest = restLight;\n    rest.em.inside.rest = restLight;\n\n    if (options.del) {\n      rest.del.inside.rest = restLight;\n    }\n\n    if (options.mark) {\n      rest.mark.inside.rest = restLight;\n    }\n\n    var inside = {\n      code: rest.code,\n      comment: rest.comment,\n      tag: rest.tag,\n      strong: rest.strong,\n      em: rest.em,\n      del: rest.del,\n      sub: rest.sub,\n      sup: rest.sup,\n      entity: markup.entity\n    };\n    rest.link.inside['cl cl-underlined-text'].inside = inside;\n    rest.linkref.inside['cl cl-underlined-text'].inside = inside; // Wrap any other characters to allow paragraph folding\n\n    Object.entries(grammars).forEach(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          grammar = _ref4[1];\n\n      grammar.rest = grammar.rest || {};\n      grammar.rest.p = /.+/;\n    });\n    return grammars;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/markdownGrammarSvc.js\n");

/***/ }),

/***/ "./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/utils.js":
/*!******************************************************************************!*\
  !*** ./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/utils.js ***!
  \******************************************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/regenerator */ \"./node_modules/@babel/runtime/regenerator/index.js\");\n/* harmony import */ var _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0__);\n\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) { try { var info = gen[key](arg); var value = info.value; } catch (error) { reject(error); return; } if (info.done) { resolve(value); } else { Promise.resolve(value).then(_next, _throw); } }\n\nfunction _asyncToGenerator(fn) { return function () { var self = this, args = arguments; return new Promise(function (resolve, reject) { var gen = fn.apply(self, args); function _next(value) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value); } function _throw(err) { asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err); } _next(undefined); }); }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\n// For utils.uid()\nvar uidLength = 16;\nvar crypto = window.crypto || window.msCrypto;\nvar alphabet = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ'.split('');\nvar radix = alphabet.length;\nvar array = new Uint32Array(uidLength); // For utils.parseQueryParams()\n\nvar parseQueryParams = function parseQueryParams(params) {\n  var result = {};\n  params.split('&').forEach(function (param) {\n    var _param$split$map = param.split('=').map(decodeURIComponent),\n        _param$split$map2 = _slicedToArray(_param$split$map, 2),\n        key = _param$split$map2[0],\n        value = _param$split$map2[1];\n\n    if (key && value != null) {\n      result[key] = value;\n    }\n  });\n  return result;\n}; // For utils.setQueryParams()\n\n\nvar filterParams = function filterParams() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var result = {};\n  Object.entries(params).forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    if (key && value != null) {\n      result[key] = value;\n    }\n  });\n  return result;\n}; // For utils.computeProperties()\n\n\nvar deepOverride = function deepOverride(obj, opt) {\n  if (obj === undefined) {\n    return opt;\n  }\n\n  var objType = Object.prototype.toString.call(obj);\n  var optType = Object.prototype.toString.call(opt);\n\n  if (objType !== optType) {\n    return obj;\n  }\n\n  if (objType !== '[object Object]') {\n    return opt === undefined ? obj : opt;\n  }\n\n  Object.keys(_objectSpread(_objectSpread({}, obj), opt)).forEach(function (key) {\n    obj[key] = deepOverride(obj[key], opt[key]);\n  });\n  return obj;\n}; // For utils.addQueryParams()\n\n\nvar urlParser = document.createElement('a');\n\nvar deepCopy = function deepCopy(obj) {\n  if (obj == null) {\n    return obj;\n  }\n\n  return JSON.parse(JSON.stringify(obj));\n}; // Compute presets\n\n\nvar computedPresets = {}; // Object.keys(presets).forEach((key) => {\n//     let preset = deepCopy(presets[key][0]);\n//     if (presets[key][1]) {\n//         preset = deepOverride(preset, presets[key][1]);\n//     }\n//     computedPresets[key] = preset;\n// });\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  computedPresets: computedPresets,\n  queryParams: parseQueryParams(window.location.hash.slice(1)),\n  setQueryParams: function setQueryParams() {\n    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.queryParams = filterParams(params);\n    var serializedParams = Object.entries(this.queryParams).map(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n          key = _ref4[0],\n          value = _ref4[1];\n\n      return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(value));\n    }).join('&');\n    var hash = \"#\".concat(serializedParams);\n\n    if (window.location.hash !== hash) {\n      window.location.replace(hash);\n    }\n  },\n  sanitizeText: function sanitizeText(text) {\n    var result = \"\".concat(text || '').slice(0, constants.textMaxLength); // last char must be a `\\n`.\n\n    return \"\".concat(result, \"\\n\").replace(/\\n\\n$/, '\\n');\n  },\n  sanitizeName: function sanitizeName(name) {\n    return \"\".concat(name || '') // Keep only 250 characters\n    .slice(0, 250) || constants.defaultName;\n  },\n  sanitizeFilename: function sanitizeFilename(name) {\n    return this.sanitizeName(\"\".concat(name || '') // Replace `/`, control characters and other kind of spaces with a space\n    .replace(/[/\\x00-\\x1F\\x7f-\\xa0\\s]+/g, ' ') // eslint-disable-line no-control-regex\n    .trim()) || constants.defaultName;\n  },\n  deepCopy: deepCopy,\n  serializeObject: function serializeObject(obj) {\n    return obj === undefined ? obj : JSON.stringify(obj, function (key, value) {\n      if (Object.prototype.toString.call(value) !== '[object Object]') {\n        return value;\n      } // Sort keys to have a predictable result\n\n\n      return Object.keys(value).sort().reduce(function (sorted, valueKey) {\n        sorted[valueKey] = value[valueKey];\n        return sorted;\n      }, {});\n    });\n  },\n  search: function search(items, criteria) {\n    var result;\n    items.some(function (item) {\n      // If every field fits the criteria\n      if (Object.entries(criteria).every(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            key = _ref6[0],\n            value = _ref6[1];\n\n        return value === item[key];\n      })) {\n        result = item;\n      }\n\n      return result;\n    });\n    return result;\n  },\n  uid: function uid() {\n    crypto.getRandomValues(array);\n    return array.cl_map(function (value) {\n      return alphabet[value % radix];\n    }).join('');\n  },\n  hash: function hash(str) {\n    // https://stackoverflow.com/a/7616484/1333165\n    var hash = 0;\n    if (!str) return hash;\n\n    for (var i = 0; i < str.length; i += 1) {\n      var _char = str.charCodeAt(i);\n\n      hash = (hash << 5) - hash + _char; // eslint-disable-line no-bitwise\n\n      hash |= 0; // eslint-disable-line no-bitwise\n    }\n\n    return hash;\n  },\n  getItemHash: function getItemHash(item) {\n    return this.hash(this.serializeObject(_objectSpread(_objectSpread({}, item), {}, {\n      // These properties must not be part of the hash\n      id: undefined,\n      hash: undefined,\n      history: undefined\n    })));\n  },\n  addItemHash: function addItemHash(item) {\n    return _objectSpread(_objectSpread({}, item), {}, {\n      hash: this.getItemHash(item)\n    });\n  },\n  makeWorkspaceId: function makeWorkspaceId(params) {\n    return Math.abs(this.hash(this.serializeObject(params))).toString(36);\n  },\n  getDbName: function getDbName(workspaceId) {\n    var dbName = 'stackedit-db';\n\n    if (workspaceId !== 'main') {\n      dbName += \"-\".concat(workspaceId);\n    }\n\n    return dbName;\n  },\n  encodeBase64: function encodeBase64(str) {\n    var urlSafe = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    var uriEncodedStr = encodeURIComponent(str);\n    var utf8Str = uriEncodedStr.replace(/%([0-9A-F]{2})/g, function (match, p1) {\n      return String.fromCharCode(\"0x\".concat(p1));\n    });\n    var result = btoa(utf8Str);\n\n    if (!urlSafe) {\n      return result;\n    }\n\n    return result.replace(/\\//g, '_') // Replace `/` with `_`\n    .replace(/\\+/g, '-') // Replace `+` with `-`\n    .replace(/=+$/, ''); // Remove trailing `=`\n  },\n  decodeBase64: function decodeBase64(str) {\n    // In case of URL safe base64\n    var sanitizedStr = str.replace(/_/g, '/').replace(/-/g, '+');\n    var utf8Str = atob(sanitizedStr);\n    var uriEncodedStr = utf8Str.split('').map(function (c) {\n      return \"%\".concat(\"00\".concat(c.charCodeAt(0).toString(16)).slice(-2));\n    }).join('');\n    return decodeURIComponent(uriEncodedStr);\n  },\n  computeProperties: function computeProperties(yamlProperties) {\n    var properties = {};\n\n    try {\n      properties = yaml.safeLoad(yamlProperties) || {};\n    } catch (e) {// Ignore\n    }\n\n    var extensions = properties.extensions || {};\n    var computedPreset = deepCopy(computedPresets[extensions.preset] || computedPresets[\"default\"]);\n    var computedExtensions = deepOverride(computedPreset, properties.extensions);\n    computedExtensions.preset = extensions.preset;\n    properties.extensions = computedExtensions;\n    return properties;\n  },\n  randomize: function randomize(value) {\n    return Math.floor((1 + Math.random() * 0.2) * value);\n  },\n  setInterval: function (_setInterval) {\n    function setInterval(_x, _x2) {\n      return _setInterval.apply(this, arguments);\n    }\n\n    setInterval.toString = function () {\n      return _setInterval.toString();\n    };\n\n    return setInterval;\n  }(function (func, interval) {\n    return setInterval(function () {\n      return func();\n    }, this.randomize(interval));\n  }),\n  awaitSequence: function awaitSequence(values, asyncFunc) {\n    return _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee2() {\n      var results, valuesLeft, runWithNextValue;\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              results = [];\n              valuesLeft = values.slice().reverse();\n\n              runWithNextValue = /*#__PURE__*/function () {\n                var _ref7 = _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee() {\n                  return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (valuesLeft.length) {\n                            _context.next = 2;\n                            break;\n                          }\n\n                          return _context.abrupt(\"return\", results);\n\n                        case 2:\n                          _context.t0 = results;\n                          _context.next = 5;\n                          return asyncFunc(valuesLeft.pop());\n\n                        case 5:\n                          _context.t1 = _context.sent;\n\n                          _context.t0.push.call(_context.t0, _context.t1);\n\n                          return _context.abrupt(\"return\", runWithNextValue());\n\n                        case 8:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                }));\n\n                return function runWithNextValue() {\n                  return _ref7.apply(this, arguments);\n                };\n              }();\n\n              return _context2.abrupt(\"return\", runWithNextValue());\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }))();\n  },\n  awaitSome: function awaitSome(asyncFunc) {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.mark(function _callee3() {\n      return _babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default.a.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return asyncFunc();\n\n            case 2:\n              if (!_context3.sent) {\n                _context3.next = 4;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", _this.awaitSome(asyncFunc));\n\n            case 4:\n              return _context3.abrupt(\"return\", null);\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }))();\n  },\n  someResult: function someResult(values, func) {\n    var result;\n    values.some(function (value) {\n      result = func(value);\n      return result;\n    });\n    return result;\n  },\n  parseQueryParams: parseQueryParams,\n  addQueryParams: function addQueryParams() {\n    var url = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var hash = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    var keys = Object.keys(params).filter(function (key) {\n      return params[key] != null;\n    });\n    urlParser.href = url;\n\n    if (!keys.length) {\n      return urlParser.href;\n    }\n\n    var serializedParams = keys.map(function (key) {\n      return \"\".concat(encodeURIComponent(key), \"=\").concat(encodeURIComponent(params[key]));\n    }).join('&');\n\n    if (hash) {\n      if (urlParser.hash) {\n        urlParser.hash += '&';\n      } else {\n        urlParser.hash = '#';\n      }\n\n      urlParser.hash += serializedParams;\n    } else {\n      if (urlParser.search) {\n        urlParser.search += '&';\n      } else {\n        urlParser.search = '?';\n      }\n\n      urlParser.search += serializedParams;\n    }\n\n    return urlParser.href;\n  },\n  resolveUrl: function resolveUrl(baseUrl, path) {\n    var oldBaseElt = document.getElementsByTagName('base')[0];\n    var oldHref = oldBaseElt && oldBaseElt.href;\n    var newBaseElt = oldBaseElt || document.head.appendChild(document.createElement('base'));\n    newBaseElt.href = baseUrl;\n    urlParser.href = path;\n    var result = urlParser.href;\n\n    if (oldBaseElt) {\n      oldBaseElt.href = oldHref;\n    } else {\n      document.head.removeChild(newBaseElt);\n    }\n\n    return result;\n  },\n  getHostname: function getHostname(url) {\n    urlParser.href = url;\n    return urlParser.hostname;\n  },\n  encodeUrlPath: function encodeUrlPath(path) {\n    return path ? path.split('/').map(encodeURIComponent).join('/') : '';\n  },\n  parseGithubRepoUrl: function parseGithubRepoUrl(url) {\n    var parsedRepo = url && url.match(/([^/:]+)\\/([^/]+?)(?:\\.git|\\/)?$/);\n    return parsedRepo && {\n      owner: parsedRepo[1],\n      repo: parsedRepo[2]\n    };\n  },\n  parseGitlabProjectPath: function parseGitlabProjectPath(url) {\n    var parsedProject = url && url.match(/^https:\\/\\/[^/]+\\/(.+?)(?:\\.git|\\/)?$/);\n    return parsedProject && parsedProject[1];\n  },\n  createHiddenIframe: function createHiddenIframe(url) {\n    var iframeElt = document.createElement('iframe');\n    iframeElt.style.position = 'absolute';\n    iframeElt.style.left = '-99px';\n    iframeElt.style.width = '1px';\n    iframeElt.style.height = '1px';\n    iframeElt.src = url;\n    return iframeElt;\n  },\n  wrapRange: function wrapRange(range, eltProperties) {\n    var rangeLength = \"\".concat(range).length;\n    var wrappedLength = 0;\n    var treeWalker = document.createTreeWalker(range.commonAncestorContainer, NodeFilter.SHOW_TEXT);\n    var startOffset = range.startOffset;\n    treeWalker.currentNode = range.startContainer;\n\n    if (treeWalker.currentNode.nodeType === Node.TEXT_NODE || treeWalker.nextNode()) {\n      do {\n        if (treeWalker.currentNode.nodeValue !== '\\n') {\n          (function () {\n            if (treeWalker.currentNode === range.endContainer && range.endOffset < treeWalker.currentNode.nodeValue.length) {\n              treeWalker.currentNode.splitText(range.endOffset);\n            }\n\n            if (startOffset) {\n              treeWalker.currentNode = treeWalker.currentNode.splitText(startOffset);\n              startOffset = 0;\n            }\n\n            var elt = document.createElement('span');\n            Object.entries(eltProperties).forEach(function (_ref8) {\n              var _ref9 = _slicedToArray(_ref8, 2),\n                  key = _ref9[0],\n                  value = _ref9[1];\n\n              elt[key] = value;\n            });\n            treeWalker.currentNode.parentNode.insertBefore(elt, treeWalker.currentNode);\n            elt.appendChild(treeWalker.currentNode);\n          })();\n        }\n\n        wrappedLength += treeWalker.currentNode.nodeValue.length;\n\n        if (wrappedLength >= rangeLength) {\n          break;\n        }\n      } while (treeWalker.nextNode());\n    }\n  },\n  unwrapRange: function unwrapRange(eltCollection) {\n    Array.prototype.slice.call(eltCollection).forEach(function (elt) {\n      // Loop in case another wrapper has been added inside\n      for (var child = elt.firstChild; child; child = elt.firstChild) {\n        if (child.nodeType === 3) {\n          if (elt.previousSibling && elt.previousSibling.nodeType === 3) {\n            child.nodeValue = elt.previousSibling.nodeValue + child.nodeValue;\n            elt.parentNode.removeChild(elt.previousSibling);\n          }\n\n          if (!child.nextSibling && elt.nextSibling && elt.nextSibling.nodeType === 3) {\n            child.nodeValue += elt.nextSibling.nodeValue;\n            elt.parentNode.removeChild(elt.nextSibling);\n          }\n        }\n\n        elt.parentNode.insertBefore(child, elt);\n      }\n\n      elt.parentNode.removeChild(elt);\n    });\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./resources/js/Lib/vuetify-formjson/Fields/StackEdit/services/utils.js\n");

/***/ })

}]);