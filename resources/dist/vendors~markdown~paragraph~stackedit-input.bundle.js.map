{"version":3,"sources":["webpack:///./node_modules/linkify-it/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/hr.js","webpack:///./node_modules/markdown-it/index.js","webpack:///./node_modules/uc.micro/index.js","webpack:///./node_modules/markdown-it/lib/rules_block/reference.js","webpack:///./node_modules/mdurl/index.js","webpack:///./node_modules/mdurl/parse.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_label.js","webpack:///./node_modules/markdown-it/lib/common/html_blocks.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_destination.js","webpack:///./node_modules/markdown-it/lib/rules_block/blockquote.js","webpack:///./node_modules/markdown-it/lib/common/utils.js","webpack:///./node_modules/markdown-it/lib/rules_block/heading.js","webpack:///./node_modules/markdown-it/lib/index.js","webpack:///./node_modules/markdown-it/lib/token.js","webpack:///./node_modules/markdown-it/lib/rules_inline/state_inline.js","webpack:///./node_modules/node-libs-browser/node_modules/punycode/punycode.js","webpack:///./node_modules/markdown-it/lib/rules_block/lheading.js","webpack:///./node_modules/markdown-it/lib/presets/zero.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text_collapse.js","webpack:///./node_modules/markdown-it/lib/rules_inline/autolink.js","webpack:///./node_modules/markdown-it/lib/rules_core/block.js","webpack:///./node_modules/mdurl/format.js","webpack:///./node_modules/markdown-it/lib/rules_inline/newline.js","webpack:///./node_modules/markdown-it/lib/presets/commonmark.js","webpack:///./node_modules/markdown-it/lib/rules_block/paragraph.js","webpack:///./node_modules/markdown-it/lib/ruler.js","webpack:///./node_modules/markdown-it/lib/rules_inline/backticks.js","webpack:///./node_modules/markdown-it/lib/rules_block/list.js","webpack:///./node_modules/uc.micro/categories/Z/regex.js","webpack:///./node_modules/markdown-it/lib/rules_core/normalize.js","webpack:///./node_modules/markdown-it/lib/parser_inline.js","webpack:///./node_modules/markdown-it/lib/helpers/index.js","webpack:///./node_modules/markdown-it/lib/common/html_re.js","webpack:///./node_modules/markdown-it/lib/rules_inline/entity.js","webpack:///./node_modules/markdown-it/lib/rules_block/html_block.js","webpack:///./node_modules/uc.micro/categories/Cf/regex.js","webpack:///./node_modules/markdown-it/lib/rules_inline/escape.js","webpack:///./node_modules/markdown-it/lib/rules_core/state_core.js","webpack:///./node_modules/markdown-it/lib/parser_block.js","webpack:///./node_modules/uc.micro/categories/P/regex.js","webpack:///./node_modules/markdown-it/lib/renderer.js","webpack:///./node_modules/markdown-it/lib/helpers/parse_link_title.js","webpack:///./node_modules/markdown-it/lib/rules_block/state_block.js","webpack:///./node_modules/markdown-it/lib/rules_inline/balance_pairs.js","webpack:///./node_modules/markdown-it/lib/rules_block/table.js","webpack:///./node_modules/markdown-it/lib/presets/default.js","webpack:///./node_modules/mdurl/decode.js","webpack:///./node_modules/markdown-it/lib/rules_inline/strikethrough.js","webpack:///./node_modules/markdown-it/lib/rules_inline/image.js","webpack:///./node_modules/markdown-it/lib/rules_core/linkify.js","webpack:///./node_modules/markdown-it/lib/rules_block/code.js","webpack:///./node_modules/markdown-it/lib/rules_core/inline.js","webpack:///./node_modules/uc.micro/categories/Cc/regex.js","webpack:///./node_modules/markdown-it/lib/parser_core.js","webpack:///./node_modules/markdown-it/lib/rules_core/smartquotes.js","webpack:///./node_modules/linkify-it/lib/re.js","webpack:///./node_modules/markdown-it/lib/rules_core/replacements.js","webpack:///./node_modules/markdown-it/lib/rules_inline/text.js","webpack:///./node_modules/markdown-it/lib/common/entities.js","webpack:///./node_modules/markdown-it/lib/rules_block/fence.js","webpack:///./node_modules/markdown-it/lib/rules_inline/html_inline.js","webpack:///./node_modules/mdurl/encode.js","webpack:///./node_modules/uc.micro/properties/Any/regex.js","webpack:///./node_modules/markdown-it/lib/rules_inline/emphasis.js","webpack:///./node_modules/markdown-it/lib/rules_inline/link.js"],"names":["assign","obj","sources","Array","prototype","slice","call","arguments","forEach","source","Object","keys","key","_class","toString","isFunction","escapeRE","str","replace","defaultOptions","fuzzyLink","fuzzyEmail","fuzzyIP","defaultSchemas","validate","text","pos","self","tail","re","http","RegExp","src_auth","src_host_port_strict","src_path","test","match","length","no_http","src_domain","src_domain_root","src_port","src_host_terminator","mailto","src_email_name","src_host_strict","tlds_default","split","compile","__opts__","tlds","__tlds__","untpl","tpl","src_tlds","onCompile","__tlds_replaced__","push","src_xn","join","email_fuzzy","tpl_email_fuzzy","link_fuzzy","tpl_link_fuzzy","link_no_ip_fuzzy","tpl_link_no_ip_fuzzy","host_fuzzy_test","tpl_host_fuzzy_test","aliases","schemaError","name","val","Error","__compiled__","__schemas__","compiled","link","isRegExp","createValidator","normalize","isString","alias","slist","filter","map","schema_test","src_ZPCc","schema_search","pretest","__index__","__text_cache__","resetScanCache","Match","shift","start","end","__last_index__","this","schema","__schema__","toLowerCase","index","lastIndex","raw","url","createMatch","LinkifyIt","schemas","options","reduce","acc","k","hasOwnProperty","add","definition","set","m","ml","me","len","next","tld_pos","exec","testSchemaAt","search","indexOf","result","list","keepOld","isArray","concat","sort","el","idx","arr","reverse","module","exports","isSpace","state","startLine","endLine","silent","marker","cnt","ch","token","bMarks","tShift","max","eMarks","sCount","blkIndent","src","charCodeAt","line","markup","String","fromCharCode","Any","Cc","Cf","P","Z","normalizeReference","_endLine","destEndPos","destEndLineNo","href","i","l","label","labelEnd","oldParentType","res","terminate","terminatorRules","title","lines","nextLine","lineMax","md","block","ruler","getRules","parentType","isEmpty","getLines","trim","helpers","parseLinkDestination","ok","normalizeLink","validateLink","parseLinkTitle","env","references","encode","decode","format","parse","Url","protocol","slashes","auth","port","hostname","hash","pathname","protocolPattern","portPattern","simplePathPattern","unwise","autoEscape","nonHostChars","hostEndingChars","hostnamePartPattern","hostnamePartStart","hostlessProtocol","slashedProtocol","slashesDenoteHost","lowerProto","hec","rest","simplePath","proto","substr","atSign","hostEnd","lastIndexOf","host","parseHost","ipv6Hostname","hostparts","part","newpart","j","validParts","notHost","bit","unshift","qm","u","disableNested","level","found","prevPos","posMax","oldPos","inline","skipToken","unescapeAll","code","adjustTab","initial","lastLineEmpty","offset","oldBMarks","oldBSCount","oldIndent","oldSCount","oldTShift","spaceAfterMarker","wasOutdented","oldLineMax","bsCount","tokenize","_hasOwnProperty","has","object","isValidEntityCode","c","fromCodePoint","surrogate1","surrogate2","UNESCAPE_MD_RE","UNESCAPE_ALL_RE","DIGITAL_ENTITY_TEST_RE","entities","HTML_ESCAPE_TEST_RE","HTML_ESCAPE_REPLACE_RE","HTML_REPLACEMENTS","replaceUnsafeChar","REGEXP_ESCAPE_RE","UNICODE_PUNCT_RE","lib","mdurl","ucmicro","TypeError","unescapeMd","escaped","entity","parseInt","replaceEntityPattern","escapeHtml","arrayReplaceAt","newElements","isWhiteSpace","isMdAsciiPunct","isPunctChar","toUpperCase","tmp","skipSpacesBack","skipCharsBack","content","children","utils","Renderer","ParserCore","ParserBlock","ParserInline","punycode","config","zero","commonmark","BAD_PROTO_RE","GOOD_DATA_RE","RECODE_HOSTNAME_FOR","parsed","toASCII","er","normalizeLinkText","toUnicode","MarkdownIt","presetName","core","renderer","linkify","configure","presets","components","rules","enableOnly","rules2","ruler2","enable","ignoreInvalid","chain","missed","disable","use","plugin","args","apply","State","process","tokens","render","parseInline","inlineMode","renderInline","Token","type","tag","nesting","attrs","info","meta","hidden","attrIndex","attrPush","attrData","attrSet","value","attrGet","attrJoin","StateInline","outTokens","tokens_meta","pending","pendingLevel","cache","delimiters","_prev_delimiters","pushPending","token_meta","pop","scanDelims","canSplitWord","lastChar","nextChar","count","can_open","can_close","isLastWhiteSpace","isLastPunctChar","isNextWhiteSpace","isNextPunctChar","left_flanking","right_flanking","root","nodeType","freeGlobal","global","window","maxInt","regexPunycode","regexNonASCII","regexSeparators","errors","floor","Math","stringFromCharCode","error","RangeError","array","fn","mapDomain","string","parts","ucs2decode","extra","output","counter","ucs2encode","digitToBasic","digit","flag","adapt","delta","numPoints","firstTime","baseMinusTMin","base","input","out","basic","oldi","w","t","baseMinusT","codePoint","inputLength","n","bias","splice","handledCPCount","basicLength","q","currentValue","handledCPCountPlusOne","qMinusT","skipChars","skipSpaces","html","xhtmlOut","breaks","langPrefix","typographer","quotes","highlight","maxNesting","curr","last","EMAIL_RE","AUTOLINK_RE","linkMatch","emailMatch","fullUrl","pmax","Ruler","__rules__","__cache__","__find__","__compile__","chains","rule","enabled","alt","altName","at","opt","before","beforeName","ruleName","after","afterName","chainName","matchStart","matchEnd","skipBulletListMarker","skipOrderedListMarker","contentStart","indent","indentAfterMarker","isOrdered","itemLines","listLines","listTokIdx","markerCharCode","markerValue","oldListIndent","oldTight","posAfterMarker","prevEmptyEnd","isTerminatingParagraph","tight","listIndent","Number","min","markTightParagraphs","NEWLINES_RE","NULL_RE","_rules","_rules2","postProcess","parseLinkLabel","open_tag","close_tag","HTML_TAG_RE","HTML_OPEN_CLOSE_TAG_RE","DIGITAL_RE","NAMED_RE","block_names","HTML_SEQUENCES","lineText","ESCAPED","StateCore","hasEmptyLines","skipEmptyLines","default_rules","code_inline","slf","renderAttrs","code_block","fence","highlighted","tmpAttrs","tmpToken","langName","image","renderInlineAsText","renderToken","hardbreak","softbreak","html_block","html_inline","nextToken","needLf","StateBlock","s","indent_found","ddIndent","from","begin","keepLastLF","lineIndent","first","queue","lineStart","processDelimiters","closerIdx","openerIdx","closer","opener","minOpenerIdx","newMinOpenerIdx","isOddMatch","lastJump","openersBottom","close","jump","open","getLine","escapedSplit","escapes","lastPos","backTicked","lastBackTick","substring","columns","columnCount","aligns","tableLines","tbodyLines","decodeCache","exclude","defaultChars","getDecodeCache","seq","b1","b2","b3","b4","chr","componentChars","startDelim","endDelim","loneMarkers","scanned","labelStart","ref","isLinkClose","currentToken","nodes","ln","htmlLinkLevel","urlText","links","blockTokens","tok","Core","QUOTE_TEST_RE","QUOTE_RE","replaceAt","process_inlines","thisLevel","item","canOpen","canClose","isSingle","stack","openQuote","closeQuote","OUTER","single","blkIdx","opts","src_Any","src_Cc","src_Z","src_P","src_ZCc","src_pseudo_letter","src_ip4","src_host","tpl_host_fuzzy","tpl_host_no_ip_fuzzy","tpl_host_fuzzy_strict","tpl_host_port_fuzzy_strict","tpl_host_port_no_ip_fuzzy_strict","RARE_RE","SCOPED_ABBR_TEST_RE","SCOPED_ABBR_RE","SCOPED_ABBR","r","p","tm","replaceFn","replace_scoped","inlineTokens","inside_autolink","replace_rare","isTerminatorChar","params","mem","haveEndMarker","lc","isLetter","encodeCache","keepEscaped","nextCode","getEncodeCache","encodeURIComponent","isStrong","parseReference"],"mappings":"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","file":"vendors~markdown~paragraph~stackedit-input.bundle.js","sourcesContent":["'use strict';\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Helpers\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\nfunction isString(obj) { return _class(obj) === '[object String]'; }\nfunction isObject(obj) { return _class(obj) === '[object Object]'; }\nfunction isRegExp(obj) { return _class(obj) === '[object RegExp]'; }\nfunction isFunction(obj) { return _class(obj) === '[object Function]'; }\n\n\nfunction escapeRE(str) { return str.replace(/[.?*+^$[\\]\\\\(){}|-]/g, '\\\\$&'); }\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar defaultOptions = {\n  fuzzyLink: true,\n  fuzzyEmail: true,\n  fuzzyIP: false\n};\n\n\nfunction isOptionsObj(obj) {\n  return Object.keys(obj || {}).reduce(function (acc, k) {\n    return acc || defaultOptions.hasOwnProperty(k);\n  }, false);\n}\n\n\nvar defaultSchemas = {\n  'http:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.http) {\n        // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.http =  new RegExp(\n          '^\\\\/\\\\/' + self.re.src_auth + self.re.src_host_port_strict + self.re.src_path, 'i'\n        );\n      }\n      if (self.re.http.test(tail)) {\n        return tail.match(self.re.http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'https:':  'http:',\n  'ftp:':    'http:',\n  '//':      {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.no_http) {\n      // compile lazily, because \"host\"-containing variables can change on tlds update.\n        self.re.no_http =  new RegExp(\n          '^' +\n          self.re.src_auth +\n          // Don't allow single-level domains, because of false positives like '//test'\n          // with code comments\n          '(?:localhost|(?:(?:' + self.re.src_domain + ')\\\\.)+' + self.re.src_domain_root + ')' +\n          self.re.src_port +\n          self.re.src_host_terminator +\n          self.re.src_path,\n\n          'i'\n        );\n      }\n\n      if (self.re.no_http.test(tail)) {\n        // should not be `://` & `///`, that protects from errors in protocol name\n        if (pos >= 3 && text[pos - 3] === ':') { return 0; }\n        if (pos >= 3 && text[pos - 3] === '/') { return 0; }\n        return tail.match(self.re.no_http)[0].length;\n      }\n      return 0;\n    }\n  },\n  'mailto:': {\n    validate: function (text, pos, self) {\n      var tail = text.slice(pos);\n\n      if (!self.re.mailto) {\n        self.re.mailto =  new RegExp(\n          '^' + self.re.src_email_name + '@' + self.re.src_host_strict, 'i'\n        );\n      }\n      if (self.re.mailto.test(tail)) {\n        return tail.match(self.re.mailto)[0].length;\n      }\n      return 0;\n    }\n  }\n};\n\n/*eslint-disable max-len*/\n\n// RE pattern for 2-character tlds (autogenerated by ./support/tlds_2char_gen.js)\nvar tlds_2ch_src_re = 'a[cdefgilmnoqrstuwxz]|b[abdefghijmnorstvwyz]|c[acdfghiklmnoruvwxyz]|d[ejkmoz]|e[cegrstu]|f[ijkmor]|g[abdefghilmnpqrstuwy]|h[kmnrtu]|i[delmnoqrst]|j[emop]|k[eghimnprwyz]|l[abcikrstuvy]|m[acdeghklmnopqrstuvwxyz]|n[acefgilopruz]|om|p[aefghklmnrstwy]|qa|r[eosuw]|s[abcdeghijklmnortuvxyz]|t[cdfghjklmnortvwz]|u[agksyz]|v[aceginu]|w[fs]|y[et]|z[amw]';\n\n// DON'T try to make PRs with changes. Extend TLDs with LinkifyIt.tlds() instead\nvar tlds_default = 'biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф'.split('|');\n\n/*eslint-enable max-len*/\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction resetScanCache(self) {\n  self.__index__ = -1;\n  self.__text_cache__   = '';\n}\n\nfunction createValidator(re) {\n  return function (text, pos) {\n    var tail = text.slice(pos);\n\n    if (re.test(tail)) {\n      return tail.match(re)[0].length;\n    }\n    return 0;\n  };\n}\n\nfunction createNormalizer() {\n  return function (match, self) {\n    self.normalize(match);\n  };\n}\n\n// Schemas compiler. Build regexps.\n//\nfunction compile(self) {\n\n  // Load & clone RE patterns.\n  var re = self.re = require('./lib/re')(self.__opts__);\n\n  // Define dynamic patterns\n  var tlds = self.__tlds__.slice();\n\n  self.onCompile();\n\n  if (!self.__tlds_replaced__) {\n    tlds.push(tlds_2ch_src_re);\n  }\n  tlds.push(re.src_xn);\n\n  re.src_tlds = tlds.join('|');\n\n  function untpl(tpl) { return tpl.replace('%TLDS%', re.src_tlds); }\n\n  re.email_fuzzy      = RegExp(untpl(re.tpl_email_fuzzy), 'i');\n  re.link_fuzzy       = RegExp(untpl(re.tpl_link_fuzzy), 'i');\n  re.link_no_ip_fuzzy = RegExp(untpl(re.tpl_link_no_ip_fuzzy), 'i');\n  re.host_fuzzy_test  = RegExp(untpl(re.tpl_host_fuzzy_test), 'i');\n\n  //\n  // Compile each schema\n  //\n\n  var aliases = [];\n\n  self.__compiled__ = {}; // Reset compiled data\n\n  function schemaError(name, val) {\n    throw new Error('(LinkifyIt) Invalid schema \"' + name + '\": ' + val);\n  }\n\n  Object.keys(self.__schemas__).forEach(function (name) {\n    var val = self.__schemas__[name];\n\n    // skip disabled methods\n    if (val === null) { return; }\n\n    var compiled = { validate: null, link: null };\n\n    self.__compiled__[name] = compiled;\n\n    if (isObject(val)) {\n      if (isRegExp(val.validate)) {\n        compiled.validate = createValidator(val.validate);\n      } else if (isFunction(val.validate)) {\n        compiled.validate = val.validate;\n      } else {\n        schemaError(name, val);\n      }\n\n      if (isFunction(val.normalize)) {\n        compiled.normalize = val.normalize;\n      } else if (!val.normalize) {\n        compiled.normalize = createNormalizer();\n      } else {\n        schemaError(name, val);\n      }\n\n      return;\n    }\n\n    if (isString(val)) {\n      aliases.push(name);\n      return;\n    }\n\n    schemaError(name, val);\n  });\n\n  //\n  // Compile postponed aliases\n  //\n\n  aliases.forEach(function (alias) {\n    if (!self.__compiled__[self.__schemas__[alias]]) {\n      // Silently fail on missed schemas to avoid errons on disable.\n      // schemaError(alias, self.__schemas__[alias]);\n      return;\n    }\n\n    self.__compiled__[alias].validate =\n      self.__compiled__[self.__schemas__[alias]].validate;\n    self.__compiled__[alias].normalize =\n      self.__compiled__[self.__schemas__[alias]].normalize;\n  });\n\n  //\n  // Fake record for guessed links\n  //\n  self.__compiled__[''] = { validate: null, normalize: createNormalizer() };\n\n  //\n  // Build schema condition\n  //\n  var slist = Object.keys(self.__compiled__)\n                      .filter(function (name) {\n                        // Filter disabled & fake schemas\n                        return name.length > 0 && self.__compiled__[name];\n                      })\n                      .map(escapeRE)\n                      .join('|');\n  // (?!_) cause 1.5x slowdown\n  self.re.schema_test   = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'i');\n  self.re.schema_search = RegExp('(^|(?!_)(?:[><\\uff5c]|' + re.src_ZPCc + '))(' + slist + ')', 'ig');\n\n  self.re.pretest = RegExp(\n    '(' + self.re.schema_test.source + ')|(' + self.re.host_fuzzy_test.source + ')|@',\n    'i'\n  );\n\n  //\n  // Cleanup\n  //\n\n  resetScanCache(self);\n}\n\n/**\n * class Match\n *\n * Match result. Single element of array, returned by [[LinkifyIt#match]]\n **/\nfunction Match(self, shift) {\n  var start = self.__index__,\n      end   = self.__last_index__,\n      text  = self.__text_cache__.slice(start, end);\n\n  /**\n   * Match#schema -> String\n   *\n   * Prefix (protocol) for matched string.\n   **/\n  this.schema    = self.__schema__.toLowerCase();\n  /**\n   * Match#index -> Number\n   *\n   * First position of matched string.\n   **/\n  this.index     = start + shift;\n  /**\n   * Match#lastIndex -> Number\n   *\n   * Next position after matched string.\n   **/\n  this.lastIndex = end + shift;\n  /**\n   * Match#raw -> String\n   *\n   * Matched string.\n   **/\n  this.raw       = text;\n  /**\n   * Match#text -> String\n   *\n   * Notmalized text of matched string.\n   **/\n  this.text      = text;\n  /**\n   * Match#url -> String\n   *\n   * Normalized url of matched string.\n   **/\n  this.url       = text;\n}\n\nfunction createMatch(self, shift) {\n  var match = new Match(self, shift);\n\n  self.__compiled__[match.schema].normalize(match, self);\n\n  return match;\n}\n\n\n/**\n * class LinkifyIt\n **/\n\n/**\n * new LinkifyIt(schemas, options)\n * - schemas (Object): Optional. Additional schemas to validate (prefix/validator)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Creates new linkifier instance with optional additional schemas.\n * Can be called without `new` keyword for convenience.\n *\n * By default understands:\n *\n * - `http(s)://...` , `ftp://...`, `mailto:...` & `//...` links\n * - \"fuzzy\" links and emails (example.com, foo@bar.com).\n *\n * `schemas` is an object, where each key/value describes protocol/rule:\n *\n * - __key__ - link prefix (usually, protocol name with `:` at the end, `skype:`\n *   for example). `linkify-it` makes shure that prefix is not preceeded with\n *   alphanumeric char and symbols. Only whitespaces and punctuation allowed.\n * - __value__ - rule to check tail after link prefix\n *   - _String_ - just alias to existing rule\n *   - _Object_\n *     - _validate_ - validator function (should return matched length on success),\n *       or `RegExp`.\n *     - _normalize_ - optional function to normalize text & url of matched result\n *       (for example, for @twitter mentions).\n *\n * `options`:\n *\n * - __fuzzyLink__ - recognige URL-s without `http(s):` prefix. Default `true`.\n * - __fuzzyIP__ - allow IPs in fuzzy links above. Can conflict with some texts\n *   like version numbers. Default `false`.\n * - __fuzzyEmail__ - recognize emails without `mailto:` prefix.\n *\n **/\nfunction LinkifyIt(schemas, options) {\n  if (!(this instanceof LinkifyIt)) {\n    return new LinkifyIt(schemas, options);\n  }\n\n  if (!options) {\n    if (isOptionsObj(schemas)) {\n      options = schemas;\n      schemas = {};\n    }\n  }\n\n  this.__opts__           = assign({}, defaultOptions, options);\n\n  // Cache last tested result. Used to skip repeating steps on next `match` call.\n  this.__index__          = -1;\n  this.__last_index__     = -1; // Next scan position\n  this.__schema__         = '';\n  this.__text_cache__     = '';\n\n  this.__schemas__        = assign({}, defaultSchemas, schemas);\n  this.__compiled__       = {};\n\n  this.__tlds__           = tlds_default;\n  this.__tlds_replaced__  = false;\n\n  this.re = {};\n\n  compile(this);\n}\n\n\n/** chainable\n * LinkifyIt#add(schema, definition)\n * - schema (String): rule name (fixed pattern prefix)\n * - definition (String|RegExp|Object): schema definition\n *\n * Add new rule definition. See constructor description for details.\n **/\nLinkifyIt.prototype.add = function add(schema, definition) {\n  this.__schemas__[schema] = definition;\n  compile(this);\n  return this;\n};\n\n\n/** chainable\n * LinkifyIt#set(options)\n * - options (Object): { fuzzyLink|fuzzyEmail|fuzzyIP: true|false }\n *\n * Set recognition options for links without schema.\n **/\nLinkifyIt.prototype.set = function set(options) {\n  this.__opts__ = assign(this.__opts__, options);\n  return this;\n};\n\n\n/**\n * LinkifyIt#test(text) -> Boolean\n *\n * Searches linkifiable pattern and returns `true` on success or `false` on fail.\n **/\nLinkifyIt.prototype.test = function test(text) {\n  // Reset scan cache\n  this.__text_cache__ = text;\n  this.__index__      = -1;\n\n  if (!text.length) { return false; }\n\n  var m, ml, me, len, shift, next, re, tld_pos, at_pos;\n\n  // try to scan for link with schema - that's the most simple rule\n  if (this.re.schema_test.test(text)) {\n    re = this.re.schema_search;\n    re.lastIndex = 0;\n    while ((m = re.exec(text)) !== null) {\n      len = this.testSchemaAt(text, m[2], re.lastIndex);\n      if (len) {\n        this.__schema__     = m[2];\n        this.__index__      = m.index + m[1].length;\n        this.__last_index__ = m.index + m[0].length + len;\n        break;\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyLink && this.__compiled__['http:']) {\n    // guess schemaless links\n    tld_pos = text.search(this.re.host_fuzzy_test);\n    if (tld_pos >= 0) {\n      // if tld is located after found link - no need to check fuzzy pattern\n      if (this.__index__ < 0 || tld_pos < this.__index__) {\n        if ((ml = text.match(this.__opts__.fuzzyIP ? this.re.link_fuzzy : this.re.link_no_ip_fuzzy)) !== null) {\n\n          shift = ml.index + ml[1].length;\n\n          if (this.__index__ < 0 || shift < this.__index__) {\n            this.__schema__     = '';\n            this.__index__      = shift;\n            this.__last_index__ = ml.index + ml[0].length;\n          }\n        }\n      }\n    }\n  }\n\n  if (this.__opts__.fuzzyEmail && this.__compiled__['mailto:']) {\n    // guess schemaless emails\n    at_pos = text.indexOf('@');\n    if (at_pos >= 0) {\n      // We can't skip this check, because this cases are possible:\n      // 192.168.1.1@gmail.com, my.in@example.com\n      if ((me = text.match(this.re.email_fuzzy)) !== null) {\n\n        shift = me.index + me[1].length;\n        next  = me.index + me[0].length;\n\n        if (this.__index__ < 0 || shift < this.__index__ ||\n            (shift === this.__index__ && next > this.__last_index__)) {\n          this.__schema__     = 'mailto:';\n          this.__index__      = shift;\n          this.__last_index__ = next;\n        }\n      }\n    }\n  }\n\n  return this.__index__ >= 0;\n};\n\n\n/**\n * LinkifyIt#pretest(text) -> Boolean\n *\n * Very quick check, that can give false positives. Returns true if link MAY BE\n * can exists. Can be used for speed optimization, when you need to check that\n * link NOT exists.\n **/\nLinkifyIt.prototype.pretest = function pretest(text) {\n  return this.re.pretest.test(text);\n};\n\n\n/**\n * LinkifyIt#testSchemaAt(text, name, position) -> Number\n * - text (String): text to scan\n * - name (String): rule (schema) name\n * - position (Number): text offset to check from\n *\n * Similar to [[LinkifyIt#test]] but checks only specific protocol tail exactly\n * at given position. Returns length of found pattern (0 on fail).\n **/\nLinkifyIt.prototype.testSchemaAt = function testSchemaAt(text, schema, pos) {\n  // If not supported schema check requested - terminate\n  if (!this.__compiled__[schema.toLowerCase()]) {\n    return 0;\n  }\n  return this.__compiled__[schema.toLowerCase()].validate(text, pos, this);\n};\n\n\n/**\n * LinkifyIt#match(text) -> Array|null\n *\n * Returns array of found link descriptions or `null` on fail. We strongly\n * recommend to use [[LinkifyIt#test]] first, for best speed.\n *\n * ##### Result match description\n *\n * - __schema__ - link schema, can be empty for fuzzy links, or `//` for\n *   protocol-neutral  links.\n * - __index__ - offset of matched text\n * - __lastIndex__ - index of next char after mathch end\n * - __raw__ - matched text\n * - __text__ - normalized text\n * - __url__ - link, generated from matched text\n **/\nLinkifyIt.prototype.match = function match(text) {\n  var shift = 0, result = [];\n\n  // Try to take previous element from cache, if .test() called before\n  if (this.__index__ >= 0 && this.__text_cache__ === text) {\n    result.push(createMatch(this, shift));\n    shift = this.__last_index__;\n  }\n\n  // Cut head if cache was used\n  var tail = shift ? text.slice(shift) : text;\n\n  // Scan string until end reached\n  while (this.test(tail)) {\n    result.push(createMatch(this, shift));\n\n    tail = tail.slice(this.__last_index__);\n    shift += this.__last_index__;\n  }\n\n  if (result.length) {\n    return result;\n  }\n\n  return null;\n};\n\n\n/** chainable\n * LinkifyIt#tlds(list [, keepOld]) -> this\n * - list (Array): list of tlds\n * - keepOld (Boolean): merge with current list if `true` (`false` by default)\n *\n * Load (or merge) new tlds list. Those are user for fuzzy links (without prefix)\n * to avoid false positives. By default this algorythm used:\n *\n * - hostname with any 2-letter root zones are ok.\n * - biz|com|edu|gov|net|org|pro|web|xxx|aero|asia|coop|info|museum|name|shop|рф\n *   are ok.\n * - encoded (`xn--...`) root zones are ok.\n *\n * If list is replaced, then exact match for 2-chars root zones will be checked.\n **/\nLinkifyIt.prototype.tlds = function tlds(list, keepOld) {\n  list = Array.isArray(list) ? list : [ list ];\n\n  if (!keepOld) {\n    this.__tlds__ = list.slice();\n    this.__tlds_replaced__ = true;\n    compile(this);\n    return this;\n  }\n\n  this.__tlds__ = this.__tlds__.concat(list)\n                                  .sort()\n                                  .filter(function (el, idx, arr) {\n                                    return el !== arr[idx - 1];\n                                  })\n                                  .reverse();\n\n  compile(this);\n  return this;\n};\n\n/**\n * LinkifyIt#normalize(match)\n *\n * Default normalizer (if schema does not define it's own).\n **/\nLinkifyIt.prototype.normalize = function normalize(match) {\n\n  // Do minimal possible changes by default. Need to collect feedback prior\n  // to move forward https://github.com/markdown-it/linkify-it/issues/1\n\n  if (!match.schema) { match.url = 'http://' + match.url; }\n\n  if (match.schema === 'mailto:' && !/^mailto:/i.test(match.url)) {\n    match.url = 'mailto:' + match.url;\n  }\n};\n\n\n/**\n * LinkifyIt#onCompile()\n *\n * Override to modify basic RegExp-s.\n **/\nLinkifyIt.prototype.onCompile = function onCompile() {\n};\n\n\nmodule.exports = LinkifyIt;\n","// Horizontal rule\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function hr(state, startLine, endLine, silent) {\n  var marker, cnt, ch, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  marker = state.src.charCodeAt(pos++);\n\n  // Check hr marker\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x5F/* _ */) {\n    return false;\n  }\n\n  // markers can be mixed with spaces, but there should be at least 3 of them\n\n  cnt = 1;\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos++);\n    if (ch !== marker && !isSpace(ch)) { return false; }\n    if (ch === marker) { cnt++; }\n  }\n\n  if (cnt < 3) { return false; }\n\n  if (silent) { return true; }\n\n  state.line = startLine + 1;\n\n  token        = state.push('hr', 'hr', 0);\n  token.map    = [ startLine, state.line ];\n  token.markup = Array(cnt + 1).join(String.fromCharCode(marker));\n\n  return true;\n};\n","'use strict';\n\n\nmodule.exports = require('./lib/');\n","'use strict';\n\nexports.Any = require('./properties/Any/regex');\nexports.Cc  = require('./categories/Cc/regex');\nexports.Cf  = require('./categories/Cf/regex');\nexports.P   = require('./categories/P/regex');\nexports.Z   = require('./categories/Z/regex');\n","'use strict';\n\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function reference(state, startLine, _endLine, silent) {\n  var ch,\n      destEndPos,\n      destEndLineNo,\n      endLine,\n      href,\n      i,\n      l,\n      label,\n      labelEnd,\n      oldParentType,\n      res,\n      start,\n      str,\n      terminate,\n      terminatorRules,\n      title,\n      lines = 0,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine],\n      nextLine = startLine + 1;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x5B/* [ */) { return false; }\n\n  // Simple check to quickly interrupt scan on [link](url) at the start of line.\n  // Can be useful on practice: https://github.com/markdown-it/markdown-it/issues/54\n  while (++pos < max) {\n    if (state.src.charCodeAt(pos) === 0x5D /* ] */ &&\n        state.src.charCodeAt(pos - 1) !== 0x5C/* \\ */) {\n      if (pos + 1 === max) { return false; }\n      if (state.src.charCodeAt(pos + 1) !== 0x3A/* : */) { return false; }\n      break;\n    }\n  }\n\n  endLine = state.lineMax;\n\n  // jump line-by-line until empty one or EOF\n  terminatorRules = state.md.block.ruler.getRules('reference');\n\n  oldParentType = state.parentType;\n  state.parentType = 'reference';\n\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  str = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n  max = str.length;\n\n  for (pos = 1; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x5B /* [ */) {\n      return false;\n    } else if (ch === 0x5D /* ] */) {\n      labelEnd = pos;\n      break;\n    } else if (ch === 0x0A /* \\n */) {\n      lines++;\n    } else if (ch === 0x5C /* \\ */) {\n      pos++;\n      if (pos < max && str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n  }\n\n  if (labelEnd < 0 || str.charCodeAt(labelEnd + 1) !== 0x3A/* : */) { return false; }\n\n  // [label]:   destination   'title'\n  //         ^^^ skip optional whitespace here\n  for (pos = labelEnd + 2; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //            ^^^^^^^^^^^ parse this\n  res = state.md.helpers.parseLinkDestination(str, pos, max);\n  if (!res.ok) { return false; }\n\n  href = state.md.normalizeLink(res.str);\n  if (!state.md.validateLink(href)) { return false; }\n\n  pos = res.pos;\n  lines += res.lines;\n\n  // save cursor state, we could require to rollback later\n  destEndPos = pos;\n  destEndLineNo = lines;\n\n  // [label]:   destination   'title'\n  //                       ^^^ skipping those spaces\n  start = pos;\n  for (; pos < max; pos++) {\n    ch = str.charCodeAt(pos);\n    if (ch === 0x0A) {\n      lines++;\n    } else if (isSpace(ch)) {\n      /*eslint no-empty:0*/\n    } else {\n      break;\n    }\n  }\n\n  // [label]:   destination   'title'\n  //                          ^^^^^^^ parse this\n  res = state.md.helpers.parseLinkTitle(str, pos, max);\n  if (pos < max && start !== pos && res.ok) {\n    title = res.str;\n    pos = res.pos;\n    lines += res.lines;\n  } else {\n    title = '';\n    pos = destEndPos;\n    lines = destEndLineNo;\n  }\n\n  // skip trailing spaces until the rest of the line\n  while (pos < max) {\n    ch = str.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n    pos++;\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    if (title) {\n      // garbage at the end of the line after title,\n      // but it could still be a valid reference if we roll back\n      title = '';\n      pos = destEndPos;\n      lines = destEndLineNo;\n      while (pos < max) {\n        ch = str.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n    }\n  }\n\n  if (pos < max && str.charCodeAt(pos) !== 0x0A) {\n    // garbage at the end of the line\n    return false;\n  }\n\n  label = normalizeReference(str.slice(1, labelEnd));\n  if (!label) {\n    // CommonMark 0.20 disallows empty labels\n    return false;\n  }\n\n  // Reference can not terminate anything. This check is for safety only.\n  /*istanbul ignore if*/\n  if (silent) { return true; }\n\n  if (typeof state.env.references === 'undefined') {\n    state.env.references = {};\n  }\n  if (typeof state.env.references[label] === 'undefined') {\n    state.env.references[label] = { title: title, href: href };\n  }\n\n  state.parentType = oldParentType;\n\n  state.line = startLine + lines + 1;\n  return true;\n};\n","'use strict';\n\n\nmodule.exports.encode = require('./encode');\nmodule.exports.decode = require('./decode');\nmodule.exports.format = require('./format');\nmodule.exports.parse  = require('./parse');\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n//\n// Changes from joyent/node:\n//\n// 1. No leading slash in paths,\n//    e.g. in `url.parse('http://foo?bar')` pathname is ``, not `/`\n//\n// 2. Backslashes are not replaced with slashes,\n//    so `http:\\\\example.org\\` is treated like a relative path\n//\n// 3. Trailing colon is treated like a part of the path,\n//    i.e. in `http://example.org:foo` pathname is `:foo`\n//\n// 4. Nothing is URL-encoded in the resulting object,\n//    (in joyent/node some chars in auth and paths are encoded)\n//\n// 5. `url.parse()` does not have `parseQueryString` argument\n//\n// 6. Removed extraneous result properties: `host`, `path`, `query`, etc.,\n//    which can be constructed using other parts of the url.\n//\n\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.pathname = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = [ '<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t' ],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = [ '{', '}', '|', '\\\\', '^', '`' ].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = [ '\\'' ].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = [ '%', '/', '?', ';', '#' ].concat(autoEscape),\n    hostEndingChars = [ '/', '?', '#' ],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    /* eslint-disable no-script-url */\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    };\n    /* eslint-enable no-script-url */\n\nfunction urlParse(url, slashesDenoteHost) {\n  if (url && url instanceof Url) { return url; }\n\n  var u = new Url();\n  u.parse(url, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, slashesDenoteHost) {\n  var i, l, lowerProto, hec, slashes,\n      rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    lowerProto = proto.toLowerCase();\n    this.protocol = proto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (i = 0; i < hostEndingChars.length; i++) {\n      hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = auth;\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (i = 0; i < nonHostChars.length; i++) {\n      hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd)) {\n        hostEnd = hec;\n      }\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1) {\n      hostEnd = rest.length;\n    }\n\n    if (rest[hostEnd - 1] === ':') { hostEnd--; }\n    var host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost(host);\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) { continue; }\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    }\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n    }\n  }\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    rest = rest.slice(0, qm);\n  }\n  if (rest) { this.pathname = rest; }\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '';\n  }\n\n  return this;\n};\n\nUrl.prototype.parseHost = function(host) {\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) { this.hostname = host; }\n};\n\nmodule.exports = urlParse;\n","// Parse link label\n//\n// this function assumes that first character (\"[\") already matches;\n// returns the end of the label\n//\n'use strict';\n\nmodule.exports = function parseLinkLabel(state, start, disableNested) {\n  var level, found, marker, prevPos,\n      labelEnd = -1,\n      max = state.posMax,\n      oldPos = state.pos;\n\n  state.pos = start + 1;\n  level = 1;\n\n  while (state.pos < max) {\n    marker = state.src.charCodeAt(state.pos);\n    if (marker === 0x5D /* ] */) {\n      level--;\n      if (level === 0) {\n        found = true;\n        break;\n      }\n    }\n\n    prevPos = state.pos;\n    state.md.inline.skipToken(state);\n    if (marker === 0x5B /* [ */) {\n      if (prevPos === state.pos - 1) {\n        // increase level if we find text `[`, which is not a part of any token\n        level++;\n      } else if (disableNested) {\n        state.pos = oldPos;\n        return -1;\n      }\n    }\n  }\n\n  if (found) {\n    labelEnd = state.pos;\n  }\n\n  // restore old state\n  state.pos = oldPos;\n\n  return labelEnd;\n};\n","// List of valid html blocks names, accorting to commonmark spec\n// http://jgm.github.io/CommonMark/spec.html#html-blocks\n\n'use strict';\n\n\nmodule.exports = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'meta',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n];\n","// Parse link destination\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkDestination(str, pos, max) {\n  var code, level,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (str.charCodeAt(pos) === 0x3C /* < */) {\n    pos++;\n    while (pos < max) {\n      code = str.charCodeAt(pos);\n      if (code === 0x0A /* \\n */) { return result; }\n      if (code === 0x3E /* > */) {\n        result.pos = pos + 1;\n        result.str = unescapeAll(str.slice(start + 1, pos));\n        result.ok = true;\n        return result;\n      }\n      if (code === 0x5C /* \\ */ && pos + 1 < max) {\n        pos += 2;\n        continue;\n      }\n\n      pos++;\n    }\n\n    // no closing '>'\n    return result;\n  }\n\n  // this should be ... } else { ... branch\n\n  level = 0;\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n\n    if (code === 0x20) { break; }\n\n    // ascii control characters\n    if (code < 0x20 || code === 0x7F) { break; }\n\n    if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos += 2;\n      continue;\n    }\n\n    if (code === 0x28 /* ( */) {\n      level++;\n    }\n\n    if (code === 0x29 /* ) */) {\n      if (level === 0) { break; }\n      level--;\n    }\n\n    pos++;\n  }\n\n  if (start === pos) { return result; }\n  if (level !== 0) { return result; }\n\n  result.str = unescapeAll(str.slice(start, pos));\n  result.lines = lines;\n  result.pos = pos;\n  result.ok = true;\n  return result;\n};\n","// Block quotes\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function blockquote(state, startLine, endLine, silent) {\n  var adjustTab,\n      ch,\n      i,\n      initial,\n      l,\n      lastLineEmpty,\n      lines,\n      nextLine,\n      offset,\n      oldBMarks,\n      oldBSCount,\n      oldIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      spaceAfterMarker,\n      terminate,\n      terminatorRules,\n      token,\n      wasOutdented,\n      oldLineMax = state.lineMax,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // check the block quote marker\n  if (state.src.charCodeAt(pos++) !== 0x3E/* > */) { return false; }\n\n  // we know that it's going to be a valid blockquote,\n  // so no point trying to find the end of it in silent mode\n  if (silent) { return true; }\n\n  // skip spaces after \">\" and re-calculate offset\n  initial = offset = state.sCount[startLine] + pos - (state.bMarks[startLine] + state.tShift[startLine]);\n\n  // skip one optional space after '>'\n  if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n    // ' >   test '\n    //     ^ -- position start of line here:\n    pos++;\n    initial++;\n    offset++;\n    adjustTab = false;\n    spaceAfterMarker = true;\n  } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n    spaceAfterMarker = true;\n\n    if ((state.bsCount[startLine] + offset) % 4 === 3) {\n      // '  >\\t  test '\n      //       ^ -- position start of line here (tab has width===1)\n      pos++;\n      initial++;\n      offset++;\n      adjustTab = false;\n    } else {\n      // ' >\\t  test '\n      //    ^ -- position start of line here + shift bsCount slightly\n      //         to make extra space appear\n      adjustTab = true;\n    }\n  } else {\n    spaceAfterMarker = false;\n  }\n\n  oldBMarks = [ state.bMarks[startLine] ];\n  state.bMarks[startLine] = pos;\n\n  while (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (isSpace(ch)) {\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[startLine] + (adjustTab ? 1 : 0)) % 4;\n      } else {\n        offset++;\n      }\n    } else {\n      break;\n    }\n\n    pos++;\n  }\n\n  oldBSCount = [ state.bsCount[startLine] ];\n  state.bsCount[startLine] = state.sCount[startLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n  lastLineEmpty = pos >= max;\n\n  oldSCount = [ state.sCount[startLine] ];\n  state.sCount[startLine] = offset - initial;\n\n  oldTShift = [ state.tShift[startLine] ];\n  state.tShift[startLine] = pos - state.bMarks[startLine];\n\n  terminatorRules = state.md.block.ruler.getRules('blockquote');\n\n  oldParentType = state.parentType;\n  state.parentType = 'blockquote';\n  wasOutdented = false;\n\n  // Search the end of the block\n  //\n  // Block ends with either:\n  //  1. an empty line outside:\n  //     ```\n  //     > test\n  //\n  //     ```\n  //  2. an empty line inside:\n  //     ```\n  //     >\n  //     test\n  //     ```\n  //  3. another tag:\n  //     ```\n  //     > test\n  //      - - -\n  //     ```\n  for (nextLine = startLine + 1; nextLine < endLine; nextLine++) {\n    // check if it's outdented, i.e. it's inside list item and indented\n    // less than said list item:\n    //\n    // ```\n    // 1. anything\n    //    > current blockquote\n    // 2. checking this line\n    // ```\n    if (state.sCount[nextLine] < state.blkIndent) wasOutdented = true;\n\n    pos = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos >= max) {\n      // Case 1: line is not inside the blockquote, and this line is empty.\n      break;\n    }\n\n    if (state.src.charCodeAt(pos++) === 0x3E/* > */ && !wasOutdented) {\n      // This line is inside the blockquote.\n\n      // skip spaces after \">\" and re-calculate offset\n      initial = offset = state.sCount[nextLine] + pos - (state.bMarks[nextLine] + state.tShift[nextLine]);\n\n      // skip one optional space after '>'\n      if (state.src.charCodeAt(pos) === 0x20 /* space */) {\n        // ' >   test '\n        //     ^ -- position start of line here:\n        pos++;\n        initial++;\n        offset++;\n        adjustTab = false;\n        spaceAfterMarker = true;\n      } else if (state.src.charCodeAt(pos) === 0x09 /* tab */) {\n        spaceAfterMarker = true;\n\n        if ((state.bsCount[nextLine] + offset) % 4 === 3) {\n          // '  >\\t  test '\n          //       ^ -- position start of line here (tab has width===1)\n          pos++;\n          initial++;\n          offset++;\n          adjustTab = false;\n        } else {\n          // ' >\\t  test '\n          //    ^ -- position start of line here + shift bsCount slightly\n          //         to make extra space appear\n          adjustTab = true;\n        }\n      } else {\n        spaceAfterMarker = false;\n      }\n\n      oldBMarks.push(state.bMarks[nextLine]);\n      state.bMarks[nextLine] = pos;\n\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n\n        if (isSpace(ch)) {\n          if (ch === 0x09) {\n            offset += 4 - (offset + state.bsCount[nextLine] + (adjustTab ? 1 : 0)) % 4;\n          } else {\n            offset++;\n          }\n        } else {\n          break;\n        }\n\n        pos++;\n      }\n\n      lastLineEmpty = pos >= max;\n\n      oldBSCount.push(state.bsCount[nextLine]);\n      state.bsCount[nextLine] = state.sCount[nextLine] + 1 + (spaceAfterMarker ? 1 : 0);\n\n      oldSCount.push(state.sCount[nextLine]);\n      state.sCount[nextLine] = offset - initial;\n\n      oldTShift.push(state.tShift[nextLine]);\n      state.tShift[nextLine] = pos - state.bMarks[nextLine];\n      continue;\n    }\n\n    // Case 2: line is not inside the blockquote, and the last line was empty.\n    if (lastLineEmpty) { break; }\n\n    // Case 3: another tag found.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n\n    if (terminate) {\n      // Quirk to enforce \"hard termination mode\" for paragraphs;\n      // normally if you call `tokenize(state, startLine, nextLine)`,\n      // paragraphs will look below nextLine for paragraph continuation,\n      // but if blockquote is terminated by another tag, they shouldn't\n      state.lineMax = nextLine;\n\n      if (state.blkIndent !== 0) {\n        // state.blkIndent was non-zero, we now set it to zero,\n        // so we need to re-calculate all offsets to appear as\n        // if indent wasn't changed\n        oldBMarks.push(state.bMarks[nextLine]);\n        oldBSCount.push(state.bsCount[nextLine]);\n        oldTShift.push(state.tShift[nextLine]);\n        oldSCount.push(state.sCount[nextLine]);\n        state.sCount[nextLine] -= state.blkIndent;\n      }\n\n      break;\n    }\n\n    oldBMarks.push(state.bMarks[nextLine]);\n    oldBSCount.push(state.bsCount[nextLine]);\n    oldTShift.push(state.tShift[nextLine]);\n    oldSCount.push(state.sCount[nextLine]);\n\n    // A negative indentation means that this is a paragraph continuation\n    //\n    state.sCount[nextLine] = -1;\n  }\n\n  oldIndent = state.blkIndent;\n  state.blkIndent = 0;\n\n  token        = state.push('blockquote_open', 'blockquote', 1);\n  token.markup = '>';\n  token.map    = lines = [ startLine, 0 ];\n\n  state.md.block.tokenize(state, startLine, nextLine);\n\n  token        = state.push('blockquote_close', 'blockquote', -1);\n  token.markup = '>';\n\n  state.lineMax = oldLineMax;\n  state.parentType = oldParentType;\n  lines[1] = state.line;\n\n  // Restore original tShift; this might not be necessary since the parser\n  // has already been here, but just to make sure we can do that.\n  for (i = 0; i < oldTShift.length; i++) {\n    state.bMarks[i + startLine] = oldBMarks[i];\n    state.tShift[i + startLine] = oldTShift[i];\n    state.sCount[i + startLine] = oldSCount[i];\n    state.bsCount[i + startLine] = oldBSCount[i];\n  }\n  state.blkIndent = oldIndent;\n\n  return true;\n};\n","// Utilities\n//\n'use strict';\n\n\nfunction _class(obj) { return Object.prototype.toString.call(obj); }\n\nfunction isString(obj) { return _class(obj) === '[object String]'; }\n\nvar _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction has(object, key) {\n  return _hasOwnProperty.call(object, key);\n}\n\n// Merge objects\n//\nfunction assign(obj /*from1, from2, from3, ...*/) {\n  var sources = Array.prototype.slice.call(arguments, 1);\n\n  sources.forEach(function (source) {\n    if (!source) { return; }\n\n    if (typeof source !== 'object') {\n      throw new TypeError(source + 'must be object');\n    }\n\n    Object.keys(source).forEach(function (key) {\n      obj[key] = source[key];\n    });\n  });\n\n  return obj;\n}\n\n// Remove element from array and put another array at those position.\n// Useful for some operations with tokens\nfunction arrayReplaceAt(src, pos, newElements) {\n  return [].concat(src.slice(0, pos), newElements, src.slice(pos + 1));\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isValidEntityCode(c) {\n  /*eslint no-bitwise:0*/\n  // broken sequence\n  if (c >= 0xD800 && c <= 0xDFFF) { return false; }\n  // never used\n  if (c >= 0xFDD0 && c <= 0xFDEF) { return false; }\n  if ((c & 0xFFFF) === 0xFFFF || (c & 0xFFFF) === 0xFFFE) { return false; }\n  // control codes\n  if (c >= 0x00 && c <= 0x08) { return false; }\n  if (c === 0x0B) { return false; }\n  if (c >= 0x0E && c <= 0x1F) { return false; }\n  if (c >= 0x7F && c <= 0x9F) { return false; }\n  // out of range\n  if (c > 0x10FFFF) { return false; }\n  return true;\n}\n\nfunction fromCodePoint(c) {\n  /*eslint no-bitwise:0*/\n  if (c > 0xffff) {\n    c -= 0x10000;\n    var surrogate1 = 0xd800 + (c >> 10),\n        surrogate2 = 0xdc00 + (c & 0x3ff);\n\n    return String.fromCharCode(surrogate1, surrogate2);\n  }\n  return String.fromCharCode(c);\n}\n\n\nvar UNESCAPE_MD_RE  = /\\\\([!\"#$%&'()*+,\\-.\\/:;<=>?@[\\\\\\]^_`{|}~])/g;\nvar ENTITY_RE       = /&([a-z#][a-z0-9]{1,31});/gi;\nvar UNESCAPE_ALL_RE = new RegExp(UNESCAPE_MD_RE.source + '|' + ENTITY_RE.source, 'gi');\n\nvar DIGITAL_ENTITY_TEST_RE = /^#((?:x[a-f0-9]{1,8}|[0-9]{1,8}))/i;\n\nvar entities = require('./entities');\n\nfunction replaceEntityPattern(match, name) {\n  var code = 0;\n\n  if (has(entities, name)) {\n    return entities[name];\n  }\n\n  if (name.charCodeAt(0) === 0x23/* # */ && DIGITAL_ENTITY_TEST_RE.test(name)) {\n    code = name[1].toLowerCase() === 'x' ?\n      parseInt(name.slice(2), 16) : parseInt(name.slice(1), 10);\n\n    if (isValidEntityCode(code)) {\n      return fromCodePoint(code);\n    }\n  }\n\n  return match;\n}\n\n/*function replaceEntities(str) {\n  if (str.indexOf('&') < 0) { return str; }\n\n  return str.replace(ENTITY_RE, replaceEntityPattern);\n}*/\n\nfunction unescapeMd(str) {\n  if (str.indexOf('\\\\') < 0) { return str; }\n  return str.replace(UNESCAPE_MD_RE, '$1');\n}\n\nfunction unescapeAll(str) {\n  if (str.indexOf('\\\\') < 0 && str.indexOf('&') < 0) { return str; }\n\n  return str.replace(UNESCAPE_ALL_RE, function (match, escaped, entity) {\n    if (escaped) { return escaped; }\n    return replaceEntityPattern(match, entity);\n  });\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar HTML_ESCAPE_TEST_RE = /[&<>\"]/;\nvar HTML_ESCAPE_REPLACE_RE = /[&<>\"]/g;\nvar HTML_REPLACEMENTS = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;'\n};\n\nfunction replaceUnsafeChar(ch) {\n  return HTML_REPLACEMENTS[ch];\n}\n\nfunction escapeHtml(str) {\n  if (HTML_ESCAPE_TEST_RE.test(str)) {\n    return str.replace(HTML_ESCAPE_REPLACE_RE, replaceUnsafeChar);\n  }\n  return str;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar REGEXP_ESCAPE_RE = /[.?*+^$[\\]\\\\(){}|-]/g;\n\nfunction escapeRE(str) {\n  return str.replace(REGEXP_ESCAPE_RE, '\\\\$&');\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\nfunction isSpace(code) {\n  switch (code) {\n    case 0x09:\n    case 0x20:\n      return true;\n  }\n  return false;\n}\n\n// Zs (unicode class) || [\\t\\f\\v\\r\\n]\nfunction isWhiteSpace(code) {\n  if (code >= 0x2000 && code <= 0x200A) { return true; }\n  switch (code) {\n    case 0x09: // \\t\n    case 0x0A: // \\n\n    case 0x0B: // \\v\n    case 0x0C: // \\f\n    case 0x0D: // \\r\n    case 0x20:\n    case 0xA0:\n    case 0x1680:\n    case 0x202F:\n    case 0x205F:\n    case 0x3000:\n      return true;\n  }\n  return false;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n/*eslint-disable max-len*/\nvar UNICODE_PUNCT_RE = require('uc.micro/categories/P/regex');\n\n// Currently without astral characters support.\nfunction isPunctChar(ch) {\n  return UNICODE_PUNCT_RE.test(ch);\n}\n\n\n// Markdown ASCII punctuation characters.\n//\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\n//\n// Don't confuse with unicode punctuation !!! It lacks some chars in ascii range.\n//\nfunction isMdAsciiPunct(ch) {\n  switch (ch) {\n    case 0x21/* ! */:\n    case 0x22/* \" */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x27/* ' */:\n    case 0x28/* ( */:\n    case 0x29/* ) */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2C/* , */:\n    case 0x2D/* - */:\n    case 0x2E/* . */:\n    case 0x2F/* / */:\n    case 0x3A/* : */:\n    case 0x3B/* ; */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x3F/* ? */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7C/* | */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\n// Hepler to unify [reference labels].\n//\nfunction normalizeReference(str) {\n  // Trim and collapse whitespace\n  //\n  str = str.trim().replace(/\\s+/g, ' ');\n\n  // In node v10 'ẞ'.toLowerCase() === 'Ṿ', which is presumed to be a bug\n  // fixed in v12 (couldn't find any details).\n  //\n  // So treat this one as a special case\n  // (remove this when node v10 is no longer supported).\n  //\n  if ('ẞ'.toLowerCase() === 'Ṿ') {\n    str = str.replace(/ẞ/g, 'ß');\n  }\n\n  // .toLowerCase().toUpperCase() should get rid of all differences\n  // between letter variants.\n  //\n  // Simple .toLowerCase() doesn't normalize 125 code points correctly,\n  // and .toUpperCase doesn't normalize 6 of them (list of exceptions:\n  // İ, ϴ, ẞ, Ω, K, Å - those are already uppercased, but have differently\n  // uppercased versions).\n  //\n  // Here's an example showing how it happens. Lets take greek letter omega:\n  // uppercase U+0398 (Θ), U+03f4 (ϴ) and lowercase U+03b8 (θ), U+03d1 (ϑ)\n  //\n  // Unicode entries:\n  // 0398;GREEK CAPITAL LETTER THETA;Lu;0;L;;;;;N;;;;03B8;\n  // 03B8;GREEK SMALL LETTER THETA;Ll;0;L;;;;;N;;;0398;;0398\n  // 03D1;GREEK THETA SYMBOL;Ll;0;L;<compat> 03B8;;;;N;GREEK SMALL LETTER SCRIPT THETA;;0398;;0398\n  // 03F4;GREEK CAPITAL THETA SYMBOL;Lu;0;L;<compat> 0398;;;;N;;;;03B8;\n  //\n  // Case-insensitive comparison should treat all of them as equivalent.\n  //\n  // But .toLowerCase() doesn't change ϑ (it's already lowercase),\n  // and .toUpperCase() doesn't change ϴ (already uppercase).\n  //\n  // Applying first lower then upper case normalizes any character:\n  // '\\u0398\\u03f4\\u03b8\\u03d1'.toLowerCase().toUpperCase() === '\\u0398\\u0398\\u0398\\u0398'\n  //\n  // Note: this is equivalent to unicode case folding; unicode normalization\n  // is a different step that is not required here.\n  //\n  // Final result should be uppercased, because it's later stored in an object\n  // (this avoid a conflict with Object.prototype members,\n  // most notably, `__proto__`)\n  //\n  return str.toLowerCase().toUpperCase();\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n// Re-export libraries commonly used in both markdown-it and its plugins,\n// so plugins won't have to depend on them explicitly, which reduces their\n// bundled size (e.g. a browser build).\n//\nexports.lib                 = {};\nexports.lib.mdurl           = require('mdurl');\nexports.lib.ucmicro         = require('uc.micro');\n\nexports.assign              = assign;\nexports.isString            = isString;\nexports.has                 = has;\nexports.unescapeMd          = unescapeMd;\nexports.unescapeAll         = unescapeAll;\nexports.isValidEntityCode   = isValidEntityCode;\nexports.fromCodePoint       = fromCodePoint;\n// exports.replaceEntities     = replaceEntities;\nexports.escapeHtml          = escapeHtml;\nexports.arrayReplaceAt      = arrayReplaceAt;\nexports.isSpace             = isSpace;\nexports.isWhiteSpace        = isWhiteSpace;\nexports.isMdAsciiPunct      = isMdAsciiPunct;\nexports.isPunctChar         = isPunctChar;\nexports.escapeRE            = escapeRE;\nexports.normalizeReference  = normalizeReference;\n","// heading (#, ##, ...)\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function heading(state, startLine, endLine, silent) {\n  var ch, level, tmp, token,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  ch  = state.src.charCodeAt(pos);\n\n  if (ch !== 0x23/* # */ || pos >= max) { return false; }\n\n  // count heading level\n  level = 1;\n  ch = state.src.charCodeAt(++pos);\n  while (ch === 0x23/* # */ && pos < max && level <= 6) {\n    level++;\n    ch = state.src.charCodeAt(++pos);\n  }\n\n  if (level > 6 || (pos < max && !isSpace(ch))) { return false; }\n\n  if (silent) { return true; }\n\n  // Let's cut tails like '    ###  ' from the end of string\n\n  max = state.skipSpacesBack(max, pos);\n  tmp = state.skipCharsBack(max, 0x23, pos); // #\n  if (tmp > pos && isSpace(state.src.charCodeAt(tmp - 1))) {\n    max = tmp;\n  }\n\n  state.line = startLine + 1;\n\n  token        = state.push('heading_open', 'h' + String(level), 1);\n  token.markup = '########'.slice(0, level);\n  token.map    = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = state.src.slice(pos, max).trim();\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token        = state.push('heading_close', 'h' + String(level), -1);\n  token.markup = '########'.slice(0, level);\n\n  return true;\n};\n","// Main parser class\n\n'use strict';\n\n\nvar utils        = require('./common/utils');\nvar helpers      = require('./helpers');\nvar Renderer     = require('./renderer');\nvar ParserCore   = require('./parser_core');\nvar ParserBlock  = require('./parser_block');\nvar ParserInline = require('./parser_inline');\nvar LinkifyIt    = require('linkify-it');\nvar mdurl        = require('mdurl');\nvar punycode     = require('punycode');\n\n\nvar config = {\n  'default': require('./presets/default'),\n  zero: require('./presets/zero'),\n  commonmark: require('./presets/commonmark')\n};\n\n////////////////////////////////////////////////////////////////////////////////\n//\n// This validator can prohibit more than really needed to prevent XSS. It's a\n// tradeoff to keep code simple and to be secure by default.\n//\n// If you need different setup - override validator method as you wish. Or\n// replace it with dummy function and use external sanitizer.\n//\n\nvar BAD_PROTO_RE = /^(vbscript|javascript|file|data):/;\nvar GOOD_DATA_RE = /^data:image\\/(gif|png|jpeg|webp);/;\n\nfunction validateLink(url) {\n  // url should be normalized at this point, and existing entities are decoded\n  var str = url.trim().toLowerCase();\n\n  return BAD_PROTO_RE.test(str) ? (GOOD_DATA_RE.test(str) ? true : false) : true;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n\n\nvar RECODE_HOSTNAME_FOR = [ 'http:', 'https:', 'mailto:' ];\n\nfunction normalizeLink(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toASCII(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.encode(mdurl.format(parsed));\n}\n\nfunction normalizeLinkText(url) {\n  var parsed = mdurl.parse(url, true);\n\n  if (parsed.hostname) {\n    // Encode hostnames in urls like:\n    // `http://host/`, `https://host/`, `mailto:user@host`, `//host/`\n    //\n    // We don't encode unknown schemas, because it's likely that we encode\n    // something we shouldn't (e.g. `skype:name` treated as `skype:host`)\n    //\n    if (!parsed.protocol || RECODE_HOSTNAME_FOR.indexOf(parsed.protocol) >= 0) {\n      try {\n        parsed.hostname = punycode.toUnicode(parsed.hostname);\n      } catch (er) { /**/ }\n    }\n  }\n\n  return mdurl.decode(mdurl.format(parsed));\n}\n\n\n/**\n * class MarkdownIt\n *\n * Main parser/renderer class.\n *\n * ##### Usage\n *\n * ```javascript\n * // node.js, \"classic\" way:\n * var MarkdownIt = require('markdown-it'),\n *     md = new MarkdownIt();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // node.js, the same, but with sugar:\n * var md = require('markdown-it')();\n * var result = md.render('# markdown-it rulezz!');\n *\n * // browser without AMD, added to \"window\" on script load\n * // Note, there are no dash.\n * var md = window.markdownit();\n * var result = md.render('# markdown-it rulezz!');\n * ```\n *\n * Single line rendering, without paragraph wrap:\n *\n * ```javascript\n * var md = require('markdown-it')();\n * var result = md.renderInline('__markdown-it__ rulezz!');\n * ```\n **/\n\n/**\n * new MarkdownIt([presetName, options])\n * - presetName (String): optional, `commonmark` / `zero`\n * - options (Object)\n *\n * Creates parser instanse with given config. Can be called without `new`.\n *\n * ##### presetName\n *\n * MarkdownIt provides named presets as a convenience to quickly\n * enable/disable active syntax rules and options for common use cases.\n *\n * - [\"commonmark\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/commonmark.js) -\n *   configures parser to strict [CommonMark](http://commonmark.org/) mode.\n * - [default](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/default.js) -\n *   similar to GFM, used when no preset name given. Enables all available rules,\n *   but still without html, typographer & autolinker.\n * - [\"zero\"](https://github.com/markdown-it/markdown-it/blob/master/lib/presets/zero.js) -\n *   all rules disabled. Useful to quickly setup your config via `.enable()`.\n *   For example, when you need only `bold` and `italic` markup and nothing else.\n *\n * ##### options:\n *\n * - __html__ - `false`. Set `true` to enable HTML tags in source. Be careful!\n *   That's not safe! You may need external sanitizer to protect output from XSS.\n *   It's better to extend features via plugins, instead of enabling HTML.\n * - __xhtmlOut__ - `false`. Set `true` to add '/' when closing single tags\n *   (`<br />`). This is needed only for full CommonMark compatibility. In real\n *   world you will need HTML output.\n * - __breaks__ - `false`. Set `true` to convert `\\n` in paragraphs into `<br>`.\n * - __langPrefix__ - `language-`. CSS language class prefix for fenced blocks.\n *   Can be useful for external highlighters.\n * - __linkify__ - `false`. Set `true` to autoconvert URL-like text to links.\n * - __typographer__  - `false`. Set `true` to enable [some language-neutral\n *   replacement](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/replacements.js) +\n *   quotes beautification (smartquotes).\n * - __quotes__ - `“”‘’`, String or Array. Double + single quotes replacement\n *   pairs, when typographer enabled and smartquotes on. For example, you can\n *   use `'«»„“'` for Russian, `'„“‚‘'` for German, and\n *   `['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›']` for French (including nbsp).\n * - __highlight__ - `null`. Highlighter function for fenced code blocks.\n *   Highlighter `function (str, lang)` should return escaped HTML. It can also\n *   return empty string if the source was not changed and should be escaped\n *   externaly. If result starts with <pre... internal wrapper is skipped.\n *\n * ##### Example\n *\n * ```javascript\n * // commonmark mode\n * var md = require('markdown-it')('commonmark');\n *\n * // default mode\n * var md = require('markdown-it')();\n *\n * // enable everything\n * var md = require('markdown-it')({\n *   html: true,\n *   linkify: true,\n *   typographer: true\n * });\n * ```\n *\n * ##### Syntax highlighting\n *\n * ```js\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return hljs.highlight(lang, str, true).value;\n *       } catch (__) {}\n *     }\n *\n *     return ''; // use external default escaping\n *   }\n * });\n * ```\n *\n * Or with full wrapper override (if you need assign class to `<pre>`):\n *\n * ```javascript\n * var hljs = require('highlight.js') // https://highlightjs.org/\n *\n * // Actual default values\n * var md = require('markdown-it')({\n *   highlight: function (str, lang) {\n *     if (lang && hljs.getLanguage(lang)) {\n *       try {\n *         return '<pre class=\"hljs\"><code>' +\n *                hljs.highlight(lang, str, true).value +\n *                '</code></pre>';\n *       } catch (__) {}\n *     }\n *\n *     return '<pre class=\"hljs\"><code>' + md.utils.escapeHtml(str) + '</code></pre>';\n *   }\n * });\n * ```\n *\n **/\nfunction MarkdownIt(presetName, options) {\n  if (!(this instanceof MarkdownIt)) {\n    return new MarkdownIt(presetName, options);\n  }\n\n  if (!options) {\n    if (!utils.isString(presetName)) {\n      options = presetName || {};\n      presetName = 'default';\n    }\n  }\n\n  /**\n   * MarkdownIt#inline -> ParserInline\n   *\n   * Instance of [[ParserInline]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.inline = new ParserInline();\n\n  /**\n   * MarkdownIt#block -> ParserBlock\n   *\n   * Instance of [[ParserBlock]]. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.block = new ParserBlock();\n\n  /**\n   * MarkdownIt#core -> Core\n   *\n   * Instance of [[Core]] chain executor. You may need it to add new rules when\n   * writing plugins. For simple rules control use [[MarkdownIt.disable]] and\n   * [[MarkdownIt.enable]].\n   **/\n  this.core = new ParserCore();\n\n  /**\n   * MarkdownIt#renderer -> Renderer\n   *\n   * Instance of [[Renderer]]. Use it to modify output look. Or to add rendering\n   * rules for new token types, generated by plugins.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * function myToken(tokens, idx, options, env, self) {\n   *   //...\n   *   return result;\n   * };\n   *\n   * md.renderer.rules['my_token'] = myToken\n   * ```\n   *\n   * See [[Renderer]] docs and [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js).\n   **/\n  this.renderer = new Renderer();\n\n  /**\n   * MarkdownIt#linkify -> LinkifyIt\n   *\n   * [linkify-it](https://github.com/markdown-it/linkify-it) instance.\n   * Used by [linkify](https://github.com/markdown-it/markdown-it/blob/master/lib/rules_core/linkify.js)\n   * rule.\n   **/\n  this.linkify = new LinkifyIt();\n\n  /**\n   * MarkdownIt#validateLink(url) -> Boolean\n   *\n   * Link validation function. CommonMark allows too much in links. By default\n   * we disable `javascript:`, `vbscript:`, `file:` schemas, and almost all `data:...` schemas\n   * except some embedded image types.\n   *\n   * You can change this behaviour:\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   * // enable everything\n   * md.validateLink = function () { return true; }\n   * ```\n   **/\n  this.validateLink = validateLink;\n\n  /**\n   * MarkdownIt#normalizeLink(url) -> String\n   *\n   * Function used to encode link url to a machine-readable format,\n   * which includes url-encoding, punycode, etc.\n   **/\n  this.normalizeLink = normalizeLink;\n\n  /**\n   * MarkdownIt#normalizeLinkText(url) -> String\n   *\n   * Function used to decode link url to a human-readable format`\n   **/\n  this.normalizeLinkText = normalizeLinkText;\n\n\n  // Expose utils & helpers for easy acces from plugins\n\n  /**\n   * MarkdownIt#utils -> utils\n   *\n   * Assorted utility functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/common/utils.js).\n   **/\n  this.utils = utils;\n\n  /**\n   * MarkdownIt#helpers -> helpers\n   *\n   * Link components parser functions, useful to write plugins. See details\n   * [here](https://github.com/markdown-it/markdown-it/blob/master/lib/helpers).\n   **/\n  this.helpers = utils.assign({}, helpers);\n\n\n  this.options = {};\n  this.configure(presetName);\n\n  if (options) { this.set(options); }\n}\n\n\n/** chainable\n * MarkdownIt.set(options)\n *\n * Set parser options (in the same format as in constructor). Probably, you\n * will never need it, but you can change options after constructor call.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .set({ html: true, breaks: true })\n *             .set({ typographer, true });\n * ```\n *\n * __Note:__ To achieve the best possible performance, don't modify a\n * `markdown-it` instance options on the fly. If you need multiple configurations\n * it's best to create multiple instances and initialize each with separate\n * config.\n **/\nMarkdownIt.prototype.set = function (options) {\n  utils.assign(this.options, options);\n  return this;\n};\n\n\n/** chainable, internal\n * MarkdownIt.configure(presets)\n *\n * Batch load of all options and compenent settings. This is internal method,\n * and you probably will not need it. But if you will - see available presets\n * and data structure [here](https://github.com/markdown-it/markdown-it/tree/master/lib/presets)\n *\n * We strongly recommend to use presets instead of direct config loads. That\n * will give better compatibility with next versions.\n **/\nMarkdownIt.prototype.configure = function (presets) {\n  var self = this, presetName;\n\n  if (utils.isString(presets)) {\n    presetName = presets;\n    presets = config[presetName];\n    if (!presets) { throw new Error('Wrong `markdown-it` preset \"' + presetName + '\", check name'); }\n  }\n\n  if (!presets) { throw new Error('Wrong `markdown-it` preset, can\\'t be empty'); }\n\n  if (presets.options) { self.set(presets.options); }\n\n  if (presets.components) {\n    Object.keys(presets.components).forEach(function (name) {\n      if (presets.components[name].rules) {\n        self[name].ruler.enableOnly(presets.components[name].rules);\n      }\n      if (presets.components[name].rules2) {\n        self[name].ruler2.enableOnly(presets.components[name].rules2);\n      }\n    });\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.enable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to enable\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable list or rules. It will automatically find appropriate components,\n * containing rules with given names. If rule not found, and `ignoreInvalid`\n * not set - throws exception.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')()\n *             .enable(['sub', 'sup'])\n *             .disable('smartquotes');\n * ```\n **/\nMarkdownIt.prototype.enable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.enable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.enable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to enable unknown rule(s): ' + missed);\n  }\n\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.disable(list, ignoreInvalid)\n * - list (String|Array): rule name or list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * The same as [[MarkdownIt.enable]], but turn specified rules off.\n **/\nMarkdownIt.prototype.disable = function (list, ignoreInvalid) {\n  var result = [];\n\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  [ 'core', 'block', 'inline' ].forEach(function (chain) {\n    result = result.concat(this[chain].ruler.disable(list, true));\n  }, this);\n\n  result = result.concat(this.inline.ruler2.disable(list, true));\n\n  var missed = list.filter(function (name) { return result.indexOf(name) < 0; });\n\n  if (missed.length && !ignoreInvalid) {\n    throw new Error('MarkdownIt. Failed to disable unknown rule(s): ' + missed);\n  }\n  return this;\n};\n\n\n/** chainable\n * MarkdownIt.use(plugin, params)\n *\n * Load specified plugin with given params into current parser instance.\n * It's just a sugar to call `plugin(md, params)` with curring.\n *\n * ##### Example\n *\n * ```javascript\n * var iterator = require('markdown-it-for-inline');\n * var md = require('markdown-it')()\n *             .use(iterator, 'foo_replace', 'text', function (tokens, idx) {\n *               tokens[idx].content = tokens[idx].content.replace(/foo/g, 'bar');\n *             });\n * ```\n **/\nMarkdownIt.prototype.use = function (plugin /*, params, ... */) {\n  var args = [ this ].concat(Array.prototype.slice.call(arguments, 1));\n  plugin.apply(plugin, args);\n  return this;\n};\n\n\n/** internal\n * MarkdownIt.parse(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Parse input string and return list of block tokens (special token type\n * \"inline\" will contain list of inline tokens). You should not call this\n * method directly, until you write custom renderer (for example, to produce\n * AST).\n *\n * `env` is used to pass data between \"distributed\" rules and return additional\n * metadata like reference info, needed for the renderer. It also can be used to\n * inject data in specific cases. Usually, you will be ok to pass `{}`,\n * and then pass updated object to renderer.\n **/\nMarkdownIt.prototype.parse = function (src, env) {\n  if (typeof src !== 'string') {\n    throw new Error('Input data should be a String');\n  }\n\n  var state = new this.core.State(src, this, env);\n\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.render(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Render markdown string into html. It does all magic for you :).\n *\n * `env` can be used to inject additional metadata (`{}` by default).\n * But you will not need it with high probability. See also comment\n * in [[MarkdownIt.parse]].\n **/\nMarkdownIt.prototype.render = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parse(src, env), this.options, env);\n};\n\n\n/** internal\n * MarkdownIt.parseInline(src, env) -> Array\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * The same as [[MarkdownIt.parse]] but skip all block rules. It returns the\n * block tokens list with the single `inline` element, containing parsed inline\n * tokens in `children` property. Also updates `env` object.\n **/\nMarkdownIt.prototype.parseInline = function (src, env) {\n  var state = new this.core.State(src, this, env);\n\n  state.inlineMode = true;\n  this.core.process(state);\n\n  return state.tokens;\n};\n\n\n/**\n * MarkdownIt.renderInline(src [, env]) -> String\n * - src (String): source string\n * - env (Object): environment sandbox\n *\n * Similar to [[MarkdownIt.render]] but for single paragraph content. Result\n * will NOT be wrapped into `<p>` tags.\n **/\nMarkdownIt.prototype.renderInline = function (src, env) {\n  env = env || {};\n\n  return this.renderer.render(this.parseInline(src, env), this.options, env);\n};\n\n\nmodule.exports = MarkdownIt;\n","// Token class\n\n'use strict';\n\n\n/**\n * class Token\n **/\n\n/**\n * new Token(type, tag, nesting)\n *\n * Create new token and fill passed properties.\n **/\nfunction Token(type, tag, nesting) {\n  /**\n   * Token#type -> String\n   *\n   * Type of the token (string, e.g. \"paragraph_open\")\n   **/\n  this.type     = type;\n\n  /**\n   * Token#tag -> String\n   *\n   * html tag name, e.g. \"p\"\n   **/\n  this.tag      = tag;\n\n  /**\n   * Token#attrs -> Array\n   *\n   * Html attributes. Format: `[ [ name1, value1 ], [ name2, value2 ] ]`\n   **/\n  this.attrs    = null;\n\n  /**\n   * Token#map -> Array\n   *\n   * Source map info. Format: `[ line_begin, line_end ]`\n   **/\n  this.map      = null;\n\n  /**\n   * Token#nesting -> Number\n   *\n   * Level change (number in {-1, 0, 1} set), where:\n   *\n   * -  `1` means the tag is opening\n   * -  `0` means the tag is self-closing\n   * - `-1` means the tag is closing\n   **/\n  this.nesting  = nesting;\n\n  /**\n   * Token#level -> Number\n   *\n   * nesting level, the same as `state.level`\n   **/\n  this.level    = 0;\n\n  /**\n   * Token#children -> Array\n   *\n   * An array of child nodes (inline and img tokens)\n   **/\n  this.children = null;\n\n  /**\n   * Token#content -> String\n   *\n   * In a case of self-closing tag (code, html, fence, etc.),\n   * it has contents of this tag.\n   **/\n  this.content  = '';\n\n  /**\n   * Token#markup -> String\n   *\n   * '*' or '_' for emphasis, fence string for fence, etc.\n   **/\n  this.markup   = '';\n\n  /**\n   * Token#info -> String\n   *\n   * fence infostring\n   **/\n  this.info     = '';\n\n  /**\n   * Token#meta -> Object\n   *\n   * A place for plugins to store an arbitrary data\n   **/\n  this.meta     = null;\n\n  /**\n   * Token#block -> Boolean\n   *\n   * True for block-level tokens, false for inline tokens.\n   * Used in renderer to calculate line breaks\n   **/\n  this.block    = false;\n\n  /**\n   * Token#hidden -> Boolean\n   *\n   * If it's true, ignore this element when rendering. Used for tight lists\n   * to hide paragraphs.\n   **/\n  this.hidden   = false;\n}\n\n\n/**\n * Token.attrIndex(name) -> Number\n *\n * Search attribute index by name.\n **/\nToken.prototype.attrIndex = function attrIndex(name) {\n  var attrs, i, len;\n\n  if (!this.attrs) { return -1; }\n\n  attrs = this.attrs;\n\n  for (i = 0, len = attrs.length; i < len; i++) {\n    if (attrs[i][0] === name) { return i; }\n  }\n  return -1;\n};\n\n\n/**\n * Token.attrPush(attrData)\n *\n * Add `[ name, value ]` attribute to list. Init attrs if necessary\n **/\nToken.prototype.attrPush = function attrPush(attrData) {\n  if (this.attrs) {\n    this.attrs.push(attrData);\n  } else {\n    this.attrs = [ attrData ];\n  }\n};\n\n\n/**\n * Token.attrSet(name, value)\n *\n * Set `name` attribute to `value`. Override old value if exists.\n **/\nToken.prototype.attrSet = function attrSet(name, value) {\n  var idx = this.attrIndex(name),\n      attrData = [ name, value ];\n\n  if (idx < 0) {\n    this.attrPush(attrData);\n  } else {\n    this.attrs[idx] = attrData;\n  }\n};\n\n\n/**\n * Token.attrGet(name)\n *\n * Get the value of attribute `name`, or null if it does not exist.\n **/\nToken.prototype.attrGet = function attrGet(name) {\n  var idx = this.attrIndex(name), value = null;\n  if (idx >= 0) {\n    value = this.attrs[idx][1];\n  }\n  return value;\n};\n\n\n/**\n * Token.attrJoin(name, value)\n *\n * Join value to existing attribute via space. Or create new attribute if not\n * exists. Useful to operate with token classes.\n **/\nToken.prototype.attrJoin = function attrJoin(name, value) {\n  var idx = this.attrIndex(name);\n\n  if (idx < 0) {\n    this.attrPush([ name, value ]);\n  } else {\n    this.attrs[idx][1] = this.attrs[idx][1] + ' ' + value;\n  }\n};\n\n\nmodule.exports = Token;\n","// Inline parser state\n\n'use strict';\n\n\nvar Token          = require('../token');\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\n\nfunction StateInline(src, md, env, outTokens) {\n  this.src = src;\n  this.env = env;\n  this.md = md;\n  this.tokens = outTokens;\n  this.tokens_meta = Array(outTokens.length);\n\n  this.pos = 0;\n  this.posMax = this.src.length;\n  this.level = 0;\n  this.pending = '';\n  this.pendingLevel = 0;\n\n  // Stores { start: end } pairs. Useful for backtrack\n  // optimization of pairs parse (emphasis, strikes).\n  this.cache = {};\n\n  // List of emphasis-like delimiters for current tag\n  this.delimiters = [];\n\n  // Stack of delimiter lists for upper level tags\n  this._prev_delimiters = [];\n}\n\n\n// Flush pending text\n//\nStateInline.prototype.pushPending = function () {\n  var token = new Token('text', '', 0);\n  token.content = this.pending;\n  token.level = this.pendingLevel;\n  this.tokens.push(token);\n  this.pending = '';\n  return token;\n};\n\n\n// Push new token to \"stream\".\n// If pending text exists - flush it as text token\n//\nStateInline.prototype.push = function (type, tag, nesting) {\n  if (this.pending) {\n    this.pushPending();\n  }\n\n  var token = new Token(type, tag, nesting);\n  var token_meta = null;\n\n  if (nesting < 0) {\n    // closing tag\n    this.level--;\n    this.delimiters = this._prev_delimiters.pop();\n  }\n\n  token.level = this.level;\n\n  if (nesting > 0) {\n    // opening tag\n    this.level++;\n    this._prev_delimiters.push(this.delimiters);\n    this.delimiters = [];\n    token_meta = { delimiters: this.delimiters };\n  }\n\n  this.pendingLevel = this.level;\n  this.tokens.push(token);\n  this.tokens_meta.push(token_meta);\n  return token;\n};\n\n\n// Scan a sequence of emphasis-like markers, and determine whether\n// it can start an emphasis sequence or end an emphasis sequence.\n//\n//  - start - position to scan from (it should point at a valid marker);\n//  - canSplitWord - determine if these markers can be found inside a word\n//\nStateInline.prototype.scanDelims = function (start, canSplitWord) {\n  var pos = start, lastChar, nextChar, count, can_open, can_close,\n      isLastWhiteSpace, isLastPunctChar,\n      isNextWhiteSpace, isNextPunctChar,\n      left_flanking = true,\n      right_flanking = true,\n      max = this.posMax,\n      marker = this.src.charCodeAt(start);\n\n  // treat beginning of the line as a whitespace\n  lastChar = start > 0 ? this.src.charCodeAt(start - 1) : 0x20;\n\n  while (pos < max && this.src.charCodeAt(pos) === marker) { pos++; }\n\n  count = pos - start;\n\n  // treat end of the line as a whitespace\n  nextChar = pos < max ? this.src.charCodeAt(pos) : 0x20;\n\n  isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n  isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n  isLastWhiteSpace = isWhiteSpace(lastChar);\n  isNextWhiteSpace = isWhiteSpace(nextChar);\n\n  if (isNextWhiteSpace) {\n    left_flanking = false;\n  } else if (isNextPunctChar) {\n    if (!(isLastWhiteSpace || isLastPunctChar)) {\n      left_flanking = false;\n    }\n  }\n\n  if (isLastWhiteSpace) {\n    right_flanking = false;\n  } else if (isLastPunctChar) {\n    if (!(isNextWhiteSpace || isNextPunctChar)) {\n      right_flanking = false;\n    }\n  }\n\n  if (!canSplitWord) {\n    can_open  = left_flanking  && (!right_flanking || isLastPunctChar);\n    can_close = right_flanking && (!left_flanking  || isNextPunctChar);\n  } else {\n    can_open  = left_flanking;\n    can_close = right_flanking;\n  }\n\n  return {\n    can_open:  can_open,\n    can_close: can_close,\n    length:    count\n  };\n};\n\n\n// re-export Token class to use in block rules\nStateInline.prototype.Token = Token;\n\n\nmodule.exports = StateInline;\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","// lheading (---, ===)\n\n'use strict';\n\n\nmodule.exports = function lheading(state, startLine, endLine/*, silent*/) {\n  var content, terminate, i, l, token, pos, max, level, marker,\n      nextLine = startLine + 1, oldParentType,\n      terminatorRules = state.md.block.ruler.getRules('paragraph');\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph'; // use paragraph to match terminatorRules\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    //\n    // Check for underline in setext header\n    //\n    if (state.sCount[nextLine] >= state.blkIndent) {\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n\n      if (pos < max) {\n        marker = state.src.charCodeAt(pos);\n\n        if (marker === 0x2D/* - */ || marker === 0x3D/* = */) {\n          pos = state.skipChars(pos, marker);\n          pos = state.skipSpaces(pos);\n\n          if (pos >= max) {\n            level = (marker === 0x3D/* = */ ? 1 : 2);\n            break;\n          }\n        }\n      }\n    }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  if (!level) {\n    // Didn't find valid underline\n    return false;\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine + 1;\n\n  token          = state.push('heading_open', 'h' + String(level), 1);\n  token.markup   = String.fromCharCode(marker);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line - 1 ];\n  token.children = [];\n\n  token          = state.push('heading_close', 'h' + String(level), -1);\n  token.markup   = String.fromCharCode(marker);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","// \"Zero\" preset, with nothing enabled. Useful for manual configuring of simple\n// modes. For example, to parse bold/italic only.\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Clean up tokens after emphasis and strikethrough postprocessing:\n// merge adjacent text nodes into one and re-calculate all token levels\n//\n// This is necessary because initially emphasis delimiter markers (*, _, ~)\n// are treated as their own separate text tokens. Then emphasis rule either\n// leaves them as text (needed to merge with adjacent text) or turns them\n// into opening/closing tags (which messes up levels inside).\n//\n'use strict';\n\n\nmodule.exports = function text_collapse(state) {\n  var curr, last,\n      level = 0,\n      tokens = state.tokens,\n      max = state.tokens.length;\n\n  for (curr = last = 0; curr < max; curr++) {\n    // re-calculate levels after emphasis/strikethrough turns some text nodes\n    // into opening/closing tags\n    if (tokens[curr].nesting < 0) level--; // closing tag\n    tokens[curr].level = level;\n    if (tokens[curr].nesting > 0) level++; // opening tag\n\n    if (tokens[curr].type === 'text' &&\n        curr + 1 < max &&\n        tokens[curr + 1].type === 'text') {\n\n      // collapse two adjacent text nodes\n      tokens[curr + 1].content = tokens[curr].content + tokens[curr + 1].content;\n    } else {\n      if (curr !== last) { tokens[last] = tokens[curr]; }\n\n      last++;\n    }\n  }\n\n  if (curr !== last) {\n    tokens.length = last;\n  }\n};\n","// Process autolinks '<protocol:...>'\n\n'use strict';\n\n\n/*eslint max-len:0*/\nvar EMAIL_RE    = /^<([a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*)>/;\nvar AUTOLINK_RE = /^<([a-zA-Z][a-zA-Z0-9+.\\-]{1,31}):([^<>\\x00-\\x20]*)>/;\n\n\nmodule.exports = function autolink(state, silent) {\n  var tail, linkMatch, emailMatch, url, fullUrl, token,\n      pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  tail = state.src.slice(pos);\n\n  if (tail.indexOf('>') < 0) { return false; }\n\n  if (AUTOLINK_RE.test(tail)) {\n    linkMatch = tail.match(AUTOLINK_RE);\n\n    url = linkMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink(url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += linkMatch[0].length;\n    return true;\n  }\n\n  if (EMAIL_RE.test(tail)) {\n    emailMatch = tail.match(EMAIL_RE);\n\n    url = emailMatch[0].slice(1, -1);\n    fullUrl = state.md.normalizeLink('mailto:' + url);\n    if (!state.md.validateLink(fullUrl)) { return false; }\n\n    if (!silent) {\n      token         = state.push('link_open', 'a', 1);\n      token.attrs   = [ [ 'href', fullUrl ] ];\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n\n      token         = state.push('text', '', 0);\n      token.content = state.md.normalizeLinkText(url);\n\n      token         = state.push('link_close', 'a', -1);\n      token.markup  = 'autolink';\n      token.info    = 'auto';\n    }\n\n    state.pos += emailMatch[0].length;\n    return true;\n  }\n\n  return false;\n};\n","'use strict';\n\n\nmodule.exports = function block(state) {\n  var token;\n\n  if (state.inlineMode) {\n    token          = new state.Token('inline', '', 0);\n    token.content  = state.src;\n    token.map      = [ 0, 1 ];\n    token.children = [];\n    state.tokens.push(token);\n  } else {\n    state.md.block.parse(state.src, state.md, state.env, state.tokens);\n  }\n};\n","\n'use strict';\n\n\nmodule.exports = function format(url) {\n  var result = '';\n\n  result += url.protocol || '';\n  result += url.slashes ? '//' : '';\n  result += url.auth ? url.auth + '@' : '';\n\n  if (url.hostname && url.hostname.indexOf(':') !== -1) {\n    // ipv6 address\n    result += '[' + url.hostname + ']';\n  } else {\n    result += url.hostname || '';\n  }\n\n  result += url.port ? ':' + url.port : '';\n  result += url.pathname || '';\n  result += url.search || '';\n  result += url.hash || '';\n\n  return result;\n};\n","// Proceess '\\n'\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nmodule.exports = function newline(state, silent) {\n  var pmax, max, pos = state.pos;\n\n  if (state.src.charCodeAt(pos) !== 0x0A/* \\n */) { return false; }\n\n  pmax = state.pending.length - 1;\n  max = state.posMax;\n\n  // '  \\n' -> hardbreak\n  // Lookup in pending chars is bad practice! Don't copy to other rules!\n  // Pending string is stored in concat mode, indexed lookups will cause\n  // convertion to flat mode.\n  if (!silent) {\n    if (pmax >= 0 && state.pending.charCodeAt(pmax) === 0x20) {\n      if (pmax >= 1 && state.pending.charCodeAt(pmax - 1) === 0x20) {\n        state.pending = state.pending.replace(/ +$/, '');\n        state.push('hardbreak', 'br', 0);\n      } else {\n        state.pending = state.pending.slice(0, -1);\n        state.push('softbreak', 'br', 0);\n      }\n\n    } else {\n      state.push('softbreak', 'br', 0);\n    }\n  }\n\n  pos++;\n\n  // skip heading spaces for next line\n  while (pos < max && isSpace(state.src.charCodeAt(pos))) { pos++; }\n\n  state.pos = pos;\n  return true;\n};\n","// Commonmark default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         true,         // Enable HTML tags in source\n    xhtmlOut:     true,         // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   20            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {\n      rules: [\n        'normalize',\n        'block',\n        'inline'\n      ]\n    },\n\n    block: {\n      rules: [\n        'blockquote',\n        'code',\n        'fence',\n        'heading',\n        'hr',\n        'html_block',\n        'lheading',\n        'list',\n        'reference',\n        'paragraph'\n      ]\n    },\n\n    inline: {\n      rules: [\n        'autolink',\n        'backticks',\n        'emphasis',\n        'entity',\n        'escape',\n        'html_inline',\n        'image',\n        'link',\n        'newline',\n        'text'\n      ],\n      rules2: [\n        'balance_pairs',\n        'emphasis',\n        'text_collapse'\n      ]\n    }\n  }\n};\n","// Paragraph\n\n'use strict';\n\n\nmodule.exports = function paragraph(state, startLine/*, endLine*/) {\n  var content, terminate, i, l, token, oldParentType,\n      nextLine = startLine + 1,\n      terminatorRules = state.md.block.ruler.getRules('paragraph'),\n      endLine = state.lineMax;\n\n  oldParentType = state.parentType;\n  state.parentType = 'paragraph';\n\n  // jump line-by-line until empty one or EOF\n  for (; nextLine < endLine && !state.isEmpty(nextLine); nextLine++) {\n    // this would be a code block normally, but after paragraph\n    // it's considered a lazy continuation regardless of what's there\n    if (state.sCount[nextLine] - state.blkIndent > 3) { continue; }\n\n    // quirk for blockquotes, this line should already be checked by that rule\n    if (state.sCount[nextLine] < 0) { continue; }\n\n    // Some tags can terminate paragraph without empty line.\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n  }\n\n  content = state.getLines(startLine, nextLine, state.blkIndent, false).trim();\n\n  state.line = nextLine;\n\n  token          = state.push('paragraph_open', 'p', 1);\n  token.map      = [ startLine, state.line ];\n\n  token          = state.push('inline', '', 0);\n  token.content  = content;\n  token.map      = [ startLine, state.line ];\n  token.children = [];\n\n  token          = state.push('paragraph_close', 'p', -1);\n\n  state.parentType = oldParentType;\n\n  return true;\n};\n","/**\n * class Ruler\n *\n * Helper class, used by [[MarkdownIt#core]], [[MarkdownIt#block]] and\n * [[MarkdownIt#inline]] to manage sequences of functions (rules):\n *\n * - keep rules in defined order\n * - assign the name to each rule\n * - enable/disable rules\n * - add/replace rules\n * - allow assign rules to additional named chains (in the same)\n * - cacheing lists of active rules\n *\n * You will not need use this class directly until write plugins. For simple\n * rules control use [[MarkdownIt.disable]], [[MarkdownIt.enable]] and\n * [[MarkdownIt.use]].\n **/\n'use strict';\n\n\n/**\n * new Ruler()\n **/\nfunction Ruler() {\n  // List of added rules. Each element is:\n  //\n  // {\n  //   name: XXX,\n  //   enabled: Boolean,\n  //   fn: Function(),\n  //   alt: [ name2, name3 ]\n  // }\n  //\n  this.__rules__ = [];\n\n  // Cached rule chains.\n  //\n  // First level - chain name, '' for default.\n  // Second level - diginal anchor for fast filtering by charcodes.\n  //\n  this.__cache__ = null;\n}\n\n////////////////////////////////////////////////////////////////////////////////\n// Helper methods, should not be used directly\n\n\n// Find rule index by name\n//\nRuler.prototype.__find__ = function (name) {\n  for (var i = 0; i < this.__rules__.length; i++) {\n    if (this.__rules__[i].name === name) {\n      return i;\n    }\n  }\n  return -1;\n};\n\n\n// Build rules lookup cache\n//\nRuler.prototype.__compile__ = function () {\n  var self = this;\n  var chains = [ '' ];\n\n  // collect unique names\n  self.__rules__.forEach(function (rule) {\n    if (!rule.enabled) { return; }\n\n    rule.alt.forEach(function (altName) {\n      if (chains.indexOf(altName) < 0) {\n        chains.push(altName);\n      }\n    });\n  });\n\n  self.__cache__ = {};\n\n  chains.forEach(function (chain) {\n    self.__cache__[chain] = [];\n    self.__rules__.forEach(function (rule) {\n      if (!rule.enabled) { return; }\n\n      if (chain && rule.alt.indexOf(chain) < 0) { return; }\n\n      self.__cache__[chain].push(rule.fn);\n    });\n  });\n};\n\n\n/**\n * Ruler.at(name, fn [, options])\n * - name (String): rule name to replace.\n * - fn (Function): new rule function.\n * - options (Object): new rule options (not mandatory).\n *\n * Replace rule by name with new function & options. Throws error if name not\n * found.\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * Replace existing typographer replacement rule with new one:\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.at('replacements', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.at = function (name, fn, options) {\n  var index = this.__find__(name);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + name); }\n\n  this.__rules__[index].fn = fn;\n  this.__rules__[index].alt = opt.alt || [];\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.before(beforeName, ruleName, fn [, options])\n * - beforeName (String): new rule will be added before this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain before one with given name. See also\n * [[Ruler.after]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.block.ruler.before('paragraph', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.before = function (beforeName, ruleName, fn, options) {\n  var index = this.__find__(beforeName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + beforeName); }\n\n  this.__rules__.splice(index, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.after(afterName, ruleName, fn [, options])\n * - afterName (String): new rule will be added after this one.\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Add new rule to chain after one with given name. See also\n * [[Ruler.before]], [[Ruler.push]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.inline.ruler.after('text', 'my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.after = function (afterName, ruleName, fn, options) {\n  var index = this.__find__(afterName);\n  var opt = options || {};\n\n  if (index === -1) { throw new Error('Parser rule not found: ' + afterName); }\n\n  this.__rules__.splice(index + 1, 0, {\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n/**\n * Ruler.push(ruleName, fn [, options])\n * - ruleName (String): name of added rule.\n * - fn (Function): rule function.\n * - options (Object): rule options (not mandatory).\n *\n * Push new rule to the end of chain. See also\n * [[Ruler.before]], [[Ruler.after]].\n *\n * ##### Options:\n *\n * - __alt__ - array with names of \"alternate\" chains.\n *\n * ##### Example\n *\n * ```javascript\n * var md = require('markdown-it')();\n *\n * md.core.ruler.push('my_rule', function replace(state) {\n *   //...\n * });\n * ```\n **/\nRuler.prototype.push = function (ruleName, fn, options) {\n  var opt = options || {};\n\n  this.__rules__.push({\n    name: ruleName,\n    enabled: true,\n    fn: fn,\n    alt: opt.alt || []\n  });\n\n  this.__cache__ = null;\n};\n\n\n/**\n * Ruler.enable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to enable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.disable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.enable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and enable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = true;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.enableOnly(list [, ignoreInvalid])\n * - list (String|Array): list of rule names to enable (whitelist).\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Enable rules with given names, and disable everything else. If any rule name\n * not found - throw Error. Errors can be disabled by second param.\n *\n * See also [[Ruler.disable]], [[Ruler.enable]].\n **/\nRuler.prototype.enableOnly = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  this.__rules__.forEach(function (rule) { rule.enabled = false; });\n\n  this.enable(list, ignoreInvalid);\n};\n\n\n/**\n * Ruler.disable(list [, ignoreInvalid]) -> Array\n * - list (String|Array): list of rule names to disable.\n * - ignoreInvalid (Boolean): set `true` to ignore errors when rule not found.\n *\n * Disable rules with given names. If any rule name not found - throw Error.\n * Errors can be disabled by second param.\n *\n * Returns list of found rule names (if no exception happened).\n *\n * See also [[Ruler.enable]], [[Ruler.enableOnly]].\n **/\nRuler.prototype.disable = function (list, ignoreInvalid) {\n  if (!Array.isArray(list)) { list = [ list ]; }\n\n  var result = [];\n\n  // Search by name and disable\n  list.forEach(function (name) {\n    var idx = this.__find__(name);\n\n    if (idx < 0) {\n      if (ignoreInvalid) { return; }\n      throw new Error('Rules manager: invalid rule name ' + name);\n    }\n    this.__rules__[idx].enabled = false;\n    result.push(name);\n  }, this);\n\n  this.__cache__ = null;\n  return result;\n};\n\n\n/**\n * Ruler.getRules(chainName) -> Array\n *\n * Return array of active functions (rules) for given chain name. It analyzes\n * rules configuration, compiles caches if not exists and returns result.\n *\n * Default chain name is `''` (empty string). It can't be skipped. That's\n * done intentionally, to keep signature monomorphic for high speed.\n **/\nRuler.prototype.getRules = function (chainName) {\n  if (this.__cache__ === null) {\n    this.__compile__();\n  }\n\n  // Chain can be empty, if rules disabled. But we still have to return Array.\n  return this.__cache__[chainName] || [];\n};\n\nmodule.exports = Ruler;\n","// Parse backticks\n\n'use strict';\n\nmodule.exports = function backtick(state, silent) {\n  var start, max, marker, matchStart, matchEnd, token,\n      pos = state.pos,\n      ch = state.src.charCodeAt(pos);\n\n  if (ch !== 0x60/* ` */) { return false; }\n\n  start = pos;\n  pos++;\n  max = state.posMax;\n\n  while (pos < max && state.src.charCodeAt(pos) === 0x60/* ` */) { pos++; }\n\n  marker = state.src.slice(start, pos);\n\n  matchStart = matchEnd = pos;\n\n  while ((matchStart = state.src.indexOf('`', matchEnd)) !== -1) {\n    matchEnd = matchStart + 1;\n\n    while (matchEnd < max && state.src.charCodeAt(matchEnd) === 0x60/* ` */) { matchEnd++; }\n\n    if (matchEnd - matchStart === marker.length) {\n      if (!silent) {\n        token         = state.push('code_inline', 'code', 0);\n        token.markup  = marker;\n        token.content = state.src.slice(pos, matchStart)\n          .replace(/\\n/g, ' ')\n          .replace(/^ (.+) $/, '$1');\n      }\n      state.pos = matchEnd;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += marker; }\n  state.pos += marker.length;\n  return true;\n};\n","// Lists\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\n// Search `[-+*][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipBulletListMarker(state, startLine) {\n  var marker, pos, max, ch;\n\n  pos = state.bMarks[startLine] + state.tShift[startLine];\n  max = state.eMarks[startLine];\n\n  marker = state.src.charCodeAt(pos++);\n  // Check bullet\n  if (marker !== 0x2A/* * */ &&\n      marker !== 0x2D/* - */ &&\n      marker !== 0x2B/* + */) {\n    return -1;\n  }\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" -test \" - is not a list item\n      return -1;\n    }\n  }\n\n  return pos;\n}\n\n// Search `\\d+[.)][\\n ]`, returns next pos after marker on success\n// or -1 on fail.\nfunction skipOrderedListMarker(state, startLine) {\n  var ch,\n      start = state.bMarks[startLine] + state.tShift[startLine],\n      pos = start,\n      max = state.eMarks[startLine];\n\n  // List marker should have at least 2 chars (digit + dot)\n  if (pos + 1 >= max) { return -1; }\n\n  ch = state.src.charCodeAt(pos++);\n\n  if (ch < 0x30/* 0 */ || ch > 0x39/* 9 */) { return -1; }\n\n  for (;;) {\n    // EOL -> fail\n    if (pos >= max) { return -1; }\n\n    ch = state.src.charCodeAt(pos++);\n\n    if (ch >= 0x30/* 0 */ && ch <= 0x39/* 9 */) {\n\n      // List marker should have no more than 9 digits\n      // (prevents integer overflow in browsers)\n      if (pos - start >= 10) { return -1; }\n\n      continue;\n    }\n\n    // found valid marker\n    if (ch === 0x29/* ) */ || ch === 0x2e/* . */) {\n      break;\n    }\n\n    return -1;\n  }\n\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (!isSpace(ch)) {\n      // \" 1.test \" - is not a list item\n      return -1;\n    }\n  }\n  return pos;\n}\n\nfunction markTightParagraphs(state, idx) {\n  var i, l,\n      level = state.level + 2;\n\n  for (i = idx + 2, l = state.tokens.length - 2; i < l; i++) {\n    if (state.tokens[i].level === level && state.tokens[i].type === 'paragraph_open') {\n      state.tokens[i + 2].hidden = true;\n      state.tokens[i].hidden = true;\n      i += 2;\n    }\n  }\n}\n\n\nmodule.exports = function list(state, startLine, endLine, silent) {\n  var ch,\n      contentStart,\n      i,\n      indent,\n      indentAfterMarker,\n      initial,\n      isOrdered,\n      itemLines,\n      l,\n      listLines,\n      listTokIdx,\n      markerCharCode,\n      markerValue,\n      max,\n      nextLine,\n      offset,\n      oldListIndent,\n      oldParentType,\n      oldSCount,\n      oldTShift,\n      oldTight,\n      pos,\n      posAfterMarker,\n      prevEmptyEnd,\n      start,\n      terminate,\n      terminatorRules,\n      token,\n      isTerminatingParagraph = false,\n      tight = true;\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  // Special case:\n  //  - item 1\n  //   - item 2\n  //    - item 3\n  //     - item 4\n  //      - this one is a paragraph continuation\n  if (state.listIndent >= 0 &&\n      state.sCount[startLine] - state.listIndent >= 4 &&\n      state.sCount[startLine] < state.blkIndent) {\n    return false;\n  }\n\n  // limit conditions when list can interrupt\n  // a paragraph (validation mode only)\n  if (silent && state.parentType === 'paragraph') {\n    // Next list item should still terminate previous list item;\n    //\n    // This code can fail if plugins use blkIndent as well as lists,\n    // but I hope the spec gets fixed long before that happens.\n    //\n    if (state.tShift[startLine] >= state.blkIndent) {\n      isTerminatingParagraph = true;\n    }\n  }\n\n  // Detect list type and position after marker\n  if ((posAfterMarker = skipOrderedListMarker(state, startLine)) >= 0) {\n    isOrdered = true;\n    start = state.bMarks[startLine] + state.tShift[startLine];\n    markerValue = Number(state.src.substr(start, posAfterMarker - start - 1));\n\n    // If we're starting a new ordered list right after\n    // a paragraph, it should start with 1.\n    if (isTerminatingParagraph && markerValue !== 1) return false;\n\n  } else if ((posAfterMarker = skipBulletListMarker(state, startLine)) >= 0) {\n    isOrdered = false;\n\n  } else {\n    return false;\n  }\n\n  // If we're starting a new unordered list right after\n  // a paragraph, first line should not be empty.\n  if (isTerminatingParagraph) {\n    if (state.skipSpaces(posAfterMarker) >= state.eMarks[startLine]) return false;\n  }\n\n  // We should terminate list on style change. Remember first one to compare.\n  markerCharCode = state.src.charCodeAt(posAfterMarker - 1);\n\n  // For validation mode we can terminate immediately\n  if (silent) { return true; }\n\n  // Start list\n  listTokIdx = state.tokens.length;\n\n  if (isOrdered) {\n    token       = state.push('ordered_list_open', 'ol', 1);\n    if (markerValue !== 1) {\n      token.attrs = [ [ 'start', markerValue ] ];\n    }\n\n  } else {\n    token       = state.push('bullet_list_open', 'ul', 1);\n  }\n\n  token.map    = listLines = [ startLine, 0 ];\n  token.markup = String.fromCharCode(markerCharCode);\n\n  //\n  // Iterate list items\n  //\n\n  nextLine = startLine;\n  prevEmptyEnd = false;\n  terminatorRules = state.md.block.ruler.getRules('list');\n\n  oldParentType = state.parentType;\n  state.parentType = 'list';\n\n  while (nextLine < endLine) {\n    pos = posAfterMarker;\n    max = state.eMarks[nextLine];\n\n    initial = offset = state.sCount[nextLine] + posAfterMarker - (state.bMarks[startLine] + state.tShift[startLine]);\n\n    while (pos < max) {\n      ch = state.src.charCodeAt(pos);\n\n      if (ch === 0x09) {\n        offset += 4 - (offset + state.bsCount[nextLine]) % 4;\n      } else if (ch === 0x20) {\n        offset++;\n      } else {\n        break;\n      }\n\n      pos++;\n    }\n\n    contentStart = pos;\n\n    if (contentStart >= max) {\n      // trimming space in \"-    \\n  3\" case, indent is 1 here\n      indentAfterMarker = 1;\n    } else {\n      indentAfterMarker = offset - initial;\n    }\n\n    // If we have more than 4 spaces, the indent is 1\n    // (the rest is just indented code block)\n    if (indentAfterMarker > 4) { indentAfterMarker = 1; }\n\n    // \"  -  test\"\n    //  ^^^^^ - calculating total length of this thing\n    indent = initial + indentAfterMarker;\n\n    // Run subparser & write tokens\n    token        = state.push('list_item_open', 'li', 1);\n    token.markup = String.fromCharCode(markerCharCode);\n    token.map    = itemLines = [ startLine, 0 ];\n\n    // change current state, then restore it after parser subcall\n    oldTight = state.tight;\n    oldTShift = state.tShift[startLine];\n    oldSCount = state.sCount[startLine];\n\n    //  - example list\n    // ^ listIndent position will be here\n    //   ^ blkIndent position will be here\n    //\n    oldListIndent = state.listIndent;\n    state.listIndent = state.blkIndent;\n    state.blkIndent = indent;\n\n    state.tight = true;\n    state.tShift[startLine] = contentStart - state.bMarks[startLine];\n    state.sCount[startLine] = offset;\n\n    if (contentStart >= max && state.isEmpty(startLine + 1)) {\n      // workaround for this case\n      // (list item is empty, list terminates before \"foo\"):\n      // ~~~~~~~~\n      //   -\n      //\n      //     foo\n      // ~~~~~~~~\n      state.line = Math.min(state.line + 2, endLine);\n    } else {\n      state.md.block.tokenize(state, startLine, endLine, true);\n    }\n\n    // If any of list item is tight, mark list as tight\n    if (!state.tight || prevEmptyEnd) {\n      tight = false;\n    }\n    // Item become loose if finish with empty line,\n    // but we should filter last element, because it means list finish\n    prevEmptyEnd = (state.line - startLine) > 1 && state.isEmpty(state.line - 1);\n\n    state.blkIndent = state.listIndent;\n    state.listIndent = oldListIndent;\n    state.tShift[startLine] = oldTShift;\n    state.sCount[startLine] = oldSCount;\n    state.tight = oldTight;\n\n    token        = state.push('list_item_close', 'li', -1);\n    token.markup = String.fromCharCode(markerCharCode);\n\n    nextLine = startLine = state.line;\n    itemLines[1] = nextLine;\n    contentStart = state.bMarks[startLine];\n\n    if (nextLine >= endLine) { break; }\n\n    //\n    // Try to check if list is terminated or continued.\n    //\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    // if it's indented more than 3 spaces, it should be a code block\n    if (state.sCount[startLine] - state.blkIndent >= 4) { break; }\n\n    // fail if terminating block found\n    terminate = false;\n    for (i = 0, l = terminatorRules.length; i < l; i++) {\n      if (terminatorRules[i](state, nextLine, endLine, true)) {\n        terminate = true;\n        break;\n      }\n    }\n    if (terminate) { break; }\n\n    // fail if list has another type\n    if (isOrdered) {\n      posAfterMarker = skipOrderedListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    } else {\n      posAfterMarker = skipBulletListMarker(state, nextLine);\n      if (posAfterMarker < 0) { break; }\n    }\n\n    if (markerCharCode !== state.src.charCodeAt(posAfterMarker - 1)) { break; }\n  }\n\n  // Finalize list\n  if (isOrdered) {\n    token = state.push('ordered_list_close', 'ol', -1);\n  } else {\n    token = state.push('bullet_list_close', 'ul', -1);\n  }\n  token.markup = String.fromCharCode(markerCharCode);\n\n  listLines[1] = nextLine;\n  state.line = nextLine;\n\n  state.parentType = oldParentType;\n\n  // mark paragraphs tight if needed\n  if (tight) {\n    markTightParagraphs(state, listTokIdx);\n  }\n\n  return true;\n};\n","module.exports=/[ \\xA0\\u1680\\u2000-\\u200A\\u2028\\u2029\\u202F\\u205F\\u3000]/","// Normalize input string\n\n'use strict';\n\n\n// https://spec.commonmark.org/0.29/#line-ending\nvar NEWLINES_RE  = /\\r\\n?|\\n/g;\nvar NULL_RE      = /\\0/g;\n\n\nmodule.exports = function normalize(state) {\n  var str;\n\n  // Normalize newlines\n  str = state.src.replace(NEWLINES_RE, '\\n');\n\n  // Replace NULL characters\n  str = str.replace(NULL_RE, '\\uFFFD');\n\n  state.src = str;\n};\n","/** internal\n * class ParserInline\n *\n * Tokenizes paragraph content.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\n////////////////////////////////////////////////////////////////////////////////\n// Parser rules\n\nvar _rules = [\n  [ 'text',            require('./rules_inline/text') ],\n  [ 'newline',         require('./rules_inline/newline') ],\n  [ 'escape',          require('./rules_inline/escape') ],\n  [ 'backticks',       require('./rules_inline/backticks') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').tokenize ],\n  [ 'emphasis',        require('./rules_inline/emphasis').tokenize ],\n  [ 'link',            require('./rules_inline/link') ],\n  [ 'image',           require('./rules_inline/image') ],\n  [ 'autolink',        require('./rules_inline/autolink') ],\n  [ 'html_inline',     require('./rules_inline/html_inline') ],\n  [ 'entity',          require('./rules_inline/entity') ]\n];\n\nvar _rules2 = [\n  [ 'balance_pairs',   require('./rules_inline/balance_pairs') ],\n  [ 'strikethrough',   require('./rules_inline/strikethrough').postProcess ],\n  [ 'emphasis',        require('./rules_inline/emphasis').postProcess ],\n  [ 'text_collapse',   require('./rules_inline/text_collapse') ]\n];\n\n\n/**\n * new ParserInline()\n **/\nfunction ParserInline() {\n  var i;\n\n  /**\n   * ParserInline#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of inline rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n\n  /**\n   * ParserInline#ruler2 -> Ruler\n   *\n   * [[Ruler]] instance. Second ruler used for post-processing\n   * (e.g. in emphasis-like rules).\n   **/\n  this.ruler2 = new Ruler();\n\n  for (i = 0; i < _rules2.length; i++) {\n    this.ruler2.push(_rules2[i][0], _rules2[i][1]);\n  }\n}\n\n\n// Skip single token by running all rules in validation mode;\n// returns `true` if any rule reported success\n//\nParserInline.prototype.skipToken = function (state) {\n  var ok, i, pos = state.pos,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      maxNesting = state.md.options.maxNesting,\n      cache = state.cache;\n\n\n  if (typeof cache[pos] !== 'undefined') {\n    state.pos = cache[pos];\n    return;\n  }\n\n  if (state.level < maxNesting) {\n    for (i = 0; i < len; i++) {\n      // Increment state.level and decrement it later to limit recursion.\n      // It's harmless to do here, because no tokens are created. But ideally,\n      // we'd need a separate private state variable for this purpose.\n      //\n      state.level++;\n      ok = rules[i](state, true);\n      state.level--;\n\n      if (ok) { break; }\n    }\n  } else {\n    // Too much nesting, just skip until the end of the paragraph.\n    //\n    // NOTE: this will cause links to behave incorrectly in the following case,\n    //       when an amount of `[` is exactly equal to `maxNesting + 1`:\n    //\n    //       [[[[[[[[[[[[[[[[[[[[[foo]()\n    //\n    // TODO: remove this workaround when CM standard will allow nested links\n    //       (we can replace it by preventing links from being parsed in\n    //       validation mode)\n    //\n    state.pos = state.posMax;\n  }\n\n  if (!ok) { state.pos++; }\n  cache[pos] = state.pos;\n};\n\n\n// Generate tokens for input range\n//\nParserInline.prototype.tokenize = function (state) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      end = state.posMax,\n      maxNesting = state.md.options.maxNesting;\n\n  while (state.pos < end) {\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.pos`\n    // - update `state.tokens`\n    // - return true\n\n    if (state.level < maxNesting) {\n      for (i = 0; i < len; i++) {\n        ok = rules[i](state, false);\n        if (ok) { break; }\n      }\n    }\n\n    if (ok) {\n      if (state.pos >= end) { break; }\n      continue;\n    }\n\n    state.pending += state.src[state.pos++];\n  }\n\n  if (state.pending) {\n    state.pushPending();\n  }\n};\n\n\n/**\n * ParserInline.parse(str, md, env, outTokens)\n *\n * Process input string and push inline tokens into `outTokens`\n **/\nParserInline.prototype.parse = function (str, md, env, outTokens) {\n  var i, rules, len;\n  var state = new this.State(str, md, env, outTokens);\n\n  this.tokenize(state);\n\n  rules = this.ruler2.getRules('');\n  len = rules.length;\n\n  for (i = 0; i < len; i++) {\n    rules[i](state);\n  }\n};\n\n\nParserInline.prototype.State = require('./rules_inline/state_inline');\n\n\nmodule.exports = ParserInline;\n","// Just a shortcut for bulk export\n'use strict';\n\n\nexports.parseLinkLabel       = require('./parse_link_label');\nexports.parseLinkDestination = require('./parse_link_destination');\nexports.parseLinkTitle       = require('./parse_link_title');\n","// Regexps to match html elements\n\n'use strict';\n\nvar attr_name     = '[a-zA-Z_:][a-zA-Z0-9:._-]*';\n\nvar unquoted      = '[^\"\\'=<>`\\\\x00-\\\\x20]+';\nvar single_quoted = \"'[^']*'\";\nvar double_quoted = '\"[^\"]*\"';\n\nvar attr_value  = '(?:' + unquoted + '|' + single_quoted + '|' + double_quoted + ')';\n\nvar attribute   = '(?:\\\\s+' + attr_name + '(?:\\\\s*=\\\\s*' + attr_value + ')?)';\n\nvar open_tag    = '<[A-Za-z][A-Za-z0-9\\\\-]*' + attribute + '*\\\\s*\\\\/?>';\n\nvar close_tag   = '<\\\\/[A-Za-z][A-Za-z0-9\\\\-]*\\\\s*>';\nvar comment     = '<!---->|<!--(?:-?[^>-])(?:-?[^-])*-->';\nvar processing  = '<[?].*?[?]>';\nvar declaration = '<![A-Z]+\\\\s+[^>]*>';\nvar cdata       = '<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>';\n\nvar HTML_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + '|' + comment +\n                        '|' + processing + '|' + declaration + '|' + cdata + ')');\nvar HTML_OPEN_CLOSE_TAG_RE = new RegExp('^(?:' + open_tag + '|' + close_tag + ')');\n\nmodule.exports.HTML_TAG_RE = HTML_TAG_RE;\nmodule.exports.HTML_OPEN_CLOSE_TAG_RE = HTML_OPEN_CLOSE_TAG_RE;\n","// Process html entity - &#123;, &#xAF;, &quot;, ...\n\n'use strict';\n\nvar entities          = require('../common/entities');\nvar has               = require('../common/utils').has;\nvar isValidEntityCode = require('../common/utils').isValidEntityCode;\nvar fromCodePoint     = require('../common/utils').fromCodePoint;\n\n\nvar DIGITAL_RE = /^&#((?:x[a-f0-9]{1,6}|[0-9]{1,7}));/i;\nvar NAMED_RE   = /^&([a-z][a-z0-9]{1,31});/i;\n\n\nmodule.exports = function entity(state, silent) {\n  var ch, code, match, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x26/* & */) { return false; }\n\n  if (pos + 1 < max) {\n    ch = state.src.charCodeAt(pos + 1);\n\n    if (ch === 0x23 /* # */) {\n      match = state.src.slice(pos).match(DIGITAL_RE);\n      if (match) {\n        if (!silent) {\n          code = match[1][0].toLowerCase() === 'x' ? parseInt(match[1].slice(1), 16) : parseInt(match[1], 10);\n          state.pending += isValidEntityCode(code) ? fromCodePoint(code) : fromCodePoint(0xFFFD);\n        }\n        state.pos += match[0].length;\n        return true;\n      }\n    } else {\n      match = state.src.slice(pos).match(NAMED_RE);\n      if (match) {\n        if (has(entities, match[1])) {\n          if (!silent) { state.pending += entities[match[1]]; }\n          state.pos += match[0].length;\n          return true;\n        }\n      }\n    }\n  }\n\n  if (!silent) { state.pending += '&'; }\n  state.pos++;\n  return true;\n};\n","// HTML block\n\n'use strict';\n\n\nvar block_names = require('../common/html_blocks');\nvar HTML_OPEN_CLOSE_TAG_RE = require('../common/html_re').HTML_OPEN_CLOSE_TAG_RE;\n\n// An array of opening and corresponding closing sequences for html tags,\n// last argument defines whether it can terminate a paragraph or not\n//\nvar HTML_SEQUENCES = [\n  [ /^<(script|pre|style)(?=(\\s|>|$))/i, /<\\/(script|pre|style)>/i, true ],\n  [ /^<!--/,        /-->/,   true ],\n  [ /^<\\?/,         /\\?>/,   true ],\n  [ /^<![A-Z]/,     />/,     true ],\n  [ /^<!\\[CDATA\\[/, /\\]\\]>/, true ],\n  [ new RegExp('^</?(' + block_names.join('|') + ')(?=(\\\\s|/?>|$))', 'i'), /^$/, true ],\n  [ new RegExp(HTML_OPEN_CLOSE_TAG_RE.source + '\\\\s*$'),  /^$/, false ]\n];\n\n\nmodule.exports = function html_block(state, startLine, endLine, silent) {\n  var i, nextLine, token, lineText,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (!state.md.options.html) { return false; }\n\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */) { return false; }\n\n  lineText = state.src.slice(pos, max);\n\n  for (i = 0; i < HTML_SEQUENCES.length; i++) {\n    if (HTML_SEQUENCES[i][0].test(lineText)) { break; }\n  }\n\n  if (i === HTML_SEQUENCES.length) { return false; }\n\n  if (silent) {\n    // true if this sequence can be a terminator, false otherwise\n    return HTML_SEQUENCES[i][2];\n  }\n\n  nextLine = startLine + 1;\n\n  // If we are here - we detected HTML block.\n  // Let's roll down till block end.\n  if (!HTML_SEQUENCES[i][1].test(lineText)) {\n    for (; nextLine < endLine; nextLine++) {\n      if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n      pos = state.bMarks[nextLine] + state.tShift[nextLine];\n      max = state.eMarks[nextLine];\n      lineText = state.src.slice(pos, max);\n\n      if (HTML_SEQUENCES[i][1].test(lineText)) {\n        if (lineText.length !== 0) { nextLine++; }\n        break;\n      }\n    }\n  }\n\n  state.line = nextLine;\n\n  token         = state.push('html_block', '', 0);\n  token.map     = [ startLine, nextLine ];\n  token.content = state.getLines(startLine, nextLine, state.blkIndent, true);\n\n  return true;\n};\n","module.exports=/[\\xAD\\u0600-\\u0605\\u061C\\u06DD\\u070F\\u08E2\\u180E\\u200B-\\u200F\\u202A-\\u202E\\u2060-\\u2064\\u2066-\\u206F\\uFEFF\\uFFF9-\\uFFFB]|\\uD804[\\uDCBD\\uDCCD]|\\uD82F[\\uDCA0-\\uDCA3]|\\uD834[\\uDD73-\\uDD7A]|\\uDB40[\\uDC01\\uDC20-\\uDC7F]/","// Process escaped chars and hardbreaks\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\nvar ESCAPED = [];\n\nfor (var i = 0; i < 256; i++) { ESCAPED.push(0); }\n\n'\\\\!\"#$%&\\'()*+,./:;<=>?@[]^_`{|}~-'\n  .split('').forEach(function (ch) { ESCAPED[ch.charCodeAt(0)] = 1; });\n\n\nmodule.exports = function escape(state, silent) {\n  var ch, pos = state.pos, max = state.posMax;\n\n  if (state.src.charCodeAt(pos) !== 0x5C/* \\ */) { return false; }\n\n  pos++;\n\n  if (pos < max) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch < 256 && ESCAPED[ch] !== 0) {\n      if (!silent) { state.pending += state.src[pos]; }\n      state.pos += 2;\n      return true;\n    }\n\n    if (ch === 0x0A) {\n      if (!silent) {\n        state.push('hardbreak', 'br', 0);\n      }\n\n      pos++;\n      // skip leading whitespaces from next line\n      while (pos < max) {\n        ch = state.src.charCodeAt(pos);\n        if (!isSpace(ch)) { break; }\n        pos++;\n      }\n\n      state.pos = pos;\n      return true;\n    }\n  }\n\n  if (!silent) { state.pending += '\\\\'; }\n  state.pos++;\n  return true;\n};\n","// Core state object\n//\n'use strict';\n\nvar Token = require('../token');\n\n\nfunction StateCore(src, md, env) {\n  this.src = src;\n  this.env = env;\n  this.tokens = [];\n  this.inlineMode = false;\n  this.md = md; // link to parser instance\n}\n\n// re-export Token class to use in core rules\nStateCore.prototype.Token = Token;\n\n\nmodule.exports = StateCore;\n","/** internal\n * class ParserBlock\n *\n * Block-level tokenizer.\n **/\n'use strict';\n\n\nvar Ruler           = require('./ruler');\n\n\nvar _rules = [\n  // First 2 params - rule name & source. Secondary array - list of rules,\n  // which can be terminated by this one.\n  [ 'table',      require('./rules_block/table'),      [ 'paragraph', 'reference' ] ],\n  [ 'code',       require('./rules_block/code') ],\n  [ 'fence',      require('./rules_block/fence'),      [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'blockquote', require('./rules_block/blockquote'), [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'hr',         require('./rules_block/hr'),         [ 'paragraph', 'reference', 'blockquote', 'list' ] ],\n  [ 'list',       require('./rules_block/list'),       [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'reference',  require('./rules_block/reference') ],\n  [ 'heading',    require('./rules_block/heading'),    [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'lheading',   require('./rules_block/lheading') ],\n  [ 'html_block', require('./rules_block/html_block'), [ 'paragraph', 'reference', 'blockquote' ] ],\n  [ 'paragraph',  require('./rules_block/paragraph') ]\n];\n\n\n/**\n * new ParserBlock()\n **/\nfunction ParserBlock() {\n  /**\n   * ParserBlock#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of block rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1], { alt: (_rules[i][2] || []).slice() });\n  }\n}\n\n\n// Generate tokens for input range\n//\nParserBlock.prototype.tokenize = function (state, startLine, endLine) {\n  var ok, i,\n      rules = this.ruler.getRules(''),\n      len = rules.length,\n      line = startLine,\n      hasEmptyLines = false,\n      maxNesting = state.md.options.maxNesting;\n\n  while (line < endLine) {\n    state.line = line = state.skipEmptyLines(line);\n    if (line >= endLine) { break; }\n\n    // Termination condition for nested calls.\n    // Nested calls currently used for blockquotes & lists\n    if (state.sCount[line] < state.blkIndent) { break; }\n\n    // If nesting level exceeded - skip tail to the end. That's not ordinary\n    // situation and we should not care about content.\n    if (state.level >= maxNesting) {\n      state.line = endLine;\n      break;\n    }\n\n    // Try all possible rules.\n    // On success, rule should:\n    //\n    // - update `state.line`\n    // - update `state.tokens`\n    // - return true\n\n    for (i = 0; i < len; i++) {\n      ok = rules[i](state, line, endLine, false);\n      if (ok) { break; }\n    }\n\n    // set state.tight if we had an empty line before current tag\n    // i.e. latest empty line should not count\n    state.tight = !hasEmptyLines;\n\n    // paragraph might \"eat\" one newline after it in nested lists\n    if (state.isEmpty(state.line - 1)) {\n      hasEmptyLines = true;\n    }\n\n    line = state.line;\n\n    if (line < endLine && state.isEmpty(line)) {\n      hasEmptyLines = true;\n      line++;\n      state.line = line;\n    }\n  }\n};\n\n\n/**\n * ParserBlock.parse(str, md, env, outTokens)\n *\n * Process input string and push block tokens into `outTokens`\n **/\nParserBlock.prototype.parse = function (src, md, env, outTokens) {\n  var state;\n\n  if (!src) { return; }\n\n  state = new this.State(src, md, env, outTokens);\n\n  this.tokenize(state, state.line, state.lineMax);\n};\n\n\nParserBlock.prototype.State = require('./rules_block/state_block');\n\n\nmodule.exports = ParserBlock;\n","module.exports=/[!-#%-\\*,-\\/:;\\?@\\[-\\]_\\{\\}\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166D\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4E\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]|\\uD800[\\uDD00-\\uDD02\\uDF9F\\uDFD0]|\\uD801\\uDD6F|\\uD802[\\uDC57\\uDD1F\\uDD3F\\uDE50-\\uDE58\\uDE7F\\uDEF0-\\uDEF6\\uDF39-\\uDF3F\\uDF99-\\uDF9C]|\\uD803[\\uDF55-\\uDF59]|\\uD804[\\uDC47-\\uDC4D\\uDCBB\\uDCBC\\uDCBE-\\uDCC1\\uDD40-\\uDD43\\uDD74\\uDD75\\uDDC5-\\uDDC8\\uDDCD\\uDDDB\\uDDDD-\\uDDDF\\uDE38-\\uDE3D\\uDEA9]|\\uD805[\\uDC4B-\\uDC4F\\uDC5B\\uDC5D\\uDCC6\\uDDC1-\\uDDD7\\uDE41-\\uDE43\\uDE60-\\uDE6C\\uDF3C-\\uDF3E]|\\uD806[\\uDC3B\\uDE3F-\\uDE46\\uDE9A-\\uDE9C\\uDE9E-\\uDEA2]|\\uD807[\\uDC41-\\uDC45\\uDC70\\uDC71\\uDEF7\\uDEF8]|\\uD809[\\uDC70-\\uDC74]|\\uD81A[\\uDE6E\\uDE6F\\uDEF5\\uDF37-\\uDF3B\\uDF44]|\\uD81B[\\uDE97-\\uDE9A]|\\uD82F\\uDC9F|\\uD836[\\uDE87-\\uDE8B]|\\uD83A[\\uDD5E\\uDD5F]/","/**\n * class Renderer\n *\n * Generates HTML from parsed token stream. Each instance has independent\n * copy of rules. Those can be rewritten with ease. Also, you can add new\n * rules if you create plugin and adds new token types.\n **/\n'use strict';\n\n\nvar assign          = require('./common/utils').assign;\nvar unescapeAll     = require('./common/utils').unescapeAll;\nvar escapeHtml      = require('./common/utils').escapeHtml;\n\n\n////////////////////////////////////////////////////////////////////////////////\n\nvar default_rules = {};\n\n\ndefault_rules.code_inline = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<code' + slf.renderAttrs(token) + '>' +\n          escapeHtml(tokens[idx].content) +\n          '</code>';\n};\n\n\ndefault_rules.code_block = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  return  '<pre' + slf.renderAttrs(token) + '><code>' +\n          escapeHtml(tokens[idx].content) +\n          '</code></pre>\\n';\n};\n\n\ndefault_rules.fence = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx],\n      info = token.info ? unescapeAll(token.info).trim() : '',\n      langName = '',\n      highlighted, i, tmpAttrs, tmpToken;\n\n  if (info) {\n    langName = info.split(/\\s+/g)[0];\n  }\n\n  if (options.highlight) {\n    highlighted = options.highlight(token.content, langName) || escapeHtml(token.content);\n  } else {\n    highlighted = escapeHtml(token.content);\n  }\n\n  if (highlighted.indexOf('<pre') === 0) {\n    return highlighted + '\\n';\n  }\n\n  // If language exists, inject class gently, without modifying original token.\n  // May be, one day we will add .clone() for token and simplify this part, but\n  // now we prefer to keep things local.\n  if (info) {\n    i        = token.attrIndex('class');\n    tmpAttrs = token.attrs ? token.attrs.slice() : [];\n\n    if (i < 0) {\n      tmpAttrs.push([ 'class', options.langPrefix + langName ]);\n    } else {\n      tmpAttrs[i][1] += ' ' + options.langPrefix + langName;\n    }\n\n    // Fake token just to render attributes\n    tmpToken = {\n      attrs: tmpAttrs\n    };\n\n    return  '<pre><code' + slf.renderAttrs(tmpToken) + '>'\n          + highlighted\n          + '</code></pre>\\n';\n  }\n\n\n  return  '<pre><code' + slf.renderAttrs(token) + '>'\n        + highlighted\n        + '</code></pre>\\n';\n};\n\n\ndefault_rules.image = function (tokens, idx, options, env, slf) {\n  var token = tokens[idx];\n\n  // \"alt\" attr MUST be set, even if empty. Because it's mandatory and\n  // should be placed on proper position for tests.\n  //\n  // Replace content with actual value\n\n  token.attrs[token.attrIndex('alt')][1] =\n    slf.renderInlineAsText(token.children, options, env);\n\n  return slf.renderToken(tokens, idx, options);\n};\n\n\ndefault_rules.hardbreak = function (tokens, idx, options /*, env */) {\n  return options.xhtmlOut ? '<br />\\n' : '<br>\\n';\n};\ndefault_rules.softbreak = function (tokens, idx, options /*, env */) {\n  return options.breaks ? (options.xhtmlOut ? '<br />\\n' : '<br>\\n') : '\\n';\n};\n\n\ndefault_rules.text = function (tokens, idx /*, options, env */) {\n  return escapeHtml(tokens[idx].content);\n};\n\n\ndefault_rules.html_block = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\ndefault_rules.html_inline = function (tokens, idx /*, options, env */) {\n  return tokens[idx].content;\n};\n\n\n/**\n * new Renderer()\n *\n * Creates new [[Renderer]] instance and fill [[Renderer#rules]] with defaults.\n **/\nfunction Renderer() {\n\n  /**\n   * Renderer#rules -> Object\n   *\n   * Contains render rules for tokens. Can be updated and extended.\n   *\n   * ##### Example\n   *\n   * ```javascript\n   * var md = require('markdown-it')();\n   *\n   * md.renderer.rules.strong_open  = function () { return '<b>'; };\n   * md.renderer.rules.strong_close = function () { return '</b>'; };\n   *\n   * var result = md.renderInline(...);\n   * ```\n   *\n   * Each rule is called as independent static function with fixed signature:\n   *\n   * ```javascript\n   * function my_token_render(tokens, idx, options, env, renderer) {\n   *   // ...\n   *   return renderedHTML;\n   * }\n   * ```\n   *\n   * See [source code](https://github.com/markdown-it/markdown-it/blob/master/lib/renderer.js)\n   * for more details and examples.\n   **/\n  this.rules = assign({}, default_rules);\n}\n\n\n/**\n * Renderer.renderAttrs(token) -> String\n *\n * Render token attributes to string.\n **/\nRenderer.prototype.renderAttrs = function renderAttrs(token) {\n  var i, l, result;\n\n  if (!token.attrs) { return ''; }\n\n  result = '';\n\n  for (i = 0, l = token.attrs.length; i < l; i++) {\n    result += ' ' + escapeHtml(token.attrs[i][0]) + '=\"' + escapeHtml(token.attrs[i][1]) + '\"';\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.renderToken(tokens, idx, options) -> String\n * - tokens (Array): list of tokens\n * - idx (Numbed): token index to render\n * - options (Object): params of parser instance\n *\n * Default token renderer. Can be overriden by custom function\n * in [[Renderer#rules]].\n **/\nRenderer.prototype.renderToken = function renderToken(tokens, idx, options) {\n  var nextToken,\n      result = '',\n      needLf = false,\n      token = tokens[idx];\n\n  // Tight list paragraphs\n  if (token.hidden) {\n    return '';\n  }\n\n  // Insert a newline between hidden paragraph and subsequent opening\n  // block-level tag.\n  //\n  // For example, here we should insert a newline before blockquote:\n  //  - a\n  //    >\n  //\n  if (token.block && token.nesting !== -1 && idx && tokens[idx - 1].hidden) {\n    result += '\\n';\n  }\n\n  // Add token name, e.g. `<img`\n  result += (token.nesting === -1 ? '</' : '<') + token.tag;\n\n  // Encode attributes, e.g. `<img src=\"foo\"`\n  result += this.renderAttrs(token);\n\n  // Add a slash for self-closing tags, e.g. `<img src=\"foo\" /`\n  if (token.nesting === 0 && options.xhtmlOut) {\n    result += ' /';\n  }\n\n  // Check if we need to add a newline after this tag\n  if (token.block) {\n    needLf = true;\n\n    if (token.nesting === 1) {\n      if (idx + 1 < tokens.length) {\n        nextToken = tokens[idx + 1];\n\n        if (nextToken.type === 'inline' || nextToken.hidden) {\n          // Block-level tag containing an inline tag.\n          //\n          needLf = false;\n\n        } else if (nextToken.nesting === -1 && nextToken.tag === token.tag) {\n          // Opening tag + closing tag of the same type. E.g. `<li></li>`.\n          //\n          needLf = false;\n        }\n      }\n    }\n  }\n\n  result += needLf ? '>\\n' : '>';\n\n  return result;\n};\n\n\n/**\n * Renderer.renderInline(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * The same as [[Renderer.render]], but for single token of `inline` type.\n **/\nRenderer.prototype.renderInline = function (tokens, options, env) {\n  var type,\n      result = '',\n      rules = this.rules;\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (typeof rules[type] !== 'undefined') {\n      result += rules[type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options);\n    }\n  }\n\n  return result;\n};\n\n\n/** internal\n * Renderer.renderInlineAsText(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Special kludge for image `alt` attributes to conform CommonMark spec.\n * Don't try to use it! Spec requires to show `alt` content with stripped markup,\n * instead of simple escaping.\n **/\nRenderer.prototype.renderInlineAsText = function (tokens, options, env) {\n  var result = '';\n\n  for (var i = 0, len = tokens.length; i < len; i++) {\n    if (tokens[i].type === 'text') {\n      result += tokens[i].content;\n    } else if (tokens[i].type === 'image') {\n      result += this.renderInlineAsText(tokens[i].children, options, env);\n    }\n  }\n\n  return result;\n};\n\n\n/**\n * Renderer.render(tokens, options, env) -> String\n * - tokens (Array): list on block tokens to renter\n * - options (Object): params of parser instance\n * - env (Object): additional data from parsed input (references, for example)\n *\n * Takes token stream and generates HTML. Probably, you will never need to call\n * this method directly.\n **/\nRenderer.prototype.render = function (tokens, options, env) {\n  var i, len, type,\n      result = '',\n      rules = this.rules;\n\n  for (i = 0, len = tokens.length; i < len; i++) {\n    type = tokens[i].type;\n\n    if (type === 'inline') {\n      result += this.renderInline(tokens[i].children, options, env);\n    } else if (typeof rules[type] !== 'undefined') {\n      result += rules[tokens[i].type](tokens, i, options, env, this);\n    } else {\n      result += this.renderToken(tokens, i, options, env);\n    }\n  }\n\n  return result;\n};\n\nmodule.exports = Renderer;\n","// Parse link title\n//\n'use strict';\n\n\nvar unescapeAll = require('../common/utils').unescapeAll;\n\n\nmodule.exports = function parseLinkTitle(str, pos, max) {\n  var code,\n      marker,\n      lines = 0,\n      start = pos,\n      result = {\n        ok: false,\n        pos: 0,\n        lines: 0,\n        str: ''\n      };\n\n  if (pos >= max) { return result; }\n\n  marker = str.charCodeAt(pos);\n\n  if (marker !== 0x22 /* \" */ && marker !== 0x27 /* ' */ && marker !== 0x28 /* ( */) { return result; }\n\n  pos++;\n\n  // if opening marker is \"(\", switch it to closing marker \")\"\n  if (marker === 0x28) { marker = 0x29; }\n\n  while (pos < max) {\n    code = str.charCodeAt(pos);\n    if (code === marker) {\n      result.pos = pos + 1;\n      result.lines = lines;\n      result.str = unescapeAll(str.slice(start + 1, pos));\n      result.ok = true;\n      return result;\n    } else if (code === 0x0A) {\n      lines++;\n    } else if (code === 0x5C /* \\ */ && pos + 1 < max) {\n      pos++;\n      if (str.charCodeAt(pos) === 0x0A) {\n        lines++;\n      }\n    }\n\n    pos++;\n  }\n\n  return result;\n};\n","// Parser state class\n\n'use strict';\n\nvar Token = require('../token');\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction StateBlock(src, md, env, tokens) {\n  var ch, s, start, pos, len, indent, offset, indent_found;\n\n  this.src = src;\n\n  // link to parser instance\n  this.md     = md;\n\n  this.env = env;\n\n  //\n  // Internal state vartiables\n  //\n\n  this.tokens = tokens;\n\n  this.bMarks = [];  // line begin offsets for fast jumps\n  this.eMarks = [];  // line end offsets for fast jumps\n  this.tShift = [];  // offsets of the first non-space characters (tabs not expanded)\n  this.sCount = [];  // indents for each line (tabs expanded)\n\n  // An amount of virtual spaces (tabs expanded) between beginning\n  // of each line (bMarks) and real beginning of that line.\n  //\n  // It exists only as a hack because blockquotes override bMarks\n  // losing information in the process.\n  //\n  // It's used only when expanding tabs, you can think about it as\n  // an initial tab length, e.g. bsCount=21 applied to string `\\t123`\n  // means first tab should be expanded to 4-21%4 === 3 spaces.\n  //\n  this.bsCount = [];\n\n  // block parser variables\n  this.blkIndent  = 0; // required block content indent (for example, if we are\n                       // inside a list, it would be positioned after list marker)\n  this.line       = 0; // line index in src\n  this.lineMax    = 0; // lines count\n  this.tight      = false;  // loose/tight mode for lists\n  this.ddIndent   = -1; // indent of the current dd block (-1 if there isn't any)\n  this.listIndent = -1; // indent of the current list block (-1 if there isn't any)\n\n  // can be 'blockquote', 'list', 'root', 'paragraph' or 'reference'\n  // used in lists to determine if they interrupt a paragraph\n  this.parentType = 'root';\n\n  this.level = 0;\n\n  // renderer\n  this.result = '';\n\n  // Create caches\n  // Generate markers.\n  s = this.src;\n  indent_found = false;\n\n  for (start = pos = indent = offset = 0, len = s.length; pos < len; pos++) {\n    ch = s.charCodeAt(pos);\n\n    if (!indent_found) {\n      if (isSpace(ch)) {\n        indent++;\n\n        if (ch === 0x09) {\n          offset += 4 - offset % 4;\n        } else {\n          offset++;\n        }\n        continue;\n      } else {\n        indent_found = true;\n      }\n    }\n\n    if (ch === 0x0A || pos === len - 1) {\n      if (ch !== 0x0A) { pos++; }\n      this.bMarks.push(start);\n      this.eMarks.push(pos);\n      this.tShift.push(indent);\n      this.sCount.push(offset);\n      this.bsCount.push(0);\n\n      indent_found = false;\n      indent = 0;\n      offset = 0;\n      start = pos + 1;\n    }\n  }\n\n  // Push fake entry to simplify cache bounds checks\n  this.bMarks.push(s.length);\n  this.eMarks.push(s.length);\n  this.tShift.push(0);\n  this.sCount.push(0);\n  this.bsCount.push(0);\n\n  this.lineMax = this.bMarks.length - 1; // don't count last fake line\n}\n\n// Push new token to \"stream\".\n//\nStateBlock.prototype.push = function (type, tag, nesting) {\n  var token = new Token(type, tag, nesting);\n  token.block = true;\n\n  if (nesting < 0) this.level--; // closing tag\n  token.level = this.level;\n  if (nesting > 0) this.level++; // opening tag\n\n  this.tokens.push(token);\n  return token;\n};\n\nStateBlock.prototype.isEmpty = function isEmpty(line) {\n  return this.bMarks[line] + this.tShift[line] >= this.eMarks[line];\n};\n\nStateBlock.prototype.skipEmptyLines = function skipEmptyLines(from) {\n  for (var max = this.lineMax; from < max; from++) {\n    if (this.bMarks[from] + this.tShift[from] < this.eMarks[from]) {\n      break;\n    }\n  }\n  return from;\n};\n\n// Skip spaces from given position.\nStateBlock.prototype.skipSpaces = function skipSpaces(pos) {\n  var ch;\n\n  for (var max = this.src.length; pos < max; pos++) {\n    ch = this.src.charCodeAt(pos);\n    if (!isSpace(ch)) { break; }\n  }\n  return pos;\n};\n\n// Skip spaces from given position in reverse.\nStateBlock.prototype.skipSpacesBack = function skipSpacesBack(pos, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (!isSpace(this.src.charCodeAt(--pos))) { return pos + 1; }\n  }\n  return pos;\n};\n\n// Skip char codes from given position\nStateBlock.prototype.skipChars = function skipChars(pos, code) {\n  for (var max = this.src.length; pos < max; pos++) {\n    if (this.src.charCodeAt(pos) !== code) { break; }\n  }\n  return pos;\n};\n\n// Skip char codes reverse from given position - 1\nStateBlock.prototype.skipCharsBack = function skipCharsBack(pos, code, min) {\n  if (pos <= min) { return pos; }\n\n  while (pos > min) {\n    if (code !== this.src.charCodeAt(--pos)) { return pos + 1; }\n  }\n  return pos;\n};\n\n// cut lines range from source.\nStateBlock.prototype.getLines = function getLines(begin, end, indent, keepLastLF) {\n  var i, lineIndent, ch, first, last, queue, lineStart,\n      line = begin;\n\n  if (begin >= end) {\n    return '';\n  }\n\n  queue = new Array(end - begin);\n\n  for (i = 0; line < end; line++, i++) {\n    lineIndent = 0;\n    lineStart = first = this.bMarks[line];\n\n    if (line + 1 < end || keepLastLF) {\n      // No need for bounds check because we have fake entry on tail.\n      last = this.eMarks[line] + 1;\n    } else {\n      last = this.eMarks[line];\n    }\n\n    while (first < last && lineIndent < indent) {\n      ch = this.src.charCodeAt(first);\n\n      if (isSpace(ch)) {\n        if (ch === 0x09) {\n          lineIndent += 4 - (lineIndent + this.bsCount[line]) % 4;\n        } else {\n          lineIndent++;\n        }\n      } else if (first - lineStart < this.tShift[line]) {\n        // patched tShift masked characters to look like spaces (blockquotes, list markers)\n        lineIndent++;\n      } else {\n        break;\n      }\n\n      first++;\n    }\n\n    if (lineIndent > indent) {\n      // partially expanding tabs in code blocks, e.g '\\t\\tfoobar'\n      // with indent=2 becomes '  \\tfoobar'\n      queue[i] = new Array(lineIndent - indent + 1).join(' ') + this.src.slice(first, last);\n    } else {\n      queue[i] = this.src.slice(first, last);\n    }\n  }\n\n  return queue.join('');\n};\n\n// re-export Token class to use in block rules\nStateBlock.prototype.Token = Token;\n\n\nmodule.exports = StateBlock;\n","// For each opening emphasis-like marker find a matching closing one\n//\n'use strict';\n\n\nfunction processDelimiters(state, delimiters) {\n  var closerIdx, openerIdx, closer, opener, minOpenerIdx, newMinOpenerIdx,\n      isOddMatch, lastJump,\n      openersBottom = {},\n      max = delimiters.length;\n\n  for (closerIdx = 0; closerIdx < max; closerIdx++) {\n    closer = delimiters[closerIdx];\n\n    // Length is only used for emphasis-specific \"rule of 3\",\n    // if it's not defined (in strikethrough or 3rd party plugins),\n    // we can default it to 0 to disable those checks.\n    //\n    closer.length = closer.length || 0;\n\n    if (!closer.close) continue;\n\n    // Previously calculated lower bounds (previous fails)\n    // for each marker and each delimiter length modulo 3.\n    if (!openersBottom.hasOwnProperty(closer.marker)) {\n      openersBottom[closer.marker] = [ -1, -1, -1 ];\n    }\n\n    minOpenerIdx = openersBottom[closer.marker][closer.length % 3];\n    newMinOpenerIdx = -1;\n\n    openerIdx = closerIdx - closer.jump - 1;\n\n    for (; openerIdx > minOpenerIdx; openerIdx -= opener.jump + 1) {\n      opener = delimiters[openerIdx];\n\n      if (opener.marker !== closer.marker) continue;\n\n      if (newMinOpenerIdx === -1) newMinOpenerIdx = openerIdx;\n\n      if (opener.open &&\n          opener.end < 0 &&\n          opener.level === closer.level) {\n\n        isOddMatch = false;\n\n        // from spec:\n        //\n        // If one of the delimiters can both open and close emphasis, then the\n        // sum of the lengths of the delimiter runs containing the opening and\n        // closing delimiters must not be a multiple of 3 unless both lengths\n        // are multiples of 3.\n        //\n        if (opener.close || closer.open) {\n          if ((opener.length + closer.length) % 3 === 0) {\n            if (opener.length % 3 !== 0 || closer.length % 3 !== 0) {\n              isOddMatch = true;\n            }\n          }\n        }\n\n        if (!isOddMatch) {\n          // If previous delimiter cannot be an opener, we can safely skip\n          // the entire sequence in future checks. This is required to make\n          // sure algorithm has linear complexity (see *_*_*_*_*_... case).\n          //\n          lastJump = openerIdx > 0 && !delimiters[openerIdx - 1].open ?\n            delimiters[openerIdx - 1].jump + 1 :\n            0;\n\n          closer.jump  = closerIdx - openerIdx + lastJump;\n          closer.open  = false;\n          opener.end   = closerIdx;\n          opener.jump  = lastJump;\n          opener.close = false;\n          newMinOpenerIdx = -1;\n          break;\n        }\n      }\n    }\n\n    if (newMinOpenerIdx !== -1) {\n      // If match for this delimiter run failed, we want to set lower bound for\n      // future lookups. This is required to make sure algorithm has linear\n      // complexity.\n      //\n      // See details here:\n      // https://github.com/commonmark/cmark/issues/178#issuecomment-270417442\n      //\n      openersBottom[closer.marker][(closer.length || 0) % 3] = newMinOpenerIdx;\n    }\n  }\n}\n\n\nmodule.exports = function link_pairs(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  processDelimiters(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      processDelimiters(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// GFM table, non-standard\n\n'use strict';\n\nvar isSpace = require('../common/utils').isSpace;\n\n\nfunction getLine(state, line) {\n  var pos = state.bMarks[line] + state.blkIndent,\n      max = state.eMarks[line];\n\n  return state.src.substr(pos, max - pos);\n}\n\nfunction escapedSplit(str) {\n  var result = [],\n      pos = 0,\n      max = str.length,\n      ch,\n      escapes = 0,\n      lastPos = 0,\n      backTicked = false,\n      lastBackTick = 0;\n\n  ch  = str.charCodeAt(pos);\n\n  while (pos < max) {\n    if (ch === 0x60/* ` */) {\n      if (backTicked) {\n        // make \\` close code sequence, but not open it;\n        // the reason is: `\\` is correct code block\n        backTicked = false;\n        lastBackTick = pos;\n      } else if (escapes % 2 === 0) {\n        backTicked = true;\n        lastBackTick = pos;\n      }\n    } else if (ch === 0x7c/* | */ && (escapes % 2 === 0) && !backTicked) {\n      result.push(str.substring(lastPos, pos));\n      lastPos = pos + 1;\n    }\n\n    if (ch === 0x5c/* \\ */) {\n      escapes++;\n    } else {\n      escapes = 0;\n    }\n\n    pos++;\n\n    // If there was an un-closed backtick, go back to just after\n    // the last backtick, but as if it was a normal character\n    if (pos === max && backTicked) {\n      backTicked = false;\n      pos = lastBackTick + 1;\n    }\n\n    ch = str.charCodeAt(pos);\n  }\n\n  result.push(str.substring(lastPos));\n\n  return result;\n}\n\n\nmodule.exports = function table(state, startLine, endLine, silent) {\n  var ch, lineText, pos, i, nextLine, columns, columnCount, token,\n      aligns, t, tableLines, tbodyLines;\n\n  // should have at least two lines\n  if (startLine + 2 > endLine) { return false; }\n\n  nextLine = startLine + 1;\n\n  if (state.sCount[nextLine] < state.blkIndent) { return false; }\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[nextLine] - state.blkIndent >= 4) { return false; }\n\n  // first character of the second line should be '|', '-', ':',\n  // and no other characters are allowed but spaces;\n  // basically, this is the equivalent of /^[-:|][-:|\\s]*$/ regexp\n\n  pos = state.bMarks[nextLine] + state.tShift[nextLine];\n  if (pos >= state.eMarks[nextLine]) { return false; }\n\n  ch = state.src.charCodeAt(pos++);\n  if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */) { return false; }\n\n  while (pos < state.eMarks[nextLine]) {\n    ch = state.src.charCodeAt(pos);\n\n    if (ch !== 0x7C/* | */ && ch !== 0x2D/* - */ && ch !== 0x3A/* : */ && !isSpace(ch)) { return false; }\n\n    pos++;\n  }\n\n  lineText = getLine(state, startLine + 1);\n\n  columns = lineText.split('|');\n  aligns = [];\n  for (i = 0; i < columns.length; i++) {\n    t = columns[i].trim();\n    if (!t) {\n      // allow empty columns before and after table, but not in between columns;\n      // e.g. allow ` |---| `, disallow ` ---||--- `\n      if (i === 0 || i === columns.length - 1) {\n        continue;\n      } else {\n        return false;\n      }\n    }\n\n    if (!/^:?-+:?$/.test(t)) { return false; }\n    if (t.charCodeAt(t.length - 1) === 0x3A/* : */) {\n      aligns.push(t.charCodeAt(0) === 0x3A/* : */ ? 'center' : 'right');\n    } else if (t.charCodeAt(0) === 0x3A/* : */) {\n      aligns.push('left');\n    } else {\n      aligns.push('');\n    }\n  }\n\n  lineText = getLine(state, startLine).trim();\n  if (lineText.indexOf('|') === -1) { return false; }\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n  columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n  // header row will define an amount of columns in the entire table,\n  // and align row shouldn't be smaller than that (the rest of the rows can)\n  columnCount = columns.length;\n  if (columnCount > aligns.length) { return false; }\n\n  if (silent) { return true; }\n\n  token     = state.push('table_open', 'table', 1);\n  token.map = tableLines = [ startLine, 0 ];\n\n  token     = state.push('thead_open', 'thead', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  token     = state.push('tr_open', 'tr', 1);\n  token.map = [ startLine, startLine + 1 ];\n\n  for (i = 0; i < columns.length; i++) {\n    token          = state.push('th_open', 'th', 1);\n    token.map      = [ startLine, startLine + 1 ];\n    if (aligns[i]) {\n      token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n    }\n\n    token          = state.push('inline', '', 0);\n    token.content  = columns[i].trim();\n    token.map      = [ startLine, startLine + 1 ];\n    token.children = [];\n\n    token          = state.push('th_close', 'th', -1);\n  }\n\n  token     = state.push('tr_close', 'tr', -1);\n  token     = state.push('thead_close', 'thead', -1);\n\n  token     = state.push('tbody_open', 'tbody', 1);\n  token.map = tbodyLines = [ startLine + 2, 0 ];\n\n  for (nextLine = startLine + 2; nextLine < endLine; nextLine++) {\n    if (state.sCount[nextLine] < state.blkIndent) { break; }\n\n    lineText = getLine(state, nextLine).trim();\n    if (lineText.indexOf('|') === -1) { break; }\n    if (state.sCount[nextLine] - state.blkIndent >= 4) { break; }\n    columns = escapedSplit(lineText.replace(/^\\||\\|$/g, ''));\n\n    token = state.push('tr_open', 'tr', 1);\n    for (i = 0; i < columnCount; i++) {\n      token          = state.push('td_open', 'td', 1);\n      if (aligns[i]) {\n        token.attrs  = [ [ 'style', 'text-align:' + aligns[i] ] ];\n      }\n\n      token          = state.push('inline', '', 0);\n      token.content  = columns[i] ? columns[i].trim() : '';\n      token.children = [];\n\n      token          = state.push('td_close', 'td', -1);\n    }\n    token = state.push('tr_close', 'tr', -1);\n  }\n  token = state.push('tbody_close', 'tbody', -1);\n  token = state.push('table_close', 'table', -1);\n\n  tableLines[1] = tbodyLines[1] = nextLine;\n  state.line = nextLine;\n  return true;\n};\n","// markdown-it default options\n\n'use strict';\n\n\nmodule.exports = {\n  options: {\n    html:         false,        // Enable HTML tags in source\n    xhtmlOut:     false,        // Use '/' to close single tags (<br />)\n    breaks:       false,        // Convert '\\n' in paragraphs into <br>\n    langPrefix:   'language-',  // CSS language prefix for fenced blocks\n    linkify:      false,        // autoconvert URL-like texts to links\n\n    // Enable some language-neutral replacements + quotes beautification\n    typographer:  false,\n\n    // Double + single quotes replacement pairs, when typographer enabled,\n    // and smartquotes on. Could be either a String or an Array.\n    //\n    // For example, you can use '«»„“' for Russian, '„“‚‘' for German,\n    // and ['«\\xA0', '\\xA0»', '‹\\xA0', '\\xA0›'] for French (including nbsp).\n    quotes: '\\u201c\\u201d\\u2018\\u2019', /* “”‘’ */\n\n    // Highlighter function. Should return escaped HTML,\n    // or '' if the source string is not changed and should be escaped externaly.\n    // If result starts with <pre... internal wrapper is skipped.\n    //\n    // function (/*str, lang*/) { return ''; }\n    //\n    highlight: null,\n\n    maxNesting:   100            // Internal protection, recursion limit\n  },\n\n  components: {\n\n    core: {},\n    block: {},\n    inline: {}\n  }\n};\n","\n'use strict';\n\n\n/* eslint-disable no-bitwise */\n\nvar decodeCache = {};\n\nfunction getDecodeCache(exclude) {\n  var i, ch, cache = decodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = decodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n    cache.push(ch);\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    ch = exclude.charCodeAt(i);\n    cache[ch] = '%' + ('0' + ch.toString(16).toUpperCase()).slice(-2);\n  }\n\n  return cache;\n}\n\n\n// Decode percent-encoded string.\n//\nfunction decode(string, exclude) {\n  var cache;\n\n  if (typeof exclude !== 'string') {\n    exclude = decode.defaultChars;\n  }\n\n  cache = getDecodeCache(exclude);\n\n  return string.replace(/(%[a-f0-9]{2})+/gi, function(seq) {\n    var i, l, b1, b2, b3, b4, chr,\n        result = '';\n\n    for (i = 0, l = seq.length; i < l; i += 3) {\n      b1 = parseInt(seq.slice(i + 1, i + 3), 16);\n\n      if (b1 < 0x80) {\n        result += cache[b1];\n        continue;\n      }\n\n      if ((b1 & 0xE0) === 0xC0 && (i + 3 < l)) {\n        // 110xxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n\n        if ((b2 & 0xC0) === 0x80) {\n          chr = ((b1 << 6) & 0x7C0) | (b2 & 0x3F);\n\n          if (chr < 0x80) {\n            result += '\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 3;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF0) === 0xE0 && (i + 6 < l)) {\n        // 1110xxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80) {\n          chr = ((b1 << 12) & 0xF000) | ((b2 << 6) & 0xFC0) | (b3 & 0x3F);\n\n          if (chr < 0x800 || (chr >= 0xD800 && chr <= 0xDFFF)) {\n            result += '\\ufffd\\ufffd\\ufffd';\n          } else {\n            result += String.fromCharCode(chr);\n          }\n\n          i += 6;\n          continue;\n        }\n      }\n\n      if ((b1 & 0xF8) === 0xF0 && (i + 9 < l)) {\n        // 111110xx 10xxxxxx 10xxxxxx 10xxxxxx\n        b2 = parseInt(seq.slice(i + 4, i + 6), 16);\n        b3 = parseInt(seq.slice(i + 7, i + 9), 16);\n        b4 = parseInt(seq.slice(i + 10, i + 12), 16);\n\n        if ((b2 & 0xC0) === 0x80 && (b3 & 0xC0) === 0x80 && (b4 & 0xC0) === 0x80) {\n          chr = ((b1 << 18) & 0x1C0000) | ((b2 << 12) & 0x3F000) | ((b3 << 6) & 0xFC0) | (b4 & 0x3F);\n\n          if (chr < 0x10000 || chr > 0x10FFFF) {\n            result += '\\ufffd\\ufffd\\ufffd\\ufffd';\n          } else {\n            chr -= 0x10000;\n            result += String.fromCharCode(0xD800 + (chr >> 10), 0xDC00 + (chr & 0x3FF));\n          }\n\n          i += 9;\n          continue;\n        }\n      }\n\n      result += '\\ufffd';\n    }\n\n    return result;\n  });\n}\n\n\ndecode.defaultChars   = ';/?:@&=+$,#';\ndecode.componentChars = '';\n\n\nmodule.exports = decode;\n","// ~~strike through~~\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function strikethrough(state, silent) {\n  var i, scanned, token, len, ch,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x7E/* ~ */) { return false; }\n\n  scanned = state.scanDelims(state.pos, true);\n  len = scanned.length;\n  ch = String.fromCharCode(marker);\n\n  if (len < 2) { return false; }\n\n  if (len % 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch;\n    len--;\n  }\n\n  for (i = 0; i < len; i += 2) {\n    token         = state.push('text', '', 0);\n    token.content = ch + ch;\n\n    state.delimiters.push({\n      marker: marker,\n      length: 0, // disable \"rule of 3\" length checks meant for emphasis\n      jump:   i,\n      token:  state.tokens.length - 1,\n      end:    -1,\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i, j,\n      startDelim,\n      endDelim,\n      token,\n      loneMarkers = [],\n      max = delimiters.length;\n\n  for (i = 0; i < max; i++) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x7E/* ~ */) {\n      continue;\n    }\n\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    token         = state.tokens[startDelim.token];\n    token.type    = 's_open';\n    token.tag     = 's';\n    token.nesting = 1;\n    token.markup  = '~~';\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = 's_close';\n    token.tag     = 's';\n    token.nesting = -1;\n    token.markup  = '~~';\n    token.content = '';\n\n    if (state.tokens[endDelim.token - 1].type === 'text' &&\n        state.tokens[endDelim.token - 1].content === '~') {\n\n      loneMarkers.push(endDelim.token - 1);\n    }\n  }\n\n  // If a marker sequence has an odd number of characters, it's splitted\n  // like this: `~~~~~` -> `~` + `~~` + `~~`, leaving one marker at the\n  // start of the sequence.\n  //\n  // So, we have to move all those markers after subsequent s_close tags.\n  //\n  while (loneMarkers.length) {\n    i = loneMarkers.pop();\n    j = i + 1;\n\n    while (j < state.tokens.length && state.tokens[j].type === 's_close') {\n      j++;\n    }\n\n    j--;\n\n    if (i !== j) {\n      token = state.tokens[j];\n      state.tokens[j] = state.tokens[i];\n      state.tokens[i] = token;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function strikethrough(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process ![image](<src> \"title\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function image(state, silent) {\n  var attrs,\n      code,\n      content,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      ref,\n      res,\n      title,\n      token,\n      tokens,\n      start,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax;\n\n  if (state.src.charCodeAt(state.pos) !== 0x21/* ! */) { return false; }\n  if (state.src.charCodeAt(state.pos + 1) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 2;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos + 1, false);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      state.pos = oldPos;\n      return false;\n    }\n    pos++;\n  } else {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    content = state.src.slice(labelStart, labelEnd);\n\n    state.md.inline.parse(\n      content,\n      state.md,\n      state.env,\n      tokens = []\n    );\n\n    token          = state.push('image', 'img', 0);\n    token.attrs    = attrs = [ [ 'src', href ], [ 'alt', '' ] ];\n    token.children = tokens;\n    token.content  = content;\n\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n","// Replace link-like texts with link nodes.\n//\n// Currently restricted by `md.validateLink()` to http/https/ftp\n//\n'use strict';\n\n\nvar arrayReplaceAt = require('../common/utils').arrayReplaceAt;\n\n\nfunction isLinkOpen(str) {\n  return /^<a[>\\s]/i.test(str);\n}\nfunction isLinkClose(str) {\n  return /^<\\/a\\s*>/i.test(str);\n}\n\n\nmodule.exports = function linkify(state) {\n  var i, j, l, tokens, token, currentToken, nodes, ln, text, pos, lastPos,\n      level, htmlLinkLevel, url, fullUrl, urlText,\n      blockTokens = state.tokens,\n      links;\n\n  if (!state.md.options.linkify) { return; }\n\n  for (j = 0, l = blockTokens.length; j < l; j++) {\n    if (blockTokens[j].type !== 'inline' ||\n        !state.md.linkify.pretest(blockTokens[j].content)) {\n      continue;\n    }\n\n    tokens = blockTokens[j].children;\n\n    htmlLinkLevel = 0;\n\n    // We scan from the end, to keep position when new tags added.\n    // Use reversed logic in links start/end match\n    for (i = tokens.length - 1; i >= 0; i--) {\n      currentToken = tokens[i];\n\n      // Skip content of markdown links\n      if (currentToken.type === 'link_close') {\n        i--;\n        while (tokens[i].level !== currentToken.level && tokens[i].type !== 'link_open') {\n          i--;\n        }\n        continue;\n      }\n\n      // Skip content of html tag links\n      if (currentToken.type === 'html_inline') {\n        if (isLinkOpen(currentToken.content) && htmlLinkLevel > 0) {\n          htmlLinkLevel--;\n        }\n        if (isLinkClose(currentToken.content)) {\n          htmlLinkLevel++;\n        }\n      }\n      if (htmlLinkLevel > 0) { continue; }\n\n      if (currentToken.type === 'text' && state.md.linkify.test(currentToken.content)) {\n\n        text = currentToken.content;\n        links = state.md.linkify.match(text);\n\n        // Now split string to nodes\n        nodes = [];\n        level = currentToken.level;\n        lastPos = 0;\n\n        for (ln = 0; ln < links.length; ln++) {\n\n          url = links[ln].url;\n          fullUrl = state.md.normalizeLink(url);\n          if (!state.md.validateLink(fullUrl)) { continue; }\n\n          urlText = links[ln].text;\n\n          // Linkifier might send raw hostnames like \"example.com\", where url\n          // starts with domain name. So we prepend http:// in those cases,\n          // and remove it afterwards.\n          //\n          if (!links[ln].schema) {\n            urlText = state.md.normalizeLinkText('http://' + urlText).replace(/^http:\\/\\//, '');\n          } else if (links[ln].schema === 'mailto:' && !/^mailto:/i.test(urlText)) {\n            urlText = state.md.normalizeLinkText('mailto:' + urlText).replace(/^mailto:/, '');\n          } else {\n            urlText = state.md.normalizeLinkText(urlText);\n          }\n\n          pos = links[ln].index;\n\n          if (pos > lastPos) {\n            token         = new state.Token('text', '', 0);\n            token.content = text.slice(lastPos, pos);\n            token.level   = level;\n            nodes.push(token);\n          }\n\n          token         = new state.Token('link_open', 'a', 1);\n          token.attrs   = [ [ 'href', fullUrl ] ];\n          token.level   = level++;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          token         = new state.Token('text', '', 0);\n          token.content = urlText;\n          token.level   = level;\n          nodes.push(token);\n\n          token         = new state.Token('link_close', 'a', -1);\n          token.level   = --level;\n          token.markup  = 'linkify';\n          token.info    = 'auto';\n          nodes.push(token);\n\n          lastPos = links[ln].lastIndex;\n        }\n        if (lastPos < text.length) {\n          token         = new state.Token('text', '', 0);\n          token.content = text.slice(lastPos);\n          token.level   = level;\n          nodes.push(token);\n        }\n\n        // replace current node\n        blockTokens[j].children = tokens = arrayReplaceAt(tokens, i, nodes);\n      }\n    }\n  }\n};\n","// Code block (4 spaces padded)\n\n'use strict';\n\n\nmodule.exports = function code(state, startLine, endLine/*, silent*/) {\n  var nextLine, last, token;\n\n  if (state.sCount[startLine] - state.blkIndent < 4) { return false; }\n\n  last = nextLine = startLine + 1;\n\n  while (nextLine < endLine) {\n    if (state.isEmpty(nextLine)) {\n      nextLine++;\n      continue;\n    }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      nextLine++;\n      last = nextLine;\n      continue;\n    }\n    break;\n  }\n\n  state.line = last;\n\n  token         = state.push('code_block', 'code', 0);\n  token.content = state.getLines(startLine, last, 4 + state.blkIndent, true);\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","'use strict';\n\nmodule.exports = function inline(state) {\n  var tokens = state.tokens, tok, i, l;\n\n  // Parse inlines\n  for (i = 0, l = tokens.length; i < l; i++) {\n    tok = tokens[i];\n    if (tok.type === 'inline') {\n      state.md.inline.parse(tok.content, state.md, state.env, tok.children);\n    }\n  }\n};\n","module.exports=/[\\0-\\x1F\\x7F-\\x9F]/","/** internal\n * class Core\n *\n * Top-level rules executor. Glues block/inline parsers and does intermediate\n * transformations.\n **/\n'use strict';\n\n\nvar Ruler  = require('./ruler');\n\n\nvar _rules = [\n  [ 'normalize',      require('./rules_core/normalize')      ],\n  [ 'block',          require('./rules_core/block')          ],\n  [ 'inline',         require('./rules_core/inline')         ],\n  [ 'linkify',        require('./rules_core/linkify')        ],\n  [ 'replacements',   require('./rules_core/replacements')   ],\n  [ 'smartquotes',    require('./rules_core/smartquotes')    ]\n];\n\n\n/**\n * new Core()\n **/\nfunction Core() {\n  /**\n   * Core#ruler -> Ruler\n   *\n   * [[Ruler]] instance. Keep configuration of core rules.\n   **/\n  this.ruler = new Ruler();\n\n  for (var i = 0; i < _rules.length; i++) {\n    this.ruler.push(_rules[i][0], _rules[i][1]);\n  }\n}\n\n\n/**\n * Core.process(state)\n *\n * Executes core chain rules.\n **/\nCore.prototype.process = function (state) {\n  var i, l, rules;\n\n  rules = this.ruler.getRules('');\n\n  for (i = 0, l = rules.length; i < l; i++) {\n    rules[i](state);\n  }\n};\n\nCore.prototype.State = require('./rules_core/state_core');\n\n\nmodule.exports = Core;\n","// Convert straight quotation marks to typographic ones\n//\n'use strict';\n\n\nvar isWhiteSpace   = require('../common/utils').isWhiteSpace;\nvar isPunctChar    = require('../common/utils').isPunctChar;\nvar isMdAsciiPunct = require('../common/utils').isMdAsciiPunct;\n\nvar QUOTE_TEST_RE = /['\"]/;\nvar QUOTE_RE = /['\"]/g;\nvar APOSTROPHE = '\\u2019'; /* ’ */\n\n\nfunction replaceAt(str, index, ch) {\n  return str.substr(0, index) + ch + str.substr(index + 1);\n}\n\nfunction process_inlines(tokens, state) {\n  var i, token, text, t, pos, max, thisLevel, item, lastChar, nextChar,\n      isLastPunctChar, isNextPunctChar, isLastWhiteSpace, isNextWhiteSpace,\n      canOpen, canClose, j, isSingle, stack, openQuote, closeQuote;\n\n  stack = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    token = tokens[i];\n\n    thisLevel = tokens[i].level;\n\n    for (j = stack.length - 1; j >= 0; j--) {\n      if (stack[j].level <= thisLevel) { break; }\n    }\n    stack.length = j + 1;\n\n    if (token.type !== 'text') { continue; }\n\n    text = token.content;\n    pos = 0;\n    max = text.length;\n\n    /*eslint no-labels:0,block-scoped-var:0*/\n    OUTER:\n    while (pos < max) {\n      QUOTE_RE.lastIndex = pos;\n      t = QUOTE_RE.exec(text);\n      if (!t) { break; }\n\n      canOpen = canClose = true;\n      pos = t.index + 1;\n      isSingle = (t[0] === \"'\");\n\n      // Find previous character,\n      // default to space if it's the beginning of the line\n      //\n      lastChar = 0x20;\n\n      if (t.index - 1 >= 0) {\n        lastChar = text.charCodeAt(t.index - 1);\n      } else {\n        for (j = i - 1; j >= 0; j--) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // lastChar defaults to 0x20\n          if (tokens[j].type !== 'text') continue;\n\n          lastChar = tokens[j].content.charCodeAt(tokens[j].content.length - 1);\n          break;\n        }\n      }\n\n      // Find next character,\n      // default to space if it's the end of the line\n      //\n      nextChar = 0x20;\n\n      if (pos < max) {\n        nextChar = text.charCodeAt(pos);\n      } else {\n        for (j = i + 1; j < tokens.length; j++) {\n          if (tokens[j].type === 'softbreak' || tokens[j].type === 'hardbreak') break; // nextChar defaults to 0x20\n          if (tokens[j].type !== 'text') continue;\n\n          nextChar = tokens[j].content.charCodeAt(0);\n          break;\n        }\n      }\n\n      isLastPunctChar = isMdAsciiPunct(lastChar) || isPunctChar(String.fromCharCode(lastChar));\n      isNextPunctChar = isMdAsciiPunct(nextChar) || isPunctChar(String.fromCharCode(nextChar));\n\n      isLastWhiteSpace = isWhiteSpace(lastChar);\n      isNextWhiteSpace = isWhiteSpace(nextChar);\n\n      if (isNextWhiteSpace) {\n        canOpen = false;\n      } else if (isNextPunctChar) {\n        if (!(isLastWhiteSpace || isLastPunctChar)) {\n          canOpen = false;\n        }\n      }\n\n      if (isLastWhiteSpace) {\n        canClose = false;\n      } else if (isLastPunctChar) {\n        if (!(isNextWhiteSpace || isNextPunctChar)) {\n          canClose = false;\n        }\n      }\n\n      if (nextChar === 0x22 /* \" */ && t[0] === '\"') {\n        if (lastChar >= 0x30 /* 0 */ && lastChar <= 0x39 /* 9 */) {\n          // special case: 1\"\" - count first quote as an inch\n          canClose = canOpen = false;\n        }\n      }\n\n      if (canOpen && canClose) {\n        // Replace quotes in the middle of punctuation sequence, but not\n        // in the middle of the words, i.e.:\n        //\n        // 1. foo \" bar \" baz - not replaced\n        // 2. foo-\"-bar-\"-baz - replaced\n        // 3. foo\"bar\"baz     - not replaced\n        //\n        canOpen = isLastPunctChar;\n        canClose = isNextPunctChar;\n      }\n\n      if (!canOpen && !canClose) {\n        // middle of word\n        if (isSingle) {\n          token.content = replaceAt(token.content, t.index, APOSTROPHE);\n        }\n        continue;\n      }\n\n      if (canClose) {\n        // this could be a closing quote, rewind the stack to get a match\n        for (j = stack.length - 1; j >= 0; j--) {\n          item = stack[j];\n          if (stack[j].level < thisLevel) { break; }\n          if (item.single === isSingle && stack[j].level === thisLevel) {\n            item = stack[j];\n\n            if (isSingle) {\n              openQuote = state.md.options.quotes[2];\n              closeQuote = state.md.options.quotes[3];\n            } else {\n              openQuote = state.md.options.quotes[0];\n              closeQuote = state.md.options.quotes[1];\n            }\n\n            // replace token.content *before* tokens[item.token].content,\n            // because, if they are pointing at the same token, replaceAt\n            // could mess up indices when quote length != 1\n            token.content = replaceAt(token.content, t.index, closeQuote);\n            tokens[item.token].content = replaceAt(\n              tokens[item.token].content, item.pos, openQuote);\n\n            pos += closeQuote.length - 1;\n            if (item.token === i) { pos += openQuote.length - 1; }\n\n            text = token.content;\n            max = text.length;\n\n            stack.length = j;\n            continue OUTER;\n          }\n        }\n      }\n\n      if (canOpen) {\n        stack.push({\n          token: i,\n          pos: t.index,\n          single: isSingle,\n          level: thisLevel\n        });\n      } else if (canClose && isSingle) {\n        token.content = replaceAt(token.content, t.index, APOSTROPHE);\n      }\n    }\n  }\n}\n\n\nmodule.exports = function smartquotes(state) {\n  /*eslint max-depth:0*/\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline' ||\n        !QUOTE_TEST_RE.test(state.tokens[blkIdx].content)) {\n      continue;\n    }\n\n    process_inlines(state.tokens[blkIdx].children, state);\n  }\n};\n","'use strict';\n\n\nmodule.exports = function (opts) {\n  var re = {};\n\n  // Use direct extract instead of `regenerate` to reduse browserified size\n  re.src_Any = require('uc.micro/properties/Any/regex').source;\n  re.src_Cc  = require('uc.micro/categories/Cc/regex').source;\n  re.src_Z   = require('uc.micro/categories/Z/regex').source;\n  re.src_P   = require('uc.micro/categories/P/regex').source;\n\n  // \\p{\\Z\\P\\Cc\\CF} (white spaces + control + format + punctuation)\n  re.src_ZPCc = [ re.src_Z, re.src_P, re.src_Cc ].join('|');\n\n  // \\p{\\Z\\Cc} (white spaces + control)\n  re.src_ZCc = [ re.src_Z, re.src_Cc ].join('|');\n\n  // Experimental. List of chars, completely prohibited in links\n  // because can separate it from other part of text\n  var text_separators = '[><\\uff5c]';\n\n  // All possible word characters (everything without punctuation, spaces & controls)\n  // Defined via punctuation & spaces to save space\n  // Should be something like \\p{\\L\\N\\S\\M} (\\w but without `_`)\n  re.src_pseudo_letter       = '(?:(?!' + text_separators + '|' + re.src_ZPCc + ')' + re.src_Any + ')';\n  // The same as abothe but without [0-9]\n  // var src_pseudo_letter_non_d = '(?:(?![0-9]|' + src_ZPCc + ')' + src_Any + ')';\n\n  ////////////////////////////////////////////////////////////////////////////////\n\n  re.src_ip4 =\n\n    '(?:(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\\\\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)';\n\n  // Prohibit any of \"@/[]()\" in user/pass to avoid wrong domain fetch.\n  re.src_auth    = '(?:(?:(?!' + re.src_ZCc + '|[@/\\\\[\\\\]()]).)+@)?';\n\n  re.src_port =\n\n    '(?::(?:6(?:[0-4]\\\\d{3}|5(?:[0-4]\\\\d{2}|5(?:[0-2]\\\\d|3[0-5])))|[1-5]?\\\\d{1,4}))?';\n\n  re.src_host_terminator =\n\n    '(?=$|' + text_separators + '|' + re.src_ZPCc + ')(?!-|_|:\\\\d|\\\\.-|\\\\.(?!$|' + re.src_ZPCc + '))';\n\n  re.src_path =\n\n    '(?:' +\n      '[/?#]' +\n        '(?:' +\n          '(?!' + re.src_ZCc + '|' + text_separators + '|[()[\\\\]{}.,\"\\'?!\\\\-]).|' +\n          '\\\\[(?:(?!' + re.src_ZCc + '|\\\\]).)*\\\\]|' +\n          '\\\\((?:(?!' + re.src_ZCc + '|[)]).)*\\\\)|' +\n          '\\\\{(?:(?!' + re.src_ZCc + '|[}]).)*\\\\}|' +\n          '\\\\\"(?:(?!' + re.src_ZCc + '|[\"]).)+\\\\\"|' +\n          \"\\\\'(?:(?!\" + re.src_ZCc + \"|[']).)+\\\\'|\" +\n          \"\\\\'(?=\" + re.src_pseudo_letter + '|[-]).|' +  // allow `I'm_king` if no pair found\n          '\\\\.{2,}[a-zA-Z0-9%/&]|' + // google has many dots in \"google search\" links (#66, #81).\n                                     // github has ... in commit range links,\n                                     // Restrict to\n                                     // - english\n                                     // - percent-encoded\n                                     // - parts of file path\n                                     // - params separator\n                                     // until more examples found.\n          '\\\\.(?!' + re.src_ZCc + '|[.]).|' +\n          (opts && opts['---'] ?\n            '\\\\-(?!--(?:[^-]|$))(?:-*)|' // `---` => long dash, terminate\n            :\n            '\\\\-+|'\n          ) +\n          '\\\\,(?!' + re.src_ZCc + ').|' +       // allow `,,,` in paths\n          '\\\\!+(?!' + re.src_ZCc + '|[!]).|' +  // allow `!!!` in paths, but not at the end\n          '\\\\?(?!' + re.src_ZCc + '|[?]).' +\n        ')+' +\n      '|\\\\/' +\n    ')?';\n\n  // Allow anything in markdown spec, forbid quote (\") at the first position\n  // because emails enclosed in quotes are far more common\n  re.src_email_name =\n\n    '[\\\\-;:&=\\\\+\\\\$,\\\\.a-zA-Z0-9_][\\\\-;:&=\\\\+\\\\$,\\\\\"\\\\.a-zA-Z0-9_]*';\n\n  re.src_xn =\n\n    'xn--[a-z0-9\\\\-]{1,59}';\n\n  // More to read about domain names\n  // http://serverfault.com/questions/638260/\n\n  re.src_domain_root =\n\n    // Allow letters & digits (http://test1)\n    '(?:' +\n      re.src_xn +\n      '|' +\n      re.src_pseudo_letter + '{1,63}' +\n    ')';\n\n  re.src_domain =\n\n    '(?:' +\n      re.src_xn +\n      '|' +\n      '(?:' + re.src_pseudo_letter + ')' +\n      '|' +\n      '(?:' + re.src_pseudo_letter + '(?:-|' + re.src_pseudo_letter + '){0,61}' + re.src_pseudo_letter + ')' +\n    ')';\n\n  re.src_host =\n\n    '(?:' +\n    // Don't need IP check, because digits are already allowed in normal domain names\n    //   src_ip4 +\n    // '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)*' + re.src_domain/*_root*/ + ')' +\n    ')';\n\n  re.tpl_host_fuzzy =\n\n    '(?:' +\n      re.src_ip4 +\n    '|' +\n      '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))' +\n    ')';\n\n  re.tpl_host_no_ip_fuzzy =\n\n    '(?:(?:(?:' + re.src_domain + ')\\\\.)+(?:%TLDS%))';\n\n  re.src_host_strict =\n\n    re.src_host + re.src_host_terminator;\n\n  re.tpl_host_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_host_terminator;\n\n  re.src_host_port_strict =\n\n    re.src_host + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_fuzzy_strict =\n\n    re.tpl_host_fuzzy + re.src_port + re.src_host_terminator;\n\n  re.tpl_host_port_no_ip_fuzzy_strict =\n\n    re.tpl_host_no_ip_fuzzy + re.src_port + re.src_host_terminator;\n\n\n  ////////////////////////////////////////////////////////////////////////////////\n  // Main rules\n\n  // Rude test fuzzy links by host, for quick deny\n  re.tpl_host_fuzzy_test =\n\n    'localhost|www\\\\.|\\\\.\\\\d{1,3}\\\\.|(?:\\\\.(?:%TLDS%)(?:' + re.src_ZPCc + '|>|$))';\n\n  re.tpl_email_fuzzy =\n\n      '(^|' + text_separators + '|\"|\\\\(|' + re.src_ZCc + ')' +\n      '(' + re.src_email_name + '@' + re.tpl_host_fuzzy_strict + ')';\n\n  re.tpl_link_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_fuzzy_strict + re.src_path + ')';\n\n  re.tpl_link_no_ip_fuzzy =\n      // Fuzzy link can't be prepended with .:/\\- and non punctuation.\n      // but can start with > (markdown blockquote)\n      '(^|(?![.:/\\\\-_@])(?:[$+<=>^`|\\uff5c]|' + re.src_ZPCc + '))' +\n      '((?![$+<=>^`|\\uff5c])' + re.tpl_host_port_no_ip_fuzzy_strict + re.src_path + ')';\n\n  return re;\n};\n","// Simple typographic replacements\n//\n// (c) (C) → ©\n// (tm) (TM) → ™\n// (r) (R) → ®\n// +- → ±\n// (p) (P) -> §\n// ... → … (also ?.... → ?.., !.... → !..)\n// ???????? → ???, !!!!! → !!!, `,,` → `,`\n// -- → &ndash;, --- → &mdash;\n//\n'use strict';\n\n// TODO:\n// - fractionals 1/2, 1/4, 3/4 -> ½, ¼, ¾\n// - miltiplication 2 x 4 -> 2 × 4\n\nvar RARE_RE = /\\+-|\\.\\.|\\?\\?\\?\\?|!!!!|,,|--/;\n\n// Workaround for phantomjs - need regex without /g flag,\n// or root check will fail every second time\nvar SCOPED_ABBR_TEST_RE = /\\((c|tm|r|p)\\)/i;\n\nvar SCOPED_ABBR_RE = /\\((c|tm|r|p)\\)/ig;\nvar SCOPED_ABBR = {\n  c: '©',\n  r: '®',\n  p: '§',\n  tm: '™'\n};\n\nfunction replaceFn(match, name) {\n  return SCOPED_ABBR[name.toLowerCase()];\n}\n\nfunction replace_scoped(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      token.content = token.content.replace(SCOPED_ABBR_RE, replaceFn);\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\nfunction replace_rare(inlineTokens) {\n  var i, token, inside_autolink = 0;\n\n  for (i = inlineTokens.length - 1; i >= 0; i--) {\n    token = inlineTokens[i];\n\n    if (token.type === 'text' && !inside_autolink) {\n      if (RARE_RE.test(token.content)) {\n        token.content = token.content\n          .replace(/\\+-/g, '±')\n          // .., ..., ....... -> …\n          // but ?..... & !..... -> ?.. & !..\n          .replace(/\\.{2,}/g, '…').replace(/([?!])…/g, '$1..')\n          .replace(/([?!]){4,}/g, '$1$1$1').replace(/,{2,}/g, ',')\n          // em-dash\n          .replace(/(^|[^-])---(?=[^-]|$)/mg, '$1\\u2014')\n          // en-dash\n          .replace(/(^|\\s)--(?=\\s|$)/mg, '$1\\u2013')\n          .replace(/(^|[^-\\s])--(?=[^-\\s]|$)/mg, '$1\\u2013');\n      }\n    }\n\n    if (token.type === 'link_open' && token.info === 'auto') {\n      inside_autolink--;\n    }\n\n    if (token.type === 'link_close' && token.info === 'auto') {\n      inside_autolink++;\n    }\n  }\n}\n\n\nmodule.exports = function replace(state) {\n  var blkIdx;\n\n  if (!state.md.options.typographer) { return; }\n\n  for (blkIdx = state.tokens.length - 1; blkIdx >= 0; blkIdx--) {\n\n    if (state.tokens[blkIdx].type !== 'inline') { continue; }\n\n    if (SCOPED_ABBR_TEST_RE.test(state.tokens[blkIdx].content)) {\n      replace_scoped(state.tokens[blkIdx].children);\n    }\n\n    if (RARE_RE.test(state.tokens[blkIdx].content)) {\n      replace_rare(state.tokens[blkIdx].children);\n    }\n\n  }\n};\n","// Skip text characters for text token, place those to pending buffer\n// and increment current pos\n\n'use strict';\n\n\n// Rule to skip pure text\n// '{}$%@~+=:' reserved for extentions\n\n// !, \", #, $, %, &, ', (, ), *, +, ,, -, ., /, :, ;, <, =, >, ?, @, [, \\, ], ^, _, `, {, |, }, or ~\n\n// !!!! Don't confuse with \"Markdown ASCII Punctuation\" chars\n// http://spec.commonmark.org/0.15/#ascii-punctuation-character\nfunction isTerminatorChar(ch) {\n  switch (ch) {\n    case 0x0A/* \\n */:\n    case 0x21/* ! */:\n    case 0x23/* # */:\n    case 0x24/* $ */:\n    case 0x25/* % */:\n    case 0x26/* & */:\n    case 0x2A/* * */:\n    case 0x2B/* + */:\n    case 0x2D/* - */:\n    case 0x3A/* : */:\n    case 0x3C/* < */:\n    case 0x3D/* = */:\n    case 0x3E/* > */:\n    case 0x40/* @ */:\n    case 0x5B/* [ */:\n    case 0x5C/* \\ */:\n    case 0x5D/* ] */:\n    case 0x5E/* ^ */:\n    case 0x5F/* _ */:\n    case 0x60/* ` */:\n    case 0x7B/* { */:\n    case 0x7D/* } */:\n    case 0x7E/* ~ */:\n      return true;\n    default:\n      return false;\n  }\n}\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos;\n\n  while (pos < state.posMax && !isTerminatorChar(state.src.charCodeAt(pos))) {\n    pos++;\n  }\n\n  if (pos === state.pos) { return false; }\n\n  if (!silent) { state.pending += state.src.slice(state.pos, pos); }\n\n  state.pos = pos;\n\n  return true;\n};\n\n// Alternative implementation, for memory.\n//\n// It costs 10% of performance, but allows extend terminators list, if place it\n// to `ParcerInline` property. Probably, will switch to it sometime, such\n// flexibility required.\n\n/*\nvar TERMINATOR_RE = /[\\n!#$%&*+\\-:<=>@[\\\\\\]^_`{}~]/;\n\nmodule.exports = function text(state, silent) {\n  var pos = state.pos,\n      idx = state.src.slice(pos).search(TERMINATOR_RE);\n\n  // first char is terminator -> empty text\n  if (idx === 0) { return false; }\n\n  // no terminator -> text till end of string\n  if (idx < 0) {\n    if (!silent) { state.pending += state.src.slice(pos); }\n    state.pos = state.src.length;\n    return true;\n  }\n\n  if (!silent) { state.pending += state.src.slice(pos, pos + idx); }\n\n  state.pos += idx;\n\n  return true;\n};*/\n","// HTML5 entities map: { name -> utf16string }\n//\n'use strict';\n\n/*eslint quotes:0*/\nmodule.exports = require('entities/lib/maps/entities.json');\n","// fences (``` lang, ~~~ lang)\n\n'use strict';\n\n\nmodule.exports = function fence(state, startLine, endLine, silent) {\n  var marker, len, params, nextLine, mem, token, markup,\n      haveEndMarker = false,\n      pos = state.bMarks[startLine] + state.tShift[startLine],\n      max = state.eMarks[startLine];\n\n  // if it's indented more than 3 spaces, it should be a code block\n  if (state.sCount[startLine] - state.blkIndent >= 4) { return false; }\n\n  if (pos + 3 > max) { return false; }\n\n  marker = state.src.charCodeAt(pos);\n\n  if (marker !== 0x7E/* ~ */ && marker !== 0x60 /* ` */) {\n    return false;\n  }\n\n  // scan marker length\n  mem = pos;\n  pos = state.skipChars(pos, marker);\n\n  len = pos - mem;\n\n  if (len < 3) { return false; }\n\n  markup = state.src.slice(mem, pos);\n  params = state.src.slice(pos, max);\n\n  if (marker === 0x60 /* ` */) {\n    if (params.indexOf(String.fromCharCode(marker)) >= 0) {\n      return false;\n    }\n  }\n\n  // Since start is found, we can report success here in validation mode\n  if (silent) { return true; }\n\n  // search end of block\n  nextLine = startLine;\n\n  for (;;) {\n    nextLine++;\n    if (nextLine >= endLine) {\n      // unclosed block should be autoclosed by end of document.\n      // also block seems to be autoclosed by end of parent\n      break;\n    }\n\n    pos = mem = state.bMarks[nextLine] + state.tShift[nextLine];\n    max = state.eMarks[nextLine];\n\n    if (pos < max && state.sCount[nextLine] < state.blkIndent) {\n      // non-empty line with negative indent should stop the list:\n      // - ```\n      //  test\n      break;\n    }\n\n    if (state.src.charCodeAt(pos) !== marker) { continue; }\n\n    if (state.sCount[nextLine] - state.blkIndent >= 4) {\n      // closing fence should be indented less than 4 spaces\n      continue;\n    }\n\n    pos = state.skipChars(pos, marker);\n\n    // closing code fence must be at least as long as the opening one\n    if (pos - mem < len) { continue; }\n\n    // make sure tail has spaces only\n    pos = state.skipSpaces(pos);\n\n    if (pos < max) { continue; }\n\n    haveEndMarker = true;\n    // found!\n    break;\n  }\n\n  // If a fence has heading spaces, they should be removed from its inner block\n  len = state.sCount[startLine];\n\n  state.line = nextLine + (haveEndMarker ? 1 : 0);\n\n  token         = state.push('fence', 'code', 0);\n  token.info    = params;\n  token.content = state.getLines(startLine + 1, nextLine, len, true);\n  token.markup  = markup;\n  token.map     = [ startLine, state.line ];\n\n  return true;\n};\n","// Process html tags\n\n'use strict';\n\n\nvar HTML_TAG_RE = require('../common/html_re').HTML_TAG_RE;\n\n\nfunction isLetter(ch) {\n  /*eslint no-bitwise:0*/\n  var lc = ch | 0x20; // to lower case\n  return (lc >= 0x61/* a */) && (lc <= 0x7a/* z */);\n}\n\n\nmodule.exports = function html_inline(state, silent) {\n  var ch, match, max, token,\n      pos = state.pos;\n\n  if (!state.md.options.html) { return false; }\n\n  // Check start\n  max = state.posMax;\n  if (state.src.charCodeAt(pos) !== 0x3C/* < */ ||\n      pos + 2 >= max) {\n    return false;\n  }\n\n  // Quick fail on second char\n  ch = state.src.charCodeAt(pos + 1);\n  if (ch !== 0x21/* ! */ &&\n      ch !== 0x3F/* ? */ &&\n      ch !== 0x2F/* / */ &&\n      !isLetter(ch)) {\n    return false;\n  }\n\n  match = state.src.slice(pos).match(HTML_TAG_RE);\n  if (!match) { return false; }\n\n  if (!silent) {\n    token         = state.push('html_inline', '', 0);\n    token.content = state.src.slice(pos, pos + match[0].length);\n  }\n  state.pos += match[0].length;\n  return true;\n};\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","module.exports=/[\\0-\\uD7FF\\uE000-\\uFFFF]|[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]|[\\uD800-\\uDBFF](?![\\uDC00-\\uDFFF])|(?:[^\\uD800-\\uDBFF]|^)[\\uDC00-\\uDFFF]/","// Process *this* and _that_\n//\n'use strict';\n\n\n// Insert each marker as a separate text token, and add it to delimiter list\n//\nmodule.exports.tokenize = function emphasis(state, silent) {\n  var i, scanned, token,\n      start = state.pos,\n      marker = state.src.charCodeAt(start);\n\n  if (silent) { return false; }\n\n  if (marker !== 0x5F /* _ */ && marker !== 0x2A /* * */) { return false; }\n\n  scanned = state.scanDelims(state.pos, marker === 0x2A);\n\n  for (i = 0; i < scanned.length; i++) {\n    token         = state.push('text', '', 0);\n    token.content = String.fromCharCode(marker);\n\n    state.delimiters.push({\n      // Char code of the starting marker (number).\n      //\n      marker: marker,\n\n      // Total length of these series of delimiters.\n      //\n      length: scanned.length,\n\n      // An amount of characters before this one that's equivalent to\n      // current one. In plain English: if this delimiter does not open\n      // an emphasis, neither do previous `jump` characters.\n      //\n      // Used to skip sequences like \"*****\" in one step, for 1st asterisk\n      // value will be 0, for 2nd it's 1 and so on.\n      //\n      jump:   i,\n\n      // A position of the token this delimiter corresponds to.\n      //\n      token:  state.tokens.length - 1,\n\n      // If this delimiter is matched as a valid opener, `end` will be\n      // equal to its position, otherwise it's `-1`.\n      //\n      end:    -1,\n\n      // Boolean flags that determine if this delimiter could open or close\n      // an emphasis.\n      //\n      open:   scanned.can_open,\n      close:  scanned.can_close\n    });\n  }\n\n  state.pos += scanned.length;\n\n  return true;\n};\n\n\nfunction postProcess(state, delimiters) {\n  var i,\n      startDelim,\n      endDelim,\n      token,\n      ch,\n      isStrong,\n      max = delimiters.length;\n\n  for (i = max - 1; i >= 0; i--) {\n    startDelim = delimiters[i];\n\n    if (startDelim.marker !== 0x5F/* _ */ && startDelim.marker !== 0x2A/* * */) {\n      continue;\n    }\n\n    // Process only opening markers\n    if (startDelim.end === -1) {\n      continue;\n    }\n\n    endDelim = delimiters[startDelim.end];\n\n    // If the previous delimiter has the same marker and is adjacent to this one,\n    // merge those into one strong delimiter.\n    //\n    // `<em><em>whatever</em></em>` -> `<strong>whatever</strong>`\n    //\n    isStrong = i > 0 &&\n               delimiters[i - 1].end === startDelim.end + 1 &&\n               delimiters[i - 1].token === startDelim.token - 1 &&\n               delimiters[startDelim.end + 1].token === endDelim.token + 1 &&\n               delimiters[i - 1].marker === startDelim.marker;\n\n    ch = String.fromCharCode(startDelim.marker);\n\n    token         = state.tokens[startDelim.token];\n    token.type    = isStrong ? 'strong_open' : 'em_open';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = 1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    token         = state.tokens[endDelim.token];\n    token.type    = isStrong ? 'strong_close' : 'em_close';\n    token.tag     = isStrong ? 'strong' : 'em';\n    token.nesting = -1;\n    token.markup  = isStrong ? ch + ch : ch;\n    token.content = '';\n\n    if (isStrong) {\n      state.tokens[delimiters[i - 1].token].content = '';\n      state.tokens[delimiters[startDelim.end + 1].token].content = '';\n      i--;\n    }\n  }\n}\n\n\n// Walk through delimiter list and replace text tokens with tags\n//\nmodule.exports.postProcess = function emphasis(state) {\n  var curr,\n      tokens_meta = state.tokens_meta,\n      max = state.tokens_meta.length;\n\n  postProcess(state, state.delimiters);\n\n  for (curr = 0; curr < max; curr++) {\n    if (tokens_meta[curr] && tokens_meta[curr].delimiters) {\n      postProcess(state, tokens_meta[curr].delimiters);\n    }\n  }\n};\n","// Process [link](<to> \"stuff\")\n\n'use strict';\n\nvar normalizeReference   = require('../common/utils').normalizeReference;\nvar isSpace              = require('../common/utils').isSpace;\n\n\nmodule.exports = function link(state, silent) {\n  var attrs,\n      code,\n      label,\n      labelEnd,\n      labelStart,\n      pos,\n      res,\n      ref,\n      title,\n      token,\n      href = '',\n      oldPos = state.pos,\n      max = state.posMax,\n      start = state.pos,\n      parseReference = true;\n\n  if (state.src.charCodeAt(state.pos) !== 0x5B/* [ */) { return false; }\n\n  labelStart = state.pos + 1;\n  labelEnd = state.md.helpers.parseLinkLabel(state, state.pos, true);\n\n  // parser failed to find ']', so it's not a valid link\n  if (labelEnd < 0) { return false; }\n\n  pos = labelEnd + 1;\n  if (pos < max && state.src.charCodeAt(pos) === 0x28/* ( */) {\n    //\n    // Inline link\n    //\n\n    // might have found a valid shortcut link, disable reference parsing\n    parseReference = false;\n\n    // [link](  <href>  \"title\"  )\n    //        ^^ skipping these spaces\n    pos++;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n    if (pos >= max) { return false; }\n\n    // [link](  <href>  \"title\"  )\n    //          ^^^^^^ parsing link destination\n    start = pos;\n    res = state.md.helpers.parseLinkDestination(state.src, pos, state.posMax);\n    if (res.ok) {\n      href = state.md.normalizeLink(res.str);\n      if (state.md.validateLink(href)) {\n        pos = res.pos;\n      } else {\n        href = '';\n      }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                ^^ skipping these spaces\n    start = pos;\n    for (; pos < max; pos++) {\n      code = state.src.charCodeAt(pos);\n      if (!isSpace(code) && code !== 0x0A) { break; }\n    }\n\n    // [link](  <href>  \"title\"  )\n    //                  ^^^^^^^ parsing link title\n    res = state.md.helpers.parseLinkTitle(state.src, pos, state.posMax);\n    if (pos < max && start !== pos && res.ok) {\n      title = res.str;\n      pos = res.pos;\n\n      // [link](  <href>  \"title\"  )\n      //                         ^^ skipping these spaces\n      for (; pos < max; pos++) {\n        code = state.src.charCodeAt(pos);\n        if (!isSpace(code) && code !== 0x0A) { break; }\n      }\n    } else {\n      title = '';\n    }\n\n    if (pos >= max || state.src.charCodeAt(pos) !== 0x29/* ) */) {\n      // parsing a valid shortcut link failed, fallback to reference\n      parseReference = true;\n    }\n    pos++;\n  }\n\n  if (parseReference) {\n    //\n    // Link reference\n    //\n    if (typeof state.env.references === 'undefined') { return false; }\n\n    if (pos < max && state.src.charCodeAt(pos) === 0x5B/* [ */) {\n      start = pos + 1;\n      pos = state.md.helpers.parseLinkLabel(state, pos);\n      if (pos >= 0) {\n        label = state.src.slice(start, pos++);\n      } else {\n        pos = labelEnd + 1;\n      }\n    } else {\n      pos = labelEnd + 1;\n    }\n\n    // covers label === '' and label === undefined\n    // (collapsed reference link and shortcut reference link respectively)\n    if (!label) { label = state.src.slice(labelStart, labelEnd); }\n\n    ref = state.env.references[normalizeReference(label)];\n    if (!ref) {\n      state.pos = oldPos;\n      return false;\n    }\n    href = ref.href;\n    title = ref.title;\n  }\n\n  //\n  // We found the end of the link, and know for a fact it's a valid link;\n  // so all that's left to do is to call tokenizer.\n  //\n  if (!silent) {\n    state.pos = labelStart;\n    state.posMax = labelEnd;\n\n    token        = state.push('link_open', 'a', 1);\n    token.attrs  = attrs = [ [ 'href', href ] ];\n    if (title) {\n      attrs.push([ 'title', title ]);\n    }\n\n    state.md.inline.tokenize(state);\n\n    token        = state.push('link_close', 'a', -1);\n  }\n\n  state.pos = pos;\n  state.posMax = max;\n  return true;\n};\n"],"sourceRoot":""}