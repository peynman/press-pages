{"version":3,"sources":["webpack:///./node_modules/find-insert-index/index.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/FormJSONBuilder.vue?1b80","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/TextInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/SwitchInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/FieldsRenderer.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/SelectInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/RangeInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/RadioGroupInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/ColorInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/ButtonGroupInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/AutocompleteInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/MultiTextInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/JSONInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/CheckboxInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/ObjectsListInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/BitwiseFlagsInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/ImageUploadInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/DatatableInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/ButtonInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/DateTimeInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/CalendarInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/MarkdownInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/ParagraphInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/AlertInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/FormJSONInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/PaginationInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/SimpleCaptcha.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/FileUploadInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/AdminBar.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/AppBar.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/Centered.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/SimpleFileInput.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/GroupSingleExpansion.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/GroupExpansion.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/GroupTabs.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/GroupTreeview.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/Group.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/DatatableColumn.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/settings/reports/ChartSettings.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/builder.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/workspace.js","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/FormJSONBuilder.vue?892d","webpack:///resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/FormJSONBuilder.vue","webpack:///./resources/js/Lib/vuetify-formjson/Fields/FormJSONBuilder/FormJSONBuilder.vue","webpack:///./node_modules/mergesort/index.js","webpack:///./node_modules/tree-model/index.js","webpack:///./resources/js/Lib/vuetify-formjson/Confirm.vue?1271","webpack:///./resources/js/Lib/vuetify-formjson/Confirm.vue?8982","webpack:///resources/js/Lib/vuetify-formjson/Confirm.vue","webpack:///./resources/js/Lib/vuetify-formjson/Confirm.vue"],"names":["module","exports","comparatorFn","arr","el","i","len","length","TextInputSettings","id","title","events","api","VTextField","required","CheckboxSettings","numeric","minLength","TextSettings","maxLength","mask","removeMask","farsi","ascii","CommonInputEssentials","props","options","type","formClass","fields","messages","MessagesTab","BaseInputSettings","SwitchInputSettings","VSwitch","FieldsRenderSettings","item","input","label","class","updateKeyCodes","hidden","objects","decorator","component","wrap","enabled","inside","VSelect","dense","columns","crud","create","multiple","already_selected","labels","hint","RangeInputSettings","VRangeSlider","RadioGroupInputSettings","VRadioGroup","ColorInputSettings","VColorPicker","VDataTable","pickerProps","ButtonGroupInputSettings","VBtnToggle","column","createEventsDatatableInputForSettingsForm","VCheckbox","edit","remove","AutocompleteInputSettings","VAutocomplete","table","query","url","relations","name","appends","attribute","MultiTextInputSettings","JSONInputSettings","ObjectsListInputSettings","BitwiseFlagsInputSettings","ImageUploadInputSettings","fullWidth","SwitchSettings","fullHeight","hideActions","clearable","clearIcon","disabled","readonly","debounce","flipHorizontallyIcon","flipVerticallyIcon","imageQuality","imageFormat","imageWidth","imageHeight","imageMaxScaling","imageMinScaling","imageBackgroundColor","ColorSettings","overlayBackgroundColor","overlayBorderColor","overlayBorderWidth","overlayPadding","rotateClockwiseIcon","rotateCounterClockwiseIcon","scalingSliderColor","DatatableInputSettings","inputs","this","filter","t","ButtonInputSettings","VBtn","icon","iconProps","VIcon","VDatePicker","VTimePicker","hideTimezones","hideCalendars","dateProps","timeProps","timezoneProps","calendarProps","AlertInputSettings","VAlert","message","FormJSONSettings","height","NumberSettings","VPagination","SimpleCaptchaSettings","FileUploadInputSettings","singleFile","max_file_size","chunk_size","max_retries","prevent_duplicates","filters","extensions","AdminBarTemplateSettings","AppBarTemplateSettings","contClass","fluid","rowClass","colClass","rowAlign","rowJustify","CenteredTemplateSettings","lg","md","sm","SimpleFileSettings","VFileInput","GroupSingleExpansionSettings","VExpansionPanel","GroupExpansionSettings","GroupTabsSettings","VTab","GroupTreeviewSettings","VTreeview","DatatableColumnSettings","dic","model","tabs","fieldProperties","vals","extras","values","slot","color","sortable","sort_name","align","width","ChartSettings","subtitle","report_url","report_name","report_label_key","report_item_key","report_groups","default_duration","default_window","is_windowed","is_x_time","report_type","group","func","query_filters","value","xs","availableInputs","Array","data","inputTypeSettings","FieldsRendererSettings","InputSelectSettings","CheckboxInputSettings","ButtonInput","DateTimeInputSettings","CalednarInputSettings","ParagraphInputSettings","MarkdownInputSettings","GroupSettings","PaginationSettings","FormBuilderInputsList","push","key","parts","split","splice","slice","toUpperCase","join","window","ExtraFormJSONSettings","sort","a","b","localeCompare","methods","getCopyPathAction","items","small","click","path","iter","isRoot","slots","parent","dummy","document","createElement","body","appendChild","select","execCommand","removeChild","$store","state","host","showSnack","getCopyContentAction","JSON","stringify","getPasteContentNextAction","newItem","parse","text","newModel","treeModel","settings","itemParentTypeSettings","getInputSlots","addChild","getPasteContentInsideAction","navigator","clipboard","readText","then","err","getRemoveAction","confirm","callback","drop","getSettingsAction","onUpdated","form","getSettingsFormFields","getDuplicateAction","newCopy","Math","random","Number","MAX_SAFE_INTEGER","substr","appendNestedPathValue","getMoveAction","formProps","first","setIndex","up","getIndex","down","children","bottom","getAddAction","itemParent","groups","outlined","once","clicked","getChangeSlotAction","getFormJSONBuilderActionProviderForTreeview","hasAction","getActions","actions","template","__template","getInputProperties","schema","builder","copy_path","move","duplicate","copy","pasteNext","parentTypeSettings","pasteInside","add","startsWith","includes","onSettingsUpdated","getFormJSONFromSchema","formjson","iterateAndEvaluateItems","ref","forEach","appendChildrenProperty","itemTypeSettings","endsWith","idSlices","__custom_slot","itemSettings","getInputPropsFromSettings","child","getFormSchemaFromFormJSON","getTree","emptyType","tree","prop","itemType","itemId","eventsVals","settingsVals","notDataKeys","inner","indexOf","nested","isArray","event","function","eventHandlers","map","validations","onUploaded","codeModel","code","getFormValuePropName","getWorkspace","onDownload","startJSONDownload","onReset","$refs","open","field","tempate","onResetValues","iterate","node","valueRef","undefined","updateFormJSONInput","onCopyToClipBoard","writeText","console","log","error","textArea","style","top","left","position","focus","msg","fallbackCopyTextToClipboard","onPasteFromClipboard","resolve","components","VCard","VCardTitle","VCardText","VSpacer","VToolbar","VDialog","VSystemBar","mixins","String","Object","default","devalue","formBuilderTreeview","btnProps","drawerProps","dark","shaped","hoverable","rounded","transition","showCodeEditor","mode","blocklyErrorDialog","blocklyField","currentSelectedBlocksCode","blocklyError","fullscreenCodeEditor","showCode","blocklyJSCode","jsonString","onFormInit","templates","getFormSchemaPropName","compiledForm","formId","e","$nextTick","applyManualEditor","resetManualEditor","onBlocklySelectionChanged","blocklyCopyContent","blocklyPasteContent","mounted","watch","deep","handler","$emit","formModel","_vm","_h","$createElement","_c","_self","_v","staticClass","attrs","on","$event","_s","staticStyle","$$v","expression","_e","startJSONUpload","directives","rawName","_b","scopedSlots","_u","fn","_g","stack","mergeSort","firstHalf","secondHalf","arr1","arr2","result","left1","left2","shift","apply","merge","findInsertIndex","walkStrategies","k","TreeModel","config","childrenPropertyName","modelComparatorFn","addChildToNode","Node","hasComparatorFunction","self","insertIndex","index","TypeError","Error","parseArgs","args","arguments","ctx","strategy","prototype","childCount","hasChildren","addChildAtIndex","oldIndex","getPath","addToPath","unshift","walk","call","pre","depthFirstPreOrder","context","keepGoing","post","depthFirstPostOrder","breadth","queue","processQueue","all","indexOfChild","zIndex","_k","keyCode","cancel","dialog","nativeOn","agree","VCardActions","VToolbarTitle"],"mappings":"+EAAAA,EAAOC,QAAU,WACf,aAmBA,OAVA,SAAyBC,EAAcC,EAAKC,GAC1C,IAAIC,EAAGC,EACP,IAAKD,EAAI,EAAGC,EAAMH,EAAII,OAAQF,EAAIC,KAC5BJ,EAAaC,EAAIE,GAAID,GAAM,GADMC,KAKvC,OAAOA,GAjBM,I,yCCAjB,I,0/DCUqBG,E,iXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIC,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAIC,WAAWF,W,4CAM/B,MAAO,CACHG,SAAUC,YAAiB,YAC3BC,QAASD,YAAiB,cAC1BE,UAAWC,YAAa,yBACxBC,UAAWD,YAAa,yBACxBE,KAAMF,YAAa,cACnBG,WAAYN,YAAiB,2BAC7BO,MAAOP,YAAiB,gCACxBQ,MAAOR,YAAiB,4B,2CAK5B,cACOS,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,EAAF,KACCjB,IAAIC,WAAWgB,QADhB,IAEFC,SAAUC,c,8BAtCiBC,K,k+DCF1BC,E,iXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIxB,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAIsB,QAAQvB,W,2CAM5B,cACOa,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,OACDjB,IAAIsB,QAAQL,QADb,IAEFC,SAAUC,c,8BAzBmBC,K,2yCCF5BG,E,iXAEb,MAAO,K,gDAIP,MAAO,CACH,CACI1B,GAAI,UACJC,MAAO,mBACPC,OAAQ,CACJ,CACIF,GAAI,QACJC,MAAO,wD,yCAOP0B,GAChB,MAAO,CACH3B,GAAI,CACAkB,KAAM,QACNU,MAAO,OACPC,MAAO,KACPC,MAAO,wBACPC,eAAgB,CAAC,KAErBF,MAAOpB,YAAa,SACpBuB,OAAQ1B,YAAiB,UACzBW,QAAS,CACLA,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,CACJD,UAAWV,YAAa,cACxBS,KAAM,CACFA,KAAM,QACNU,MAAO,SACPC,MAAO,OACPI,QAAS,CACL,CACIjC,GAAI,MACJC,MAAO,OAEX,CACID,GAAI,MACJC,MAAO,UAEX,CACID,GAAI,YACJC,MAAO,qBAGfiC,UAAW,CACPlC,GAAI,KACJC,MAAO,QACP4B,MAAO,WAGfM,UAAW1B,YAAa,aACxB2B,KAAM,CACFnB,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,CACJiB,QAAS/B,YAAiB,gBAC1BwB,MAAOrB,YAAa,iBACpBO,MAAOP,YAAa,gCACpB0B,UAAW1B,YAAa,qBACxB6B,OAAQ,CACJrB,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,CACJU,MAAOrB,YAAa,wBACpB0B,UAAW1B,YAAa,4BACxBO,MAAOP,YAAa,mD,8BAjFNc,K,k+DCI7BC,E,iXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIxB,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAIoC,QAAQrC,W,2CAM5B,cACOa,KADP,IAEIkB,QAAS,CACLf,KAAM,QACNU,MAAO,YACPC,MAAO,QACPC,MAAO,mBACPd,MAAO,CACH,sBAAsB,EACtBwB,OAAO,EACP,eAAe,GAEnB,eAAe,EACfC,QAAS,CACL,CACIzC,GAAI,KACJ6B,MAAO,MAEX,CACI7B,GAAI,QACJ6B,MAAO,UAGfa,KAAM,CACFC,OAAQ,CACJvB,OAAQ,CACJpB,GAAI,CACAkB,KAAM,QACNU,MAAO,OACPE,MAAO,kBACPD,MAAO,MAEX5B,MAAO,CACHiB,KAAM,QACNU,MAAO,OACPE,MAAO,kBACPD,MAAO,aAM3Be,SAAUtC,YAAiB,YAC3BuC,iBAAkBpC,YAAa,oBAC/ByB,UAAW,CACPjB,QAAS,CACLE,UAAW,aAEfC,OAAQ,CACJS,MAAO,CACHX,KAAM,QACNU,MAAO,OACPC,MAAO,kBACPC,MAAO,UAEXgB,OAAQ,CACJ5B,KAAM,QACNU,MAAO,OACPC,MAAO,2BACPC,MAAO,SACPd,MAAO,CACH+B,KAAM,qCAKtB/B,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,OACDjB,IAAIoC,QAAQnB,QADb,IAEFC,SAAUC,c,8BAzFmBC,K,w+DCF5ByB,G,iXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIhD,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAI8C,aAAa/C,W,2CAMjC,cACOa,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,OACDjB,IAAI8C,aAAa7B,QADlB,IAEFC,SAAUC,c,8BAzBkBC,K,s/DCA3B2B,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIlD,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAIgD,YAAYjD,W,2CAMhC,gBACOa,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,SACDjB,IAAIgD,YAAY/B,QADjB,IAEFC,SAAUC,c,gCAzBuBC,K,s/DCAhC6B,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIpD,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAIC,WAAWF,QAE3B,CACIF,GAAI,cACJC,MAAO,sBACPC,OAAQC,IAAIkD,aAAanD,W,2CAMjC,gBACOa,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,SACDjB,IAAImD,WAAWlC,QADhB,IAEFC,SAAUC,OAGlBiC,YAAa,CACTtC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,MACDjB,IAAIkD,aAAajC,gB,gCAvCQG,K,s/DCC3BiC,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIxD,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAIsD,WAAWvD,W,2CAM/B,gBACOa,KADP,IAEIkB,QAAS,CACLf,KAAM,QACNU,MAAO,YACPC,MAAO,QACPC,MAAO,mBACPd,MAAO,CACH,sBAAsB,EACtBwB,OAAO,GAEXC,QAAS,CACL,CACIiB,OAAQ,KACRzD,MAAO,MAEX,CACIyD,OAAQ,QACRzD,MAAO,UAGf0C,OAAQ,CACJ1C,MAAO,0BACPmB,OAAQ,CACJpB,GAAI,CACAkB,KAAM,QACNU,MAAO,OACPE,MAAO,kBACPD,MAAO,MAEX5B,MAAO,CACHiB,KAAM,QACNU,MAAO,OACPE,MAAO,kBACPD,MAAO,SAEXb,MAAO,CACHC,QAAS,CACLC,KAAM,OAEVE,OAAQ,CACJ,OAAQuC,YAA0C,cAAexD,IAAIyD,UAAU1D,YAK/F2D,KAAM,GACNC,OAAQ,IAEZ9C,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,SACDjB,IAAIsD,WAAWrC,QADhB,IAEFC,SAAUC,c,gCAxEwBC,K,s/DCAjCwC,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACI/D,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAI6D,cAAc9D,W,2CAMlC,gBACOa,KADP,IAEIkB,QAAS,CACLf,KAAM,QACNU,MAAO,YACPC,MAAO,QACPC,MAAO,mBACPd,MAAO,CACH,sBAAsB,EACtBwB,OAAO,GAEXC,QAAS,CACL,CACIiB,OAAQ,KACRzD,MAAO,MAEX,CACIyD,OAAQ,QACRzD,MAAO,UAGfyC,KAAM,CACFC,OAAQ,CACJvB,OAAQ,CACJpB,GAAI,CACAkB,KAAM,QACNU,MAAO,OACPE,MAAO,kBACPD,MAAO,MAEX5B,MAAO,CACHiB,KAAM,QACNU,MAAO,OACPE,MAAO,kBACPD,MAAO,SAEXb,MAAO,CACHC,QAAS,CACLC,KAAM,OAEVE,OAAQ,CACJ,OAAQuC,YAA0C,cAAexD,IAAIyD,UAAU1D,cAOvG+D,MAAO,CACHhD,QAAS,CACLC,KAAM,MACNC,UAAW,oBAEfC,OAAQ,CACJ8C,MAAO,CACHjD,QAAS,CACLC,KAAM,MACNC,UAAW,oBAEfC,OAAQ,CACJ+C,IAAK1D,YAAa,wBAClB2D,UAAW,CACPlD,KAAM,QACNU,MAAO,YACPC,MAAO,6BACPY,QAAS,CACL4B,KAAM,CACFrE,GAAI,OACJ6B,MAAO,iBAEXY,QAAS,CACLzC,GAAI,UACJ6B,MAAO,qBAGfb,MAAO,CACH,eAAe,EACf,OAAS,EACT,eAAe,GAEnB0B,KAAM,CACFC,OAAQ,CACJvB,OAAQ,CACJiD,KAAM,CACFnD,KAAM,QACNU,MAAO,OACPC,MAAO,iBAEXY,QAAS,CACLvB,KAAM,QACNU,MAAO,OACPC,MAAO,mBACPb,MAAO,CACH+B,KAAM,qEAO9BuB,QAAS,CACLpD,KAAM,QACNU,MAAO,YACPC,MAAO,wCACPY,QAAS,CACL8B,UAAW,CACPvE,GAAI,YACJ6B,MAAO,mBAGfb,MAAO,CACH,eAAe,EACf,OAAS,EACT,eAAe,GAEnB0B,KAAM,CACFC,OAAQ,CACJvB,OAAQ,CACJmD,UAAW,CACPrD,KAAM,QACNU,MAAO,OACPC,MAAO,0BAU3CK,UAAW,CACPjB,QAAS,CACLE,UAAW,aAEfC,OAAQ,CACJS,MAAO,CACHX,KAAM,QACNU,MAAO,OACPC,MAAO,kBACPC,MAAO,UAEXgB,OAAQ,CACJ5B,KAAM,QACNU,MAAO,OACPC,MAAO,2BACPC,MAAO,SACPd,MAAO,CACH+B,KAAM,qCAKtB/B,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,MACDjB,IAAI6D,cAAc5C,gB,gCA/KcG,K,s/DCDlCiD,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIxE,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAIC,WAAWF,W,2CAM/B,gBACOa,KADP,IAEIkB,QAAS,CACLf,KAAM,QACNU,MAAO,YACPC,MAAO,QACPC,MAAO,mBACPd,MAAO,CACH,sBAAsB,EACtBwB,OAAO,GAEXC,QAAS,CACL,CACIiB,OAAQ,KACRzD,MAAO,MAEX,CACIyD,OAAQ,QACRzD,MAAO,UAGf0C,OAAQ,CACJ1C,MAAO,qCACPmB,OAAQ,CACJpB,GAAI,CACAkB,KAAM,QACNU,MAAO,OACPE,MAAO,kBACPD,MAAO,MAEX5B,MAAO,CACHiB,KAAM,QACNU,MAAO,OACPE,MAAO,kBACPD,MAAO,WAInBgC,KAAM,GACNC,OAAQ,IAEZ9C,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,SACDjB,IAAIC,WAAWgB,QADhB,IAEFC,SAAUC,c,gCAhEsBC,K,s/DCF/BkD,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIzE,GAAI,QACJC,MAAO,mBACPC,OAAQ,CACJ,CACIF,GAAI,eACJC,MAAO,kDAEX,CACID,GAAI,iBACJC,MAAO,mD,2CAQvB,gBACOc,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,CACJC,SAAUC,a,gCAjCiBC,K,s/DCE1B6B,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIpD,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAIyD,UAAU1D,W,2CAM9B,gBACOa,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,SACDjB,IAAIyD,UAAUxC,QADf,IAEFC,SAAUC,c,gCAzBkBC,K,s/DCE3BmD,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACI1E,GAAI,QACJC,MAAO,mBACPC,OAAQ,CACJ,CACIF,GAAI,QACJC,MAAO,wD,2CAQvB,gBACOc,KADP,IAEIkB,QAAS,CACLf,KAAM,QACNU,MAAO,YACPC,MAAO,QACPC,MAAO,mBACPd,MAAO,CACH,sBAAsB,EACtBwB,OAAO,EACP,eAAe,GAEnB,eAAe,EACfC,QAAS,CACL,CACIzC,GAAI,KACJ6B,MAAO,MAEX,CACI7B,GAAI,QACJ6B,MAAO,UAGfa,KAAM,CACFC,OAAQ,CACJ1C,MAAO,0BACPmB,OAAQ,CACJpB,GAAI,CACAkB,KAAM,QACNU,MAAO,OACPE,MAAO,kBACPD,MAAO,MAEX5B,MAAO,CACHiB,KAAM,QACNU,MAAO,OACPE,MAAO,kBACPD,MAAO,aAM3BK,UAAW,CACPjB,QAAS,CACLE,UAAW,aAEfC,OAAQ,CACJS,MAAO,CACHX,KAAM,QACNU,MAAO,OACPC,MAAO,kBACPC,MAAO,UAEXgB,OAAQ,CACJ5B,KAAM,QACNU,MAAO,OACPC,MAAO,2BACPC,MAAO,SACPd,MAAO,CACH+B,KAAM,qCAKtB/B,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,CACJU,MAAOrB,YAAa,eACpBY,SAAUC,a,gCA7FwBC,K,s/DCAjCoD,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACI3E,GAAI,QACJC,MAAO,mBACPC,OAAQ,CACJ,CACIF,GAAI,QACJC,MAAO,wC,2CAQvB,gBACOc,KADP,IAEIkB,QAAS,CACLf,KAAM,QACNU,MAAO,YACPC,MAAO,QACPC,MAAO,mBACPd,MAAO,CACH,sBAAsB,EACtBwB,OAAO,GAEXC,QAAS,CACL,CACIzC,GAAI,KACJ6B,MAAO,MAEX,CACI7B,GAAI,QACJ6B,MAAO,UAGfa,KAAM,CACFC,OAAQ,CACJvB,OAAQ,CACJpB,GAAI,CACAkB,KAAM,QACNU,MAAO,OACPE,MAAO,kBACPD,MAAO,MAEX5B,MAAO,CACHiB,KAAM,QACNU,MAAO,OACPE,MAAO,kBACPD,MAAO,aAM3Bb,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,CACJC,SAAUC,a,gCAnEyBC,K,s/DCDlCqD,G,oXAEb,MAAO,K,gDAIP,MAAO,K,2CAIP,gBACO7D,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,CACJyD,UAAWC,YAAe,cAC1BC,WAAYD,YAAe,eAC3BE,YAAaF,YAAe,gBAC5BG,UAAWH,YAAe,aAC1BI,UAAWzE,YAAa,cACxB0E,SAAUL,YAAe,YACzBM,SAAU3E,YAAa,YACvB4E,SAAU5E,YAAa,YACvB6E,qBAAsB7E,YAAa,0BACnC8E,mBAAoB9E,YAAa,8BACjC+E,aAAc/E,YAAa,iBAC3BgF,YAAahF,YAAa,gBAC1BiF,WAAYjF,YAAa,eACzBkF,YAAalF,YAAa,gBAC1BmF,gBAAiBnF,YAAa,qBAC9BoF,gBAAiBpF,YAAa,qBAC9BqF,qBAAsBC,YAAc,0BACpCC,uBAAwBD,YAAc,4BACtCE,mBAAoBF,YAAc,wBAClCG,mBAAoBzF,YAAa,wBACjC0F,eAAgB1F,YAAa,mBAC7B2F,oBAAqB3F,YAAa,mBAClC4F,2BAA4B5F,YAAa,mBACzC6F,mBAAoBP,YAAc,wBAClC1E,SAAUC,a,gCA1CwBC,K,u5DCCjCgF,G,wQAEjB,WAAaC,GAAQ,a,4FAAA,UACjB,gBACKA,OAASA,EAFG,E,qDAMjB,MAAO,CACH,CACIxG,GAAI,UACJC,MAAO,SACPuG,OAAQC,KAAKD,OAAOE,QAAO,SAACC,GAAD,MAAgB,WAATA,EAAE3G,OAExC,CACIA,GAAI,OACJC,MAAO,2BAEX,CACID,GAAI,QACJC,MAAO,qB,gDAMf,MAAO,CACH,CACID,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAImD,WAAWpD,W,2CAM/B,gBACOa,KADP,IAEIkD,MAAO,CACHhD,QAAS,CACLC,KAAM,MACNC,UAAW,oBAEfC,OAAQ,CACJ8C,MAAO,CACHjD,QAAS,CACLC,KAAM,MACNC,UAAW,oBAEfC,OAAQ,CACJ+C,IAAK1D,YAAa,wBAClB2D,UAAW,CACPlD,KAAM,QACNU,MAAO,YACPC,MAAO,6BACPY,QAAS,CACL4B,KAAM,CACFrE,GAAI,OACJ6B,MAAO,iBAEXY,QAAS,CACLzC,GAAI,UACJ6B,MAAO,qBAGfb,MAAO,CACH,eAAe,EACf,OAAS,EACT,eAAe,GAEnB0B,KAAM,CACFC,OAAQ,CACJvB,OAAQ,CACJiD,KAAM,CACFnD,KAAM,QACNU,MAAO,OACPC,MAAO,iBAEXY,QAAS,CACLvB,KAAM,QACNU,MAAO,OACPC,MAAO,mBACPb,MAAO,CACH+B,KAAM,qEAO9BuB,QAAS,CACLpD,KAAM,QACNU,MAAO,YACPC,MAAO,wCACPY,QAAS,CACL8B,UAAW,CACPvE,GAAI,YACJ6B,MAAO,mBAGfb,MAAO,CACH,eAAe,EACf,OAAS,EACT,eAAe,GAEnB0B,KAAM,CACFC,OAAQ,CACJvB,OAAQ,CACJmD,UAAW,CACPrD,KAAM,QACNU,MAAO,OACPC,MAAO,wBAQnC,aAAcpB,YAAa,0BAC3B,qBAAsBA,YAAa,qBACnC,cAAeA,YAAa,0BAC5B,sBAAuBA,YAAa,sBACpC,aAAcA,YAAa,8CAGnC,cAAeH,YAAiB,kBAChC,cAAeA,YAAiB,kBAChC,eAAgBA,YAAiB,kBACjC,cAAeA,YAAiB,kBAChC,gBAAiBA,YAAiB,2BAClC,aAAcA,YAAiB,sBAC/B,yBAA0BA,YAAiB,gCAC3CU,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,SACDjB,IAAImD,WAAWlC,QADhB,IAEFC,SAAUC,c,gCA5IsBC,K,s/DCF/BqF,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACI5G,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAI0G,KAAK3G,W,2CAMzB,gBACOa,KADP,IAEI+F,KAAM,CACF5F,KAAM,QACNU,MAAO,OACPC,MAAO,QAEXb,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,MACDjB,IAAI0G,KAAKzF,SAGpB2F,UAAW,CACP9F,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,MACDjB,IAAI6G,MAAM5F,gB,gCAtCgBG,K,quFCC5BoD,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACI3E,GAAI,QACJC,MAAO,mBACPC,OAAQ,GACDC,IAAIC,WAAWF,SAG1B,CACIF,GAAI,YACJC,MAAO,qBACPC,OAAQ,CAAC,MAEEC,IAAI8G,YAAY/G,UAI/B,CACIF,GAAI,YACJC,MAAO,qBACPC,OAAQ,CAAC,MAEEC,IAAI+G,YAAYhH,UAI/B,CACIF,GAAI,gBACJC,MAAO,yBACPC,OAAQ,CAAC,MAEEC,IAAIoC,QAAQrC,UAI3B,CACIF,GAAI,gBACJC,MAAO,yBACPC,OAAQ,CAAC,MAEEC,IAAI6D,cAAc9D,a,2CAQrC,gBACOa,KADP,IAEIoG,cAAe7G,YAAiB,kBAChC8G,cAAe9G,YAAiB,kBAChCU,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,SACDjB,IAAIC,WAAWgB,QADhB,IAEFC,SAAUC,OAGlB+F,UAAW,CACPjG,OAAQ,MACDjB,IAAI8G,YAAY7F,SAG3BkG,UAAW,CACPlG,OAAQ,MACDjB,IAAI+G,YAAY9F,SAG3BmG,cAAe,CACXnG,OAAQ,MACDjB,IAAIoC,QAAQnB,SAGvBoG,cAAe,CACXpG,OAAQ,MACDjB,IAAI6D,cAAc5C,gB,gCArFcG,K,s/DCHlC6B,G,oXAEb,MAAO,K,gDAIP,MAAO,K,2CAIP,gBACOrC,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,CACJC,SAAUC,a,gCAlBkBC,K,s/DCD3BwC,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACI/D,GAAI,QACJC,MAAO,mBACPC,OAAQ,CACJ,CACIF,GAAI,QACJC,MAAO,+C,2CAQvB,gBACOc,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,W,gCA5B+BG,K,s/DCClCwC,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACI/D,GAAI,QACJC,MAAO,mBACPC,OAAQ,CACJ,CACIF,GAAI,QACJC,MAAO,+C,2CAQvB,gBACOc,KADP,IAEIqE,SAAU9E,YAAiB,WAAY,wEACvCU,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,W,gCA7B+BG,K,s/DCElCkG,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIzH,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAIuH,OAAOxH,W,2CAM3B,gBACOa,KADP,IAEI4G,QAASlH,YAAa,WACtBO,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,MACDjB,IAAIuH,OAAOtG,gB,gCAzBcG,K,s/DCF3BqG,G,oXAEb,MAAO,K,gDAIP,MAAO,K,2CAIP,gBACO7G,KADP,IAEI8G,OAAQC,YAAe,uB,gCAZWvG,K,s/DCCzBxB,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIC,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAI4H,YAAY7H,W,2CAMhC,MAAO,CACHF,GAAI,CACAkB,KAAM,QACNU,MAAO,OACPC,MAAO,KACPC,MAAO,wBACPC,eAAgB,CAAC,KAErBD,MAAO,CACHZ,KAAM,QACNU,MAAO,OACPC,MAAO,QACPC,MAAO,yBAEXE,OAAQ,CACJd,KAAM,QACNU,MAAO,WACPC,MAAO,SACPC,MAAO,yBAEXd,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,SACDjB,IAAI4H,YAAY3G,QADjB,IAEF,gBAAiBX,YAAa,0B,gCA3CHc,K,s/DCC1ByG,G,oXAEb,MAAO,K,gDAIP,MAAO,K,2CAIP,gBACOjH,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,MACDjB,IAAIC,WAAWgB,gB,gCAlBaG,K,s/DCE9B0G,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIjI,GAAI,QACJC,MAAO,mBACPC,OAAQ,CACJ,CACIF,GAAI,WACJC,MAAO,sBAEX,CACID,GAAI,QACJC,MAAO,wB,2CAQvB,gBACOc,KADP,IAEImH,WAAY5H,YAAiB,eAC7B6H,cAAe1H,YAAa,mCAC5B2H,WAAY3H,YAAa,0BACzB4H,YAAa5H,YAAa,eAC1B6H,mBAAoBhI,YAAiB,sBACrCiI,QAAS,CACLrH,KAAM,QACNU,MAAO,YACPC,MAAO,uBACPY,QAAS,CACL,CACIzC,GAAI,QACJ6B,MAAO,SAEX,CACI7B,GAAI,aACJ6B,MAAO,eAGfa,KAAM,CACFC,OAAQ,CACJvB,OAAQ,CACJoH,WAAY/H,YAAa,6BACzBR,MAAOQ,YAAa,YAIhCO,MAAO,CACH,eAAe,EACf,eAAe,W,gCAxDkBO,K,yzCCJhCkH,G,oXAEb,MAAO,K,gDAIP,MAAO,K,2CAIP,MAAO,Q,gCAVuClH,K,yzCCCjCmH,G,oXAEb,MAAO,K,gDAIP,MAAO,K,2CAIP,MAAO,CACHC,UAAWlI,YAAa,mBACxBmI,MAAOtI,YAAiB,mBACxBuI,SAAUpI,YAAa,aACvBqI,SAAUrI,YAAa,aACvBsI,SAAUtI,YAAa,aACvBuI,WAAYvI,YAAa,qB,gCAhBec,K,yzCCD/B0H,G,oXAEb,MAAO,K,gDAIP,MAAO,K,2CAIP,MAAO,CACHN,UAAWlI,YAAa,mBACxBoI,SAAWpI,YAAa,aACxBqI,SAAWrI,YAAa,aACxB,OAAQ,CACJS,KAAM,QACNU,MAAO,OACPC,MAAO,iBAEXqH,GAAI,CACAhI,KAAM,QACNU,MAAO,OACPC,MAAO,eAEXsH,GAAI,CACAjI,KAAM,QACNU,MAAO,OACPC,MAAO,gBAEXuH,GAAI,CACAlI,KAAM,QACNU,MAAO,OACPC,MAAO,eAEX,OAAQ,CACJX,KAAM,QACNU,MAAO,OACPC,MAAO,uB,gCArC+BN,K,s/DCIjC8H,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIrJ,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAImJ,WAAWpJ,W,4CAM/B,MAAO,CACHG,SAAUC,YAAiB,YAC3BC,QAASD,YAAiB,cAC1BE,UAAWC,YAAa,yBACxBC,UAAWD,YAAa,yBACxBE,KAAMF,YAAa,cACnBG,WAAYN,YAAiB,2BAC7BO,MAAOP,YAAiB,gCACxBQ,MAAOR,YAAiB,4B,2CAK5B,gBACOS,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,MACDjB,IAAImJ,WAAWlI,gB,gCArCUG,K,s/DCF3BgI,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIvJ,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAIqJ,gBAAgBtJ,W,2CAMpC,gBACOa,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,SACDjB,IAAIqJ,gBAAgBpI,QADrB,IAEFC,SAAUC,c,gCAzB4BC,K,s/DCArCkI,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACIzJ,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAIqJ,gBAAgBtJ,W,2CAMpC,gBACOa,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,SACDjB,IAAIqJ,gBAAgBpI,QADrB,IAEFC,SAAUC,c,gCAzBsBC,K,s/DCA/BmI,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACI1J,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAIwJ,KAAKzJ,W,2CAMzB,gBACOa,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,SACDjB,IAAIwJ,KAAKvI,QADV,IAEFC,SAAUC,c,gCAzBiBC,K,s/DCA1BqI,G,oXAEb,MAAO,K,gDAIP,MAAO,CACH,CACI5J,GAAI,QACJC,MAAO,mBACPC,OAAQC,IAAI0J,UAAU3J,W,2CAM9B,gBACOa,KADP,IAEIC,MAAO,CACHC,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,SACDjB,IAAI0J,UAAUzI,QADf,IAEFC,SAAUC,c,gCAzBqBC,K,yzCCF9BkI,G,oXAEb,MAAO,CACH,CACIzJ,GAAI,SACJC,MAAO,a,gDAMf,MAAO,K,2CAIP,MAAO,CACHD,GAAI,CACAkB,KAAM,QACNU,MAAO,OACPC,MAAO,KACPC,MAAO,wBACPC,eAAgB,CAAC,KAErBF,MAAO,CACHX,KAAM,QACNU,MAAO,OACPC,MAAO,QACPC,MAAO,yBAEXE,OAAQ,CACJd,KAAM,QACNU,MAAO,SACPC,MAAO,SACPC,MAAO,yBAEXb,QAAS,CACLA,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,CACJD,UAAWV,YAAa,cACxBS,KAAM,CACFA,KAAM,QACNU,MAAO,SACPC,MAAO,OACPI,QAAS,CACL,CACIjC,GAAI,MACJC,MAAO,OAEX,CACID,GAAI,MACJC,MAAO,UAEX,CACID,GAAI,YACJC,MAAO,qBAGfiC,UAAW,CACPlC,GAAI,KACJC,MAAO,QACP4B,MAAO,WAGfM,UAAW1B,YAAa,aACxB2B,KAAM,CACFnB,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,CACJiB,QAAS/B,YAAiB,gBAC1BwB,MAAOrB,YAAa,iBACpBO,MAAOP,YAAa,gCACpB0B,UAAW1B,YAAa,qBACxB6B,OAAQ,CACJrB,QAAS,CACLC,KAAM,MACNC,UAAW,aAEfC,OAAQ,CACJU,MAAOrB,YAAa,wBACpB0B,UAAW1B,YAAa,4BACxBO,MAAOP,YAAa,mD,gCArFJc,K,s/DCC/BuI,G,kXAEFnI,GACX,OAAI8E,KAAKsD,KAAOtD,KAAKsD,IAAIpI,EAAKqI,MAAMhK,KAC0B,YAAtDyG,KAAKsD,IAAIpI,EAAKqI,MAAMhK,IAAIiK,KAAKC,gBAAgBhJ,KACtC,CACH,CACIlB,GAAI,UACJC,MAAO,YAKhB,K,8CAGc0B,GACrB,OAAI8E,KAAKsD,KAAOtD,KAAKsD,IAAIpI,EAAKqI,MAAMhK,KAC0B,YAAtDyG,KAAKsD,IAAIpI,EAAKqI,MAAMhK,IAAIiK,KAAKC,gBAAgBhJ,KACtC,CACH,CACIlB,GAAI,QACJC,MAAO,gBACPC,OAAQ,CACJ,CACIF,GAAI,gBACJC,MAAO,iCAQxB,K,wCAGQkK,EAAMxI,GAChB8E,KAAKsD,MACNtD,KAAKsD,IAAM,IAEXpI,IACA8E,KAAKsD,IAAIpI,EAAKqI,MAAMhK,IAAMmK,K,yCAIdxI,GAChB,IAAMyI,EAAS,GACf,GAAI3D,KAAKsD,KAAOtD,KAAKsD,IAAIpI,EAAKqI,MAAMhK,IAAK,CACrC,IAAMqK,EAAS5D,KAAKsD,IAAIpI,EAAKqI,MAAMhK,IAC7BkB,EAAOmJ,EAAOJ,MAAQI,EAAOJ,KAAKC,gBAAkBG,EAAOJ,KAAKC,gBAAgBhJ,KAAO,KAChF,WAATA,GACAkJ,EAAOjI,UAAY,CACfjB,KAAM,QACNU,MAAO,OACPC,MAAO,YACPC,MAAO,oBAEXsI,EAAOE,KAAO,CACVpJ,KAAM,QACNU,MAAO,OACPC,MAAO,OACPC,MAAO,qBAEK,eAATZ,EACPkJ,EAAOjI,UAAY,CACfjB,KAAM,QACNU,MAAO,OACPC,MAAO,mBACPC,MAAO,oBAEK,kBAATZ,EACPkJ,EAAO,eAAiB,CACpBlJ,KAAM,QACNU,MAAO,OACPC,MAAO,cACPC,MAAO,oBAEK,eAATZ,EACPkJ,EAAM,UAAgB,CAClBnJ,QAAS,CACLE,UAAW,aAEfC,OAAQ,CACJS,MAAO,CACHX,KAAM,QACNU,MAAO,OACPC,MAAO,kBACPC,MAAO,UAEXgB,OAAQ,CACJ5B,KAAM,QACNU,MAAO,OACPC,MAAO,2BACPC,MAAO,SACPd,MAAO,CACH+B,KAAM,qCAKN,gBAAT7B,GAAmC,kBAATA,GACjCkJ,EAAM,UAAgB,CAClBnJ,QAAS,CACLE,UAAW,aAEfC,OAAQ,CACJS,MAAO,CACHX,KAAM,QACNU,MAAO,OACPC,MAAO,mBAEXiB,OAAQ,CACJ5B,KAAM,QACNU,MAAO,OACPC,MAAO,2BACPb,MAAO,CACH+B,KAAM,qCAKtBqH,EAAO,mBAAqB,CACxBlJ,KAAM,QACNU,MAAO,OACPC,MAAO,cACPC,MAAO,yBAEXsI,EAAM,IAAU,CACZlJ,KAAM,QACNU,MAAO,YACPC,MAAO,UACPY,QAAS,CACL,CACIzC,GAAI,KACJ6B,MAAO,MAEX,CACI7B,GAAI,QACJ6B,MAAO,SAEX,CACI7B,GAAI,QACJ6B,MAAO,UAGf,eAAe,EACfb,MAAO,CACH,eAAe,GAEnB0B,KAAM,CACFC,OAAQ,CACJvB,OAAQ,CACJpB,GAAIS,YAAa,MACjBR,MAAOQ,YAAa,SACpB8J,MAAO,CACHrJ,KAAK,QACLU,MAAO,QACPC,MAAO,UAGfZ,QAAS,CACLC,KAAM,WAKN,WAATA,IACPkJ,EAAM,SAAe3J,YAAa,YAClC2J,EAAM,aAAmB3J,YAAa,kBACtC2J,EAAM,UAAgB9J,YAAiB,aACvC8J,EAAM,SAAe3J,YAAa,kBAClC2J,EAAM,SAAe3J,YAAa,mBAI1C,gBACOM,KADP,IAEIyJ,SAAU,CACNtJ,KAAM,QACNU,MAAO,WACPC,MAAO,WACPC,MAAO,oBAEX2I,UAAW,CACPvJ,KAAM,QACNU,MAAO,OACPC,MAAO,gBACPC,MAAO,oBAEX4I,MAAO,CACHxJ,KAAM,QACNU,MAAO,SACPC,MAAO,QACPC,MAAO,QACPG,QAAS,CACL,CACIjC,GAAI,QACJC,MAAO,SAEX,CACID,GAAI,MACJC,MAAO,OAEX,CACID,GAAI,SACJC,MAAO,YAInB0K,MAAO,CACHzJ,KAAM,QACNU,MAAO,OACPC,MAAO,QACPC,MAAO,SAEXZ,KAAM,CACFA,KAAM,QACNU,MAAO,SACPC,MAAO,sBACPC,MAAO,SACPG,QAAS,CACL,CACIjC,GAAI,SACJC,MAAO,UAEX,CACID,GAAI,gBACJC,MAAO,iBAEX,CACID,GAAI,WACJC,MAAO,YAEX,CACID,GAAI,aACJC,MAAO,cAEX,CACID,GAAI,aACJC,MAAO,mBAEX,CACID,GAAI,UACJC,MAAO,WAEX,CACID,GAAI,SACJC,MAAO,mBAEX,CACID,GAAI,cACJC,MAAO,eAEX,CACID,GAAI,gBACJC,MAAO,iBAEX,CACID,GAAI,SACJC,MAAO,uBAKhBmK,Q,gCAzQsC7I,K,s/DCEhCqJ,G,oXAEb,MAAO,CACH,CACI5K,GAAI,UACJC,MAAO,c,gDAMf,MAAO,K,2CAIP,gBACOc,KADP,IAEI8J,SAAUpK,YAAa,YACvBqK,WAAYrK,YAAa,cACzBsK,YAAatK,YAAa,eAC1BuK,iBAAkBvK,YAAa,qCAC/BwK,gBAAiBxK,YAAa,mDAC9ByK,cAAezK,YAAa,0BAC5B0K,iBAAkB1K,YAAa,mBAAoB,sFACnD2K,eAAgB3K,YAAa,iBAAkB,6EAC/C4K,YAAa/K,YAAiB,eAC9BgL,UAAWhL,YAAiB,yBAC5BiL,YAAa,CACTrK,KAAM,QACNU,MAAO,SACPC,MAAO,cACPe,UAAU,EACVX,QAAS,CACL,CACIjC,GAAI,MACJC,MAAO,OAEX,CACID,GAAI,MACJC,MAAO,OAEX,CACID,GAAI,OACJC,MAAO,QAEX,CACID,GAAI,UACJC,MAAO,YAGfe,MAAO,CACH4B,UAAU,IAGlBV,UAAW,CACPjB,QAAS,CACLE,UAAW,aAEfC,OAAQ,CACJS,MAAO,CACHX,KAAM,QACNU,MAAO,OACPC,MAAO,mBAEXiB,OAAQ,CACJ5B,KAAM,QACNU,MAAO,OACPC,MAAO,2BACPb,MAAO,CACH+B,KAAM,qCAKtByI,MAAO,CACHtK,KAAM,QACNU,MAAO,OACPC,MAAO,6BACPb,MAAO,CACHc,MAAO,iBAGf2J,KAAM,CACFvK,KAAM,QACNU,MAAO,OACPC,MAAO,6BACPb,MAAO,CACHc,MAAO,iBAGf4J,cAAe,CACXxK,KAAM,QACNU,MAAO,YACPC,MAAO,wBACPY,QAAS,CACL,CACIzC,GAAI,SACJC,MAAO,UAEX,CACID,GAAI,QACJC,MAAO,UAGfe,MAAO,CACH,sBAAsB,EACtBwB,OAAO,EACP,eAAe,GAEnB,eAAe,EACfE,KAAM,CACFC,OAAQ,CACJvB,OAAQ,CACJsF,OAAQ,CACJxF,KAAM,QACNU,MAAO,OACPC,MAAO,cAEX8J,MAAO,CACHzK,KAAM,QACNU,MAAO,OACPC,MAAO,oBAM3B+J,GAAInL,YAAa,gBACjB2I,GAAI3I,YAAa,cACjB0I,GAAI1I,YAAa,eACjByI,GAAIzI,YAAa,qB,gCAlIcc,K,mpDCsC5B,QACXP,MAAO,CACH6K,gBAAiBC,OAErBC,KAJW,WAMP,IAAMC,EAAoB,CACtB,gBAAiB,IAAIjM,EACrB,qBAAsB,IAAIkM,EAC1B,kBAAmB,IAAIzK,EACvB,kBAAmB,IAAI0K,EACvB,iBAAkB,IAAIlJ,GACtB,uBAAwB,IAAIE,GAC5B,iBAAkB,IAAIE,GACtB,wBAAyB,IAAII,GAC7B,wBAAyB,IAAIO,GAC7B,sBAAuB,IAAIS,GAC3B,gBAAiB,IAAIC,GACrB,oBAAqB,IAAI0H,GACzB,yBAA0B,IAAIxH,GAC9B,wBAAyB,IAAID,GAC7B,qBAAsB,IAAI6B,GAC1B,sBAAuB,IAAIgD,GAC3B,qBAAsB,IAAIE,GAC1B,gBAAiB,IAAIC,GACrB,oBAAqB,IAAIE,GACzB,kBAAmB,IAAIwC,GACvB,wBAAyB,IAAIxH,GAC7B,oBAAqB,IAAIyH,GACzB,oBAAqB,IAAIC,GACzB,qBAAsB,IAAIC,GAC1B,oBAAqB,IAAIC,GACzB,iBAAkB,IAAI/E,GACtB,oBAAqB,IAAIG,GACzB,0BAA2B,IAAII,GAC/B,uBAAwB,IAAIC,GAC5BuD,MAAO,IAAIiB,GACX/I,OAAQ,IAAIoG,GACZ,SAAY,IAAIb,GAChB,SAAY,IAAIR,GAChB,OAAU,IAAIC,GACd,sBAAuB,IAAIgE,GAC3B,yBAA0B,IAAI9B,GAC9B,uBAAwB,IAAIvB,IAG1BsD,EAAwB,GAC9B,GAAIlG,KAAKoF,gBACLc,EAAsBC,KAAtB,MAAAD,EAAqB,GAASlG,KAAKoF,sBAChC,CACH,IAAK,IAAMgB,KAAOb,EAAmB,CACjC,IAAMc,EAAQD,EAAIE,MAAM,KACxB,GAAiB,OAAbD,EAAM,GAAa,CACnB,IAAM7M,EAAQ6M,EAAME,OAAO,GAC3B/M,EAAM,GAAKA,EAAM,GAAGgN,MAAM,EAAG,GAAGC,cAAgBjN,EAAM,GAAGgN,MAAM,GAC/DN,EAAsBC,KAAK,CACvB5M,GAAI6M,EACJ5M,MAAOA,EAAMkN,KAAK,KAClB3B,MAAO,UAInB,IAAK,IAAMqB,KAAOO,OAAOC,sBAAuB,CAC5C,IAAMP,EAAQD,EAAIE,MAAM,KACxB,GAAiB,OAAbD,EAAM,GAAa,CACnB,IAAM7M,EAAQ6M,EAAME,OAAO,GAC3B/M,EAAM,GAAKA,EAAM,GAAGgN,MAAM,EAAG,GAAGC,cAAgBjN,EAAM,GAAGgN,MAAM,GAC/DjB,EAAkBa,GAAOO,OAAOC,sBAAsBR,GACtDF,EAAsBC,KAAK,CACvB5M,GAAI6M,EACJ5M,MAAOA,EAAMkN,KAAK,KAClB3B,MAAO,aAKnBmB,EAAsBC,KAAK,CACvB5M,GAAI,QACJC,MAAO,QACPuL,MAAO,SAEXmB,EAAsBC,KAAK,CACvB5M,GAAI,SACJC,MAAO,mBACPuL,MAAO,SAEXmB,EAAsBC,KAAK,CACvB5M,GAAI,YACJC,MAAO,mBACPuL,MAAO,SAEXmB,EAAsBW,MAAK,SAACC,EAAGC,GAAJ,OAAW,GAAKD,EAAEtN,OAAOwN,cAAcD,EAAEvN,UAIxE,OAFA+L,EAAkB,sBAAsBxF,OAASmG,EAE1C,CACHnG,OAAQmG,EACRX,sBAGR0B,QAAS,CACLC,kBAAmB,SAAUC,EAAOjM,GAAM,WACtC,MAAO,CACHT,KAAM,SACN4F,KAAM,sBACNC,UAAW,CACP8G,OAAO,EACPtD,MAAO,aAEXvJ,MAAO,CACH8F,MAAM,EACN+G,OAAO,EACPC,MAAO,WAGH,IAFA,IAAMC,EAAO,GACTC,EAAOrM,EACJqM,GAAM,CACW,MAApB,IAAKA,EAAKC,SACNF,EAAKnB,KAAKoB,EAAKhE,MAAMhK,KACrB,UAAIgO,EAAKrC,MAAMuC,aAAf,aAAI,EAAkB5D,OAClByD,EAAKnB,KAAKoB,EAAKrC,MAAMuC,MAAM5D,OAGnC0D,EAAOA,EAAKG,SACoB,uBAApBH,EAAKhE,MAAM9I,MACnB6M,EAAKnB,KAAK,UAGlB,IAAIwB,EAAQC,SAASC,cAAc,YAInCD,SAASE,KAAKC,YAAYJ,GAE1BA,EAAMzC,MAAQoC,EAAKZ,KAAK,KACxBiB,EAAMK,SACNJ,SAASK,YAAY,QACrBL,SAASE,KAAKI,YAAYP,GAC1B,EAAKQ,OAAOC,MAAMC,KAAKC,UAAU,cAAe,eAKhEC,qBAAsB,SAAUpB,EAAOjM,GAAM,WACzC,MAAO,CACHT,KAAM,SACN4F,KAAM,mBACNC,UAAW,CACP8G,OAAO,EACPtD,MAAO,WAEXvJ,MAAO,CACH8F,MAAM,EACN+G,OAAO,EACPC,MAAO,WACH,IAAIM,EAAQC,SAASC,cAAc,YAInCD,SAASE,KAAKC,YAAYJ,GAE1BA,EAAMzC,MAAQsD,KAAKC,UAAUvN,EAAKqI,OAClCoE,EAAMK,SACNJ,SAASK,YAAY,QACrBL,SAASE,KAAKI,YAAYP,GAC1B,EAAKQ,OAAOC,MAAMC,KAAKC,UAAU,iBAAkB,eAKnEI,0BAA2B,SAAUvB,EAAOjM,GAAM,WAC9C,MAAO,CACHT,KAAM,SACN4F,KAAM,oBACNC,UAAW,CACP8G,OAAO,EACPtD,MAAO,WAEXvJ,MAAO,CACH8F,MAAM,EACN+G,OAAO,EACPC,MAAO,WACH,IAAMsB,EAAUH,KAAKI,MAAMC,MACrBC,EAAW,EAAKC,UAAUH,MAAMD,GACtCG,EAAS5D,MAAQ,CACb8D,SAAU,CACNxF,KAAM,CACFC,gBAAiB,CACblK,GAAIoP,EAAQpP,MAIxBkO,MAAO,CACH5D,KAAM,OAId,IAAMoF,EAAyB,EAAK1D,kBAAkBrK,EAAKqI,MAAM9I,MAC7DwO,GAA0BA,EAAuBC,cAAchO,GAAM7B,OAAS,IAC9EyP,EAAS5D,MAAMuC,MAAM5D,KAAOoF,EAAuBC,cAAchO,GAAM,GAAG3B,IAG9E2B,EAAKwM,OAAOyB,SAASL,OAKrCM,4BAA6B,SAAUjC,EAAOjM,GAAM,WAChD,MAAO,CACHT,KAAM,SACN4F,KAAM,mBACNC,UAAW,CACP8G,OAAO,EACPtD,MAAO,WAEXvJ,MAAO,CACH8F,MAAM,EACN+G,OAAO,EACPC,MAAO,WACHgC,UAAUC,UAAUC,WACnBC,MAAK,SAAAX,GACF,IAAMF,EAAUH,KAAKI,MAAMC,GACrBC,EAAW,EAAKC,UAAUH,MAAMD,GACtCG,EAAS5D,MAAQ,CACb8D,SAAU,CACNxF,KAAM,CACFC,gBAAiB,CACblK,GAAIoP,EAAQpP,MAIxBkO,MAAO,CACH5D,KAAM,OAId,IAAMoF,EAAyB,EAAK1D,kBAAkBrK,EAAKqI,MAAM9I,MAC7DwO,GAA0BA,EAAuBC,cAAchO,GAAM7B,OAAS,IAC9EyP,EAAS5D,MAAMuC,MAAM5D,KAAOoF,EAAuBC,cAAchO,GAAM,GAAG3B,IAG9E2B,EAAKiO,SAASL,MAtBlB,OAwBO,SAAAW,GACH,EAAKtB,OAAOC,MAAMC,KAAKC,UAAU,mCAMrDoB,gBAAiB,SAAUvC,EAAOjM,GAC9B,MAAO,CACHT,KAAM,UACN6F,UAAW,CACP8G,OAAO,EACPtD,MAAO,OAEXzD,KAAM,gBACN9F,MAAO,CACH6M,OAAO,EACP/G,MAAM,GAEVsJ,QAAS,SACTzI,QAAS,wCAA0ChG,EAAKqI,MAAMhK,GAAK,IACnEqQ,SAAU,SAACD,GACHA,GACAzO,EAAK2O,UAKrBC,kBAAmB,SAAU3C,EAAOjM,EAAM6O,GACtC,IAAMpP,EAASqF,KAAKuF,kBAAkBrK,EAAKqI,MAAM9I,MAAQuF,KAAKuF,kBAAkBrK,EAAKqI,MAAM9I,MAAQ,GAC7FuP,EAAO,CACTvP,KAAM,SACNsP,YACAzJ,UAAW,CACPwD,MAAO,UACPsD,OAAO,GAEX/G,KAAM,eACN9F,MAAO,CACH8F,MAAM,EACN+G,OAAO,GAEXzM,UAMJ,OAJIA,EAAOsP,wBACPD,EAAKrP,OAASA,EAAOsP,sBAAsB/O,IAGxC8O,GAEXE,mBAAoB,SAAU/C,EAAOjM,GAAM,WACvC,MAAO,CACHT,KAAM,SACN4F,KAAM,wBACNC,UAAW,CACP8G,OAAO,EACPtD,MAAO,UAEXvJ,MAAO,CACH8F,MAAM,EACN+G,OAAO,EACPC,MAAO,WACH,IAAM8C,EAAU3B,KAAKI,MAAMJ,KAAKC,UAAL,MAAoBvN,EAAKqI,SACpD4G,EAAQ5Q,IAAM,MAAQ6Q,KAAKC,SAAWC,OAAOC,kBAAkBC,OAAO,EAAG,IACzE,IAAM1B,EAAW,EAAKC,UAAUH,MAAMuB,GACtCrB,EAAS5D,MAAQsD,KAAKI,MAAMJ,KAAKC,UAAL,MAAoBvN,EAAKgK,SACrD,EAAKuF,sBAAsB3B,EAAU,oBAAqBqB,EAAQ5Q,IAClE2B,EAAKwM,OAAOyB,SAASL,OAKrC4B,cAAe,SAAUvD,EAAOjM,EAAM6E,GAClC,MAAO,CACHtF,KAAM,OACN6F,UAAW,CACP8G,OAAO,EACPtD,MAAO,WAEXzD,KAAM,mCACN9F,MAAO,CACH6M,OAAO,EACP/G,MAAM,GAEVsK,UAAW,CACPnQ,QAAS,CACLC,KAAM,YACNiB,UAAW,SACXhB,UAAW,iBACXiB,KAAM,CACFD,UAAW,SACXL,MAAO,OACPd,MAAO,CACHwB,OAAO,GAEXF,OAAQ,CACJH,UAAW,cACXnB,MAAO,CACHwB,OAAO,OAM3BpB,OAAQ,CACJiQ,MAAO,CACHnQ,KAAM,QACNU,MAAO,SACPZ,MAAO,CACH8F,MAAM,EACN+G,OAAO,EACPC,MAAO,WACHnM,EAAK2P,SAAS,KAGtBvK,UAAW,CACP8G,OAAO,GAEX/G,KAAM,iCAEVyK,GAAI,CACArQ,KAAM,QACNU,MAAO,SACPZ,MAAO,CACH8F,MAAM,EACN+G,OAAO,EACPC,MAAO,WACCnM,EAAK6P,WAAa,GAClB7P,EAAK2P,SAAS3P,EAAK6P,WAAa,KAI5CzK,UAAW,CACP8G,OAAO,GAEX/G,KAAM,mBAEV2K,KAAM,CACFvQ,KAAM,QACNU,MAAO,SACPZ,MAAO,CACH8F,MAAM,EACN+G,OAAO,EACPC,MAAO,WACCnM,EAAK6P,WAAa7P,EAAKwM,OAAOuD,SAAS5R,OAAS,GAChD6B,EAAK2P,SAAS3P,EAAK6P,WAAa,KAI5CzK,UAAW,CACP8G,OAAO,GAEX/G,KAAM,qBAEV6K,OAAQ,CACJzQ,KAAM,QACNU,MAAO,SACPZ,MAAO,CACH8F,MAAM,EACN+G,OAAO,EACPC,MAAO,WACHnM,EAAK2P,SAAS3P,EAAKwM,OAAOuD,SAAS5R,OAAS,KAGpDiH,UAAW,CACP8G,OAAO,GAEX/G,KAAM,uCAKtB8K,aAAc,SAAUhE,EAAOiE,EAAYrL,GAAQ,WAE/C,OADKA,IAAUA,EAASC,KAAKD,QACtB,CACHtF,KAAM,SACN4F,KAAM,WACNC,UAAW,CACPwD,MAAO,UACPsD,OAAO,GAEX7M,MAAO,CACH8F,MAAM,EACN+G,OAAO,GAEXuD,UAAW,CACPnQ,QAAS,CACLC,KAAM,YACNiB,UAAW,WAGnBf,OAAQ,CACJF,KAAM,CACFA,KAAM,QACNU,MAAO,eACPC,MAAO,kCACPC,MAAO,OACPgQ,OAAQ,CACJ,CACI9R,GAAI,OACJC,MAAO,YAEX,CACID,GAAI,UACJC,MAAO,YAGfiC,UAAW,CACPlC,GAAI,KACJC,MAAO,QACP4B,MAAO,UAEXI,QAASuE,EACTxF,MAAO,CACH+Q,UAAU,EACVjQ,MAAO,QAEXkQ,MAAM,EACNlE,MAAO,SAACmE,GACJ,IAAM7C,EAAU,CACZpP,IAAK,MAAQ6Q,KAAKC,SAAWC,OAAOC,kBAAkBC,OAAO,EAAG,IAChEhR,MAAOgS,EAAQhS,MACfiB,KAAM+Q,EAAQjS,IAEZuP,EAAW,EAAKC,UAAUH,MAAMD,GACtCG,EAAS5D,MAAQ,CACb8D,SAAU,CACNxF,KAAM,CACFC,gBAAiB,CACblK,GAAIoP,EAAQpP,MAIxBkO,MAAO,CACH5D,KAAM,OAId,IAAMoF,EAAyB,EAAK1D,kBAAkB6F,EAAW7H,MAAM9I,MACnEwO,GAA0BA,EAAuBC,cAAckC,GAAY/R,OAAS,IACpFyP,EAAS5D,MAAMuC,MAAM5D,KAAOoF,EAAuBC,cAAckC,GAAY,GAAG7R,IAGpF6R,EAAWjC,SAASL,QAMxC2C,oBAAqB,SAAUvQ,EAAMuM,GACjC,MAAO,CACHhN,KAAM,OACN6F,UAAW,CACP8G,OAAO,EACPtD,MAAO,aAEXzD,KAAM,cACN9F,MAAO,CACH6M,OAAO,EACP/G,MAAM,GAEVsK,UAAW,CACPnQ,QAAS,CACLC,KAAM,YACNiB,UAAW,WAGnBf,OAAQ,CACJkJ,KAAM,CACFpJ,KAAM,QACNU,MAAO,cACPC,MAAO,iBACPI,QAASiM,MASzBiE,4CAvaK,WAua0C,WAC3C,MAAO,CACHC,UAAW,SAAC9H,EAAM3I,GACd,OAAO,GAEX0Q,WAAY,SAAC/H,EAAM3I,GACf,IAAM2Q,EAAU,GAChB,OAAQhI,GACR,IAAK,SACI3I,EAAKsM,SAmBC,EAAKsE,UAAY,EAAKvG,kBAAkB,EAAKuG,YACpDD,EAAQE,WAAa,CACjBtR,KAAM,SACN6F,UAAW,CACPwD,MAAO,OACPsD,OAAO,GAEX/G,KAAM,mBACN9F,MAAO,CACH8F,MAAM,EACN+G,OAAO,GAEXzM,OAAQ,EAAK4K,kBAAkB,EAAKuG,UAAUE,mBAAmB9Q,MA9BrE2Q,EAAQxO,OAAS,EAAKqM,gBAClB,EAAKuC,OAAOC,QACZhR,GAEJ2Q,EAAQM,UAAY,EAAKjF,kBACrB,EAAK+E,OAAOC,QACZhR,GAEJ2Q,EAAQO,KAAO,EAAK1B,cAChB,EAAKuB,OAAOC,QACZhR,GAEJ2Q,EAAQQ,UAAY,EAAKnC,mBACrB,EAAK+B,OAAOC,QACZhR,GAEJ2Q,EAAQS,KAAO,EAAK/D,qBAAqB,EAAK0D,OAAOC,QAAShR,GAC9D2Q,EAAQU,UAAY,EAAK7D,0BAA0B,EAAKuD,OAAOC,QAAShR,IAgB5E,MACJ,IAAK,UACD,IAAKA,EAAKsM,SAAU,CAChB,IAAMgF,EAAqB,EAAKjH,kBAAkBrK,EAAKwM,OAAOnE,MAAM9I,MAChE+R,GAAsBA,EAAmBtD,cAAchO,GAAM7B,OAAS,IACtEwS,EAAQpE,MAAQ,EAAKgE,oBACjBvQ,EACAsR,EAAmBtD,cAAchO,KAIrB,uBAApBA,EAAKqI,MAAM9I,OACXoR,EAAQY,YAAc,EAAKrD,4BAA4B,EAAK6C,OAAOC,QAAShR,GAC5E2Q,EAAQa,IAAM,EAAKvB,aAAa,EAAKc,OAAOC,QAAShR,IAErD,EAAKqK,kBAAkBrK,EAAKqI,MAAM9I,OAAS,EAAK8K,kBAAkBrK,EAAKqI,MAAM9I,MAAMyO,eAC/E,EAAK3D,kBAAkBrK,EAAKqI,MAAM9I,MAAMyO,cAAchO,GAAM7B,OAAS,IACrEwS,EAAQa,IAAM,EAAKvB,aAAa,EAAKc,OAAOC,QAAShR,IAGzDA,EAAKqI,MAAM9I,KAAKkS,WAAW,WAC3Bd,EAAQa,IAAM,EAAKvB,aAAa,EAAKc,OAAOC,QAAShR,EAAM,EAAK6E,OAAOE,QAAO,SAACC,GAAD,OAAQ,CAAC,QAAS,UAAU0M,SAAS1M,EAAE3G,SAErH2B,EAAKqI,MAAM9I,KAAKkS,WAAW,eAC3Bd,EAAQa,IAAM,EAAKvB,aAAa,EAAKc,OAAOC,QAAShR,EAAM,EAAK6E,OAAOE,QAAO,SAACC,GAAD,MAAgB,UAATA,EAAE3G,QAE3FsS,EAAQ7C,SAAW,EAAKc,kBACpB,EAAKmC,OAAOC,QACZhR,GACA,SAAAwI,GACQA,GAAQA,EAAKF,MAAQE,EAAKF,KAAKC,iBAAmBC,EAAKF,KAAKC,gBAAgBlK,IACxE2B,EAAKqI,MAAMhK,KAAOmK,EAAKF,KAAKC,gBAAgBlK,KAC5C2B,EAAKqI,MAAMhK,GAAKmK,EAAKF,KAAKC,gBAAgBlK,IAG9C,EAAKgM,kBAAkBrK,EAAKqI,MAAM9I,OAAS,EAAK8K,kBAAkBrK,EAAKqI,MAAM9I,MAAMoS,mBACnF,EAAKtH,kBAAkBrK,EAAKqI,MAAM9I,MAAMoS,kBAAkBnJ,EAAMxI,MAMhF,OAAO2Q,KAQnBiB,sBApgBK,SAogBkBb,GAAQ,WACrBc,EAAW,GA0FjB,OAzFgC,SAA1BC,EAA2B7F,EAAO8F,GAKpC9F,EAAM+F,SAAQ,SAAAhS,GAEV,IAAIiS,EAAyB,UAEzBC,EAAmB,KAEvB,GAAIlS,EAAKqI,MAAM9I,MAA4B,uBAApBS,EAAKqI,MAAM9I,KAG9B,GAFA2S,EAAmB,EAAK7H,kBAAkBrK,EAAKqI,MAAM9I,MAEjDS,EAAKqI,MAAM9I,KAAK4S,SAAS,SAAU,CACnC,IAAMC,EAAWpS,EAAKqI,MAAM9I,KAAK6L,MAAM,KACvC2G,EAAI/R,EAAKqI,MAAMhK,IAAM,CACjBkB,KAAM,QACNU,MAAOmS,EAAS9G,MAAM,EAAG8G,EAASjU,OAAS,GAAGqN,KAAK,WAItD,GAAIxL,EAAKqI,MAAM9I,KAAKkS,WAAW,aAAc,CAC9CQ,EAAyB,SACzB,IAAMG,EAAWpS,EAAKqI,MAAM9I,KAAK6L,MAAM,KACvC2G,EAAI/R,EAAKqI,MAAMhK,IAAM,CACjBkB,KAAM,QACNsK,MAAOuI,EAAS9G,MAAM,GAAGE,KAAK,KAC9B2E,OAAQ,SAKZ4B,EAAI/R,EAAKqI,MAAMhK,IAAM,CACjBgU,cAAerS,EAAKqI,MAAM9I,WAKlC2S,EAAmB,EAAK7H,kBAAkB,sBAC1C0H,EAAI/R,EAAKqI,MAAMhK,IAAM,CACjBA,GAAI2B,EAAKqI,MAAMhK,GACfoB,OAAQ,IAEZwS,EAAyB,SAK7B,GAAIC,EAAkB,CAClB,IAAMI,EAAeJ,EAAiBK,0BAA2BvS,EAAKgK,OAAShK,EAAKgK,MAAM8D,SAAW9N,EAAKgK,MAAM8D,SAAW,IAC3HiE,EAAI/R,EAAKqI,MAAMhK,IAAf,SACO0T,EAAI/R,EAAKqI,MAAMhK,KACfiU,GAKPtS,EAAKgK,OAAShK,EAAKgK,MAAM6G,aACzBkB,EAAI/R,EAAKqI,MAAMhK,IAAf,SACO0T,EAAI/R,EAAKqI,MAAMhK,KADtB,IAEIwS,WAAY,MAAK7Q,EAAKgK,MAAM6G,eAKhC7Q,EAAK+P,SAAS5R,OAAS,IACnB+T,GAAoBA,EAAiBlE,cAAchO,GAAM7B,OAAS,GAElE+T,EAAiBlE,cAAchO,GAAMgS,SAAQ,SAACrJ,GACrCoJ,EAAI/R,EAAKqI,MAAMhK,IAAIsK,EAAKtK,MACzB0T,EAAI/R,EAAKqI,MAAMhK,IAAIsK,EAAKtK,IAAM,IAElCyT,EAAwB9R,EAAK+P,SAAShL,QAAO,SAACyN,GAAD,OAAWA,EAAMxI,OAASwI,EAAMxI,MAAMuC,OAASiG,EAAMxI,MAAMuC,MAAM5D,OAASA,EAAKtK,MAAK0T,EAAI/R,EAAKqI,MAAMhK,IAAIsK,EAAKtK,QAI5J0T,EAAI/R,EAAKqI,MAAMhK,IAAI4T,KACpBF,EAAI/R,EAAKqI,MAAMhK,IAAI4T,GAA0B,IAGjDH,EACI9R,EAAK+P,SAAShL,QAAO,SAACyN,GAAD,OAAYA,EAAMxI,QAAUwI,EAAMxI,MAAMuC,QAAUiG,EAAMxI,MAAMuC,MAAM5D,QACzFoJ,EAAI/R,EAAKqI,MAAMhK,IAAI4T,QAKnCH,CAAwBf,EAAQc,GACzBA,GAOXY,0BAtmBK,SAsmBsBZ,GAAU,WAqKjC,OApKgB,SAAVa,EAAWtI,GAAwC,IAAlCuI,EAAkC,uDAAtB,KAAMhK,EAAgB,uDAAT,KACtCiK,EAAO,GADwC,WAE1CC,GACP,IAAIC,EAAW,qBACXC,EAASF,EAEb,GAAIzI,EAAKyI,GAAMtT,KACX,OAAQ6K,EAAKyI,GAAMtT,MACnB,IAAK,QACDuT,EAAW,MAAQ1I,EAAKyI,GAAM5S,MAAQ,SACtC,MACJ,IAAK,QACD6S,EAAW,YAAc1I,EAAKyI,GAAMhJ,MACpC,MACJ,IAAK,YACDiJ,EAAW1I,EAAKyI,GAAMrS,UACtB,MACJ,QAEQsS,EADA1I,EAAKyI,GAAMR,cACAjI,EAAKyI,GAAMR,cAEXjI,EAAKyI,GAAMtT,UAIvB6K,EAAKyI,GAAMR,eAClBS,EAAW1I,EAAKyI,GAAMR,cACtBU,EAAS3I,EAAKyI,GAAMxU,IACbsU,GACPG,EAAWH,EACXI,EAAS3I,EAAKyI,GAAMxU,IAEpB0U,EAAS3I,EAAKyI,GAAMxU,GAExB,IAAMoP,EAAU,CACZpP,GAAI0U,EACJxT,KAAMuT,GAEJlF,EAAW,EAAKC,UAAUH,MAAMD,GAClCsC,EAAW,GACX3F,EAAKyI,GAAMpT,OACXsQ,EAAW2C,EAAQtI,EAAKyI,GAAMpT,QACvB2K,EAAKyI,GAAM1C,SAClBJ,EAAW2C,EAAQtI,EAAKyI,GAAM1C,OAAQ,UAG1C,IAAI6C,EAAa,GACbC,EAAe,GAEbC,EAAc,CAChB,SACA,SACA,aACA,QAIJ,IAAK,IAAMC,KAAS/I,EAAKyI,GACrB,GAAIK,EAAYE,QAAQD,GAAS,EAC7B,GAAiC,WAA7B,GAAO/I,EAAKyI,GAAMM,IAMlB,IAAK,IAAME,KALPlJ,MAAMmJ,QAAQlJ,EAAKyI,GAAMM,IACzBF,EAAaE,GAAS,GAEtBF,EAAaE,GAAS,GAEL/I,EAAKyI,GAAMM,GAC5B,GAAe,SAAXE,EACAJ,EAAaE,GAAOE,GAAUjJ,EAAKyI,GAAMM,GAAOE,QAKhD,IAAK,IAAME,KAHNP,EAAWG,KACZH,EAAWG,GAAS,IAEJ/I,EAAKyI,GAAMM,GAAOE,GAClCL,EAAWG,GAAOlI,KAAK,CACnBsI,MAAOA,EACPC,SAAUpJ,EAAKyI,GAAMM,GAAOE,GAAQE,UAMpDN,EAAaE,GAAS/I,EAAKyI,GAAMM,GAM7C,IAAMjB,EAAmB,EAAK7H,kBAAkByI,GAChD,GAAIZ,EAAkB,CACdA,EAAiBP,mBAEjBO,EAAiBP,kBAAkB,CAC/BrJ,KAAM,CACFC,gBAAiB0K,EACjBQ,cAAeT,IAEpBpF,GAGP,IAAMrB,EAAQ2F,EAAiBlE,cAAcJ,GAC7CrB,EAAMyF,SAAQ,SAACrJ,GACc,MAArByB,EAAKyI,GAAMlK,EAAKtK,MAChB,EAAA0R,GAAS9E,KAAT,WAAiByH,EAAQtI,EAAKyI,GAAMlK,EAAKtK,IAAK,KAAMsK,EAAKtK,SAKjE6U,EAAYjI,KAAZ,MAAAiI,EAAW,GAAS3G,EAAMmH,KAAI,SAACzV,GAAD,OAAOA,EAAEI,QAW3C,IAAK,IAAM8U,KARXpD,EAASiC,SAAQ,SAAAQ,GACb5E,EAASK,SAASuE,MAKtBQ,EAAa,GACbC,EAAe,GACK7I,EAAKyI,GACrB,GAAIK,EAAYE,QAAQD,GAAS,EAC7B,GAAiC,WAA7B,GAAO/I,EAAKyI,GAAMM,IAMlB,IAAK,IAAME,KALPlJ,MAAMmJ,QAAQlJ,EAAKyI,GAAMM,IACzBF,EAAaE,GAAS,GAEtBF,EAAaE,GAAS,GAEL/I,EAAKyI,GAAMM,GAC5B,GAAe,SAAXE,EACAJ,EAAaE,GAAOE,GAAUjJ,EAAKyI,GAAMM,GAAOE,QAKhD,IAAK,IAAME,KAHNP,EAAWG,KACZH,EAAWG,GAAS,IAEJ/I,EAAKyI,GAAMM,GAAOE,GAClCL,EAAWG,GAAOlI,KAAK,CACnBsI,MAAOA,EACPC,SAAUpJ,EAAKyI,GAAMM,GAAOE,GAAQE,UAMpDN,EAAaE,GAAS/I,EAAKyI,GAAMM,GAI7CvF,EAAS5D,MAAQ,CACb8D,SAAU,CACNxF,KAAM,CACFC,gBAAiB0K,EACjBQ,cAAenG,KAAKI,MAAMJ,KAAKC,UAAUyF,IACzCW,YAAaV,EAAaU,cAGlCpH,MAAO,CACH5D,KAAMA,IAIdiK,EAAK3H,KAAK2C,IA7Jd,IAAK,IAAMiF,KAAQzI,EAAM,EAAdyI,GA+JX,OAAOD,EAEOF,CAAQb,M,wgCC75BvB,QACX9F,QAAS,CACL6H,WADK,SACMxJ,GACP,IAAMwI,EAAO9N,KAAK2N,0BAAL,MACRrI,EAAK2G,OAAO1S,GAAK+L,EAAK2G,SAE3BjM,KAAKiM,OAAS,CACVC,QAAS4B,GAEb9N,KAAK+O,UAAYzJ,EAAK0J,KACtBhP,KAAKA,KAAKiP,wBAA0B3J,EAAK1B,OACrC0B,EAAKwG,UAAYxG,EAAKwG,SAASlO,OAC/BoC,KAAK8L,SAAWxG,EAAKwG,SAASlO,KAC9BoC,KAAKiM,OAAOC,QAAQ,GAAGhH,MAAM6G,WAAazG,EAAKwG,SAASvR,QAGhE2U,aAfK,WA6BD,MAXmB,CACfjD,OAAQ,MAHKjM,KAAK8M,sBAAsB9M,KAAKiM,OAAOC,SACpBlM,KAAKiM,OAAOC,QAAQ,GAAG3I,MAAMhK,KAK7DyV,KAAMhP,KAAK+O,UACXnL,OAAQ5D,KAAKA,KAAKiP,wBAClBnD,SAAU,CACNlO,KAAMoC,KAAK8L,SACXvR,MAAOyF,KAAKiM,OAAOC,QAAQ,GAAGhH,MAAQlF,KAAKiM,OAAOC,QAAQ,GAAGhH,MAAM6G,WAAa,MAK5FoD,WA/BK,WAgCDnP,KAAKoP,kBAAkB5G,KAAKC,UAAUzI,KAAKkP,eAAgB,KAAM,GAAjElP,IAEJqP,QAlCK,WAkCK,WACNrP,KAAKsP,MAAM3F,QACN4F,KACG,QACA,yDAA0D,CACtDzL,MAAO,QAGd0F,MAAK,SAAAG,GACF,GAAIA,EAAS,CACT,EAAK,EAAKsF,wBAA0B,GACpC,IAAMnB,EAAO,EAAK0B,MAAM1B,KACpB,EAAK0B,MAAM1B,KAAO,CACdvU,GAAI,WACJkB,KAAM,qBACNwQ,SAAU,IAElB,EAAKgB,OAAS,CACVC,QAAS,CAAC,EAAKnD,UAAUH,MAAMJ,KAAKI,MAAMJ,KAAKC,UAAUqF,OAE7D,EAAKiB,UAAY,GACjB,EAAKU,QAAU,UAK/BC,cA5DK,WA4DW,WACZ1P,KAAKsP,MAAM3F,QACN4F,KACG,QACA,8CAA+C,CAC3CzL,MAAO,QAGd0F,MAAK,SAAAG,GACF,GAAIA,EAAS,EACO,SAAVgG,EAAoBC,EAAMC,GACxBD,EAAK3E,SAAS5R,OAAS,GACvBuW,EAAK3E,SAASiC,SAAQ,SAACQ,GACfmC,EAASnC,EAAMnK,MAAMhK,MACI,uBAArBmU,EAAMnK,MAAM9I,MACwB,WAApC,GAAOoV,EAASnC,EAAMnK,MAAMhK,MAC5B8L,MAAMmJ,QAAQqB,EAASnC,EAAMnK,MAAMhK,KACnCsW,EAASnC,EAAMnK,MAAMhK,SAAMuW,EACpBpC,EAAMzC,UACb0E,EAAQjC,EAAOmC,EAASnC,EAAMnK,MAAMhK,SAOxDoW,CAAQ,EAAK1D,OAAOC,QAAQ,GAAI,EAAK,EAAK+C,yBAC1C,EAAKc,2BAKrBC,kBA5FK,SA4FanH,GAyBTQ,UAAUC,UAIfD,UAAUC,UAAU2G,UAAUpH,GAAMW,MAAK,WACrC0G,QAAQC,IAAI,kDACb,SAAU1G,GACTyG,QAAQE,MAAM,+BAAgC3G,MA/BlD,SAAqCZ,GACjC,IAAIwH,EAAWzI,SAASC,cAAc,YACtCwI,EAASnL,MAAQ2D,EAGjBwH,EAASC,MAAMC,IAAM,IACrBF,EAASC,MAAME,KAAO,IACtBH,EAASC,MAAMG,SAAW,QAE1B7I,SAASE,KAAKC,YAAYsI,GAC1BA,EAASK,QACTL,EAASrI,SAET,IACI,IACI2I,EADa/I,SAASK,YAAY,QACf,aAAe,eACtCiI,QAAQC,IAAI,sCAAwCQ,GACtD,MAAOlH,GACLyG,QAAQE,MAAM,iCAAkC3G,GAGpD7B,SAASE,KAAKI,YAAYmI,GAI1BO,CAA4B/H,IAUpCgI,qBAhIK,SAgIgBC,GACjBzH,UAAUC,UAAUC,WAAWC,KAAKsH,M,wGClIiL,GC8JjO,CACEC,WAAY,CACVpH,QAAJ,KACIqH,MAAJ,KACIC,WAAJ,KACI7Q,KAAJ,KACIG,MAAJ,KACI2Q,UAAJ,KACIC,QAAJ,KACIC,SAAJ,KACIC,QAAJ,KACIC,WAAJ,MAEEC,OAAQ,CACV,GACA,KACA,KACA,IAEE3T,KAAM,oBACNrD,MAAO,CACLhB,GAAIiY,OACJhC,MAAOiC,OACPvM,MAAO,CACLzK,KAAMgX,OACNC,QAAN,uBAGEpM,KA5BF,WA6BI,IAAJ,eACA,kBACA,gBACA,CACM,GAAN,cACM,KAAN,qBACM,SAAN,IAEA,2CACI,MAAO,CACLyD,UAAN,EACM4I,QAAS3R,KAAKkF,MACd+G,OAAQ,CACNC,QAAS/E,GAEXyK,oBAAqB,CACnB1F,QAAS,CACPzR,KAAM,QACNsK,MAAO,WACPzE,UAAW,CACT8G,OAAO,GAETyK,SAAU,CACRzK,OAAO,GAET0K,YAAa,CACX5N,MAAO,IACP6N,MAAM,EACN,iBAAiB,GAEnBpH,UAAW,CACTtP,MAAZ,OACYb,QAAS,CACPC,KAAM,MACNsB,OAAO,EACPqL,OAAO,IAGX/L,MAAV,mBACUI,UAAW,CACTlC,GAAI,WACJC,MAAO,cACPiB,KAAM,aACNW,MAAO,gBAETyQ,QAAS7L,KAAK0L,8CACdnR,MAAO,CACLwB,OAAO,EACP,WAAY,KACZ,YAAa,QACbiW,QAAQ,EACRC,WAAW,EACXC,SAAS,EACT,iBAAiB,EACjB,iBAAkB,cAClB,mBAAmB,EACnBC,YAAY,KAIlBC,gBAAgB,EAChBC,KAAM,SACNtD,UAAW,GACXuD,oBAAoB,EACpBC,aAAc,CACZlX,MAAR,eAEMmX,0BAA2B,GAC3BC,aAAc,KACdC,sBAAsB,EACtBC,UAAU,EACVC,cAAe,GACfC,WAAY,GACZC,WAAY,KACZhH,SAAU,KACViH,UAAW/S,KAAKwP,MAAMuD,UAC5B,qBACA,CACA,CACQ,GAAR,WACQ,MAAR,YAEA,CACQ,GAAR,SACQ,MAAR,kBAEA,CACQ,GAAR,WACQ,MAAR,uBAKE9L,QAAS,CAMP8I,oBANJ,WAMA,WACA,kDACA,kCACM,IACE,IAAR,qCACA,KACA,EACA,eACA,IAEQ/P,KAAKA,KAAKgT,yBAA2B,CACnCrY,OAAQsY,EAAaC,GAAQvY,OAC7BH,QAASyY,EAAaC,GAAQ1Y,QAC9BjB,GAAI2Z,GAENlT,KAAKyS,aAAe,KACpBzS,KAAK8S,WAAaG,EAAaH,WACvC,SACQ9S,KAAKyS,aAAeU,EAGtBnT,KAAKoT,WAAU,WACb,IAAR,mBACQ,EAAR,oCACQ,EAAR,qBAGIC,kBAjCJ,WAkCM,IACErT,KAAK8O,WAAWtG,KAAKI,MAAM5I,KAAK6S,aACxC,SACQ3C,QAAQC,IAAIgD,KAGhBG,kBAxCJ,WAyCMtT,KAAK6S,WAAarK,KAAKC,UAAUzI,KAAKkP,eAAgB,KAAM,IAE9DqE,0BA3CJ,SA2CA,GACMvT,KAAKwS,0BAA4BxD,GAEnCwE,mBA9CJ,WA+CMxT,KAAKgQ,kBAAkBhQ,KAAKwS,4BAE9BiB,oBAjDJ,WAiDA,WACMzT,KAAK6Q,sBAAqB,SAAhC,GACQ,EAAR,6CAKE6C,QAlLF,WAmLQ1T,KAAK2R,SAAW3R,KAAK2R,QAAQ3C,MAAQhP,KAAK2R,QAAQ1F,OACpDjM,KAAK8O,WAAW9O,KAAK2R,SAKrB3R,KAAK+P,uBAIT4D,MAAO,CACLtB,KADJ,WACA,WAKwB,YAAdrS,KAAKqS,KACPrS,KAAKoT,WAAU,WACT,EAAd,sBACY,EAAZ,kCACY,EAAZ,uCAGA,WAUInH,OAAQ,CACN2H,MAAM,EACNC,QAFN,WAGQ7T,KAAK+P,sBACL/P,KAAK8T,MAAM,gBAAiB9T,KAAKiM,UAOrC8C,UAlCJ,WAmCM/O,KAAK+P,sBACL/P,KAAK4S,cAAgB,OAA3B,KAA2B,CAC3B,KACA,eACA,mBAEM5S,KAAK8T,MAAM,cAAe9T,KAAKiM,SAGjCH,SA5CJ,WA6CM9L,KAAK+P,uBAGPgE,UAAW,CACTH,MAAM,EACNC,QAFN,WAGQ7T,KAAK+P,sBACL/P,KAAKsT,wB,kDCxYT5X,GAAY,aACd,I1CRW,WAAa,IAAIsY,EAAIhU,KAASiU,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAAC9Y,MAAO,aAAe2Y,EAAIxE,MAAMnU,MAAQ2Y,EAAIxE,MAAMnU,MAAQ,KAAM,CAAC8Y,EAAG,UAAU,CAAClH,IAAI,YAAY+G,EAAIK,GAAG,KAAKF,EAAG,YAAY,CAACG,YAAY,YAAYC,MAAM,CAAC,KAAoB,WAAbP,EAAI3B,KAAkB,KAAO,GAAG,MAAQ,KAAK,CAAC8B,EAAG,QAAQ,CAACA,EAAG,QAAQ,CAACI,MAAM,CAAC,MAAqB,SAAbP,EAAI3B,KAAkB,UAAU,UAAU,KAAO,GAAG,MAAQ,IAAImC,GAAG,CAAC,MAAQ,SAASC,GAAQT,EAAI3B,KAAoB,SAAb2B,EAAI3B,KAAkB,SAAS,UAAU,CAAC8B,EAAG,SAAS,CAACI,MAAM,CAAC,MAAQ,KAAK,CAACP,EAAIK,GAAG,cAAc,GAAGL,EAAIK,GAAG,KAAKF,EAAG,QAAQ,CAACI,MAAM,CAAC,MAAqB,SAAbP,EAAI3B,KAAkB,UAAU,UAAU,KAAO,GAAG,MAAQ,IAAImC,GAAG,CAAC,MAAQ,SAASC,GAAQT,EAAI3B,KAAoB,SAAb2B,EAAI3B,KAAkB,SAAS,UAAU,CAAC8B,EAAG,SAAS,CAACI,MAAM,CAAC,MAAQ,KAAK,CAACP,EAAIK,GAAG,qBAAqB,GAAGL,EAAIK,GAAG,KAAKF,EAAG,QAAQ,CAACI,MAAM,CAAC,MAAqB,YAAbP,EAAI3B,KAAqB,UAAU,UAAU,KAAO,GAAG,MAAQ,IAAImC,GAAG,CAAC,MAAQ,SAASC,GAAQT,EAAI3B,KAAoB,YAAb2B,EAAI3B,KAAqB,SAAS,aAAa,CAAC8B,EAAG,SAAS,CAACI,MAAM,CAAC,MAAQ,KAAK,CAACP,EAAIK,GAAG,qCAAqC,GAAGL,EAAIK,GAAG,WAAWL,EAAIU,GAAGV,EAAIxE,MAAMpU,OAAO,WAAW,GAAG4Y,EAAIK,GAAG,KAAKF,EAAG,YAAYH,EAAIK,GAAG,KAAML,EAAa,UAAEG,EAAG,WAAW,CAACQ,YAAY,CAAC,YAAY,SAASJ,MAAM,CAAC,aAAa,KAAK,YAAY,QAAQ,QAAU,GAAG,QAAU,GAAG,KAAO,GAAG,MAAQ,GAAG,MAAQ,GAAG,KAAO,GAAG,eAAe,GAAG,MAAQ,WAAW,MAAQ,GAAG,MAAQP,EAAIjB,WAAWxP,MAAM,CAAC2B,MAAO8O,EAAY,SAAEpK,SAAS,SAAUgL,GAAMZ,EAAIlI,SAAS8I,GAAKC,WAAW,cAAcb,EAAIc,KAAKd,EAAIK,GAAG,KAAKF,EAAG,QAAQ,CAACI,MAAM,CAAC,MAAQ,GAAG,KAAO,GAAG,MAAQ,OAAOC,GAAG,CAAC,MAAQR,EAAItE,gBAAgB,CAACyE,EAAG,SAAS,CAACI,MAAM,CAAC,MAAQ,KAAK,CAACP,EAAIK,GAAG,2BAA2B,GAAGL,EAAIK,GAAG,KAAKF,EAAG,QAAQ,CAACI,MAAM,CAAC,MAAQ,GAAG,KAAO,GAAG,MAAQ,OAAOC,GAAG,CAAC,MAAQR,EAAI3E,UAAU,CAAC8E,EAAG,SAAS,CAACI,MAAM,CAAC,MAAQ,KAAK,CAACP,EAAIK,GAAG,kBAAkB,GAAGL,EAAIK,GAAG,KAAKF,EAAG,QAAQ,CAACI,MAAM,CAAC,MAAQ,GAAG,KAAO,IAAIC,GAAG,CAAC,MAAQR,EAAI7E,aAAa,CAACgF,EAAG,SAAS,CAACI,MAAM,CAAC,MAAQ,KAAK,CAACP,EAAIK,GAAG,mBAAmB,GAAGL,EAAIK,GAAG,KAAKF,EAAG,QAAQ,CAACI,MAAM,CAAC,MAAQ,GAAG,KAAO,IAAIC,GAAG,CAAC,MAAQ,SAASC,GAAQT,EAAIe,gBAAgBf,EAAIlF,WAAxBkF,MAAyC,CAACG,EAAG,SAAS,CAACI,MAAM,CAAC,MAAQ,KAAK,CAACP,EAAIK,GAAG,iBAAiB,IAAI,GAAGL,EAAIK,GAAG,KAAKF,EAAG,qBAAqB,CAACa,WAAW,CAAC,CAACpX,KAAK,OAAOqX,QAAQ,SAAS/P,MAAoB,WAAb8O,EAAI3B,KAAmBwC,WAAW,sBAAsBvE,MAAc0D,EAAIxE,MAAMpO,OAAU,eAAkB4S,EAAIxE,MAAY,OAAI,KAAO,GAAM+E,MAAM,CAAC,QAAU,GAAG,OAASP,EAAIpC,qBAAqBrO,MAAM,CAAC2B,MAAO8O,EAAU,OAAEpK,SAAS,SAAUgL,GAAMZ,EAAI/H,OAAO2I,GAAKC,WAAW,YAAYb,EAAIK,GAAG,KAAKF,EAAG,MAAM,CAACa,WAAW,CAAC,CAACpX,KAAK,OAAOqX,QAAQ,SAAS/P,MAAoB,SAAb8O,EAAI3B,KAAiBwC,WAAW,qBAAqB,CAACV,EAAG,eAAe,CAACI,MAAM,CAAC,KAAO,GAAG,MAAQP,EAAIvB,aAAe,MAAQ,YAAY,CAACuB,EAAIK,GAAG,gCAAgCF,EAAG,OAAO,CAACG,YAAY,6BAA6B,CAACN,EAAIK,GAAGL,EAAIU,GAAGV,EAAIvB,aAAe,eAAe,SAASuB,EAAIK,GAAG,KAAKF,EAAG,mBAAmBH,EAAIkB,GAAG,CAAC3R,MAAM,CAAC2B,MAAO8O,EAAa,UAAEpK,SAAS,SAAUgL,GAAMZ,EAAID,UAAUa,GAAKC,WAAW,cAAc,mBAAmB7U,KAAKA,KAAKgT,0BAAyB,KAAS,GAAGgB,EAAIK,GAAG,KAAKF,EAAG,SAAS,CAACa,WAAW,CAAC,CAACpX,KAAK,OAAOqX,QAAQ,SAAS/P,MAAoB,YAAb8O,EAAI3B,KAAoBwC,WAAW,uBAAuBP,YAAY,cAAcC,MAAM,CAAC,MAAQ,GAAG,KAAO,KAAK,CAACJ,EAAG,eAAe,CAACI,MAAM,CAAC,KAAO,GAAG,MAAQP,EAAIvB,aAAe,MAAQ,YAAY,CAAC0B,EAAG,QAAQ,CAACG,YAAY,QAAQC,MAAM,CAAC,KAAO,GAAG,MAAQ,IAAIC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIP,yBAAyB,CAACU,EAAG,SAAS,CAACI,MAAM,CAAC,MAAQ,KAAK,CAACP,EAAIK,GAAG,wBAAwB,GAAGL,EAAIK,GAAG,KAAKF,EAAG,QAAQ,CAACG,YAAY,QAAQC,MAAM,CAAC,KAAO,GAAG,MAAQ,IAAIC,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOT,EAAIR,wBAAwB,CAACW,EAAG,SAAS,CAACI,MAAM,CAAC,MAAQ,KAAK,CAACP,EAAIK,GAAG,uBAAuB,GAAGL,EAAIK,GAAG,KAAKF,EAAG,QAAQ,CAACG,YAAY,QAAQC,MAAM,CAAC,KAAO,GAAG,MAAQ,IAAIC,GAAG,CAAC,MAAQ,SAASC,GAAQT,EAAIrB,UAAYqB,EAAIrB,YAAY,CAACwB,EAAG,SAAS,CAACI,MAAM,CAAC,MAAQ,KAAK,CAACP,EAAIK,GAAGL,EAAIU,GAAGV,EAAIrB,SAAW,UAAU,2BAA2B,GAAGqB,EAAIK,GAAG,0CAA0CF,EAAG,OAAO,CAACG,YAAY,6BAA6B,CAACN,EAAIK,GAAGL,EAAIU,GAAGV,EAAIvB,aAAe,eAAe,OAAOuB,EAAIK,GAAG,KAAKF,EAAG,YAAYH,EAAIK,GAAG,KAAML,EAAgB,aAAEG,EAAG,WAAW,CAACgB,YAAYnB,EAAIoB,GAAG,CAAC,CAAChP,IAAI,YAAYiP,GAAG,SAASpI,GAC7tI,IAAIuH,EAAKvH,EAAIuH,GACb,MAAO,CAACL,EAAG,QAAQH,EAAIsB,GAAG,CAACf,MAAM,CAAC,MAAQ,GAAG,KAAO,KAAKC,GAAI,CAACL,EAAG,SAAS,CAACI,MAAM,CAAC,MAAQ,KAAK,CAACP,EAAIK,GAAG,+BAA+B,OAAO,MAAK,EAAM,YAAY9Q,MAAM,CAAC2B,MAAO8O,EAAsB,mBAAEpK,SAAS,SAAUgL,GAAMZ,EAAI1B,mBAAmBsC,GAAKC,WAAW,uBAAuB,CAACb,EAAIK,GAAG,KAAKF,EAAG,SAAS,CAACI,MAAM,CAAC,KAAO,GAAG,MAAQ,QAAQ,CAACJ,EAAG,eAAe,CAACH,EAAIK,GAAGL,EAAIU,GAAGV,EAAIvB,aAAavR,YAAY8S,EAAIK,GAAG,KAAKF,EAAG,cAAc,CAACH,EAAIK,GAAGL,EAAIU,GAAGV,EAAIvB,aAAa8C,WAAW,IAAI,GAAGvB,EAAIc,MAAM,GAAGd,EAAIK,GAAG,KAAKF,EAAG,cAAc,CAACG,YAAY,yBAAyB,CAAIN,EAAIrB,SAAwOqB,EAAIc,KAAlOX,EAAG,mBAAmB,CAAClH,IAAI,gBAAgBsH,MAAM,CAAC,MAAQP,EAAIzB,cAAciC,GAAG,CAAC,UAAYR,EAAIT,2BAA2BhQ,MAAM,CAAC2B,MAAO8O,EAAa,UAAEpK,SAAS,SAAUgL,GAAMZ,EAAIjF,UAAU6F,GAAKC,WAAW,eAAwBb,EAAIK,GAAG,KAAML,EAAY,SAAEG,EAAG,gBAAgB,CAACI,MAAM,CAAC,MAAQ,IAAIhR,MAAM,CAAC2B,MAAO8O,EAAiB,cAAEpK,SAAS,SAAUgL,GAAMZ,EAAIpB,cAAcgC,GAAKC,WAAW,mBAAmBb,EAAIc,MAAM,IAAI,GAAGd,EAAIK,GAAG,KAAmB,SAAbL,EAAI3B,KAAiB8B,EAAG,SAAS,CAACG,YAAY,cAAcC,MAAM,CAAC,MAAQ,GAAG,KAAO,KAAK,CAACJ,EAAG,eAAe,CAACI,MAAM,CAAC,KAAO,GAAG,MAAQ,YAAY,CAACP,EAAIK,GAAG,2CAA2CF,EAAG,YAAYH,EAAIK,GAAG,KAAKF,EAAG,QAAQ,CAACG,YAAY,QAAQC,MAAM,CAAC,KAAO,GAAG,KAAO,GAAG,MAAQ,IAAIC,GAAG,CAAC,MAAQR,EAAIX,oBAAoB,CAACc,EAAG,SAAS,CAACI,MAAM,CAAC,MAAQ,KAAK,CAACP,EAAIK,GAAG,uBAAuB,GAAGL,EAAIK,GAAG,KAAKF,EAAG,QAAQ,CAACG,YAAY,QAAQC,MAAM,CAAC,KAAO,GAAG,KAAO,GAAG,MAAQ,IAAIC,GAAG,CAAC,MAAQR,EAAIV,oBAAoB,CAACa,EAAG,SAAS,CAACI,MAAM,CAAC,MAAQ,KAAK,CAACP,EAAIK,GAAG,yBAAyB,IAAI,GAAGL,EAAIK,GAAG,KAAKF,EAAG,cAAc,CAACG,YAAY,yBAAyB,CAACH,EAAG,gBAAgB,CAACa,WAAW,CAAC,CAACpX,KAAK,OAAOqX,QAAQ,SAAS/P,MAAoB,SAAb8O,EAAI3B,KAAiBwC,WAAW,oBAAoBP,YAAY,cAAcC,MAAM,CAAC,MAAQ,IAAIhR,MAAM,CAAC2B,MAAO8O,EAAc,WAAEpK,SAAS,SAAUgL,GAAMZ,EAAInB,WAAW+B,GAAKC,WAAW,iBAAiB,IAAI,GAAGb,EAAIc,MAAM,KAC/5D,I0CQpB,EACA,KACA,KACA,MAIa,UAAApZ,GAAiB,QAchC,KAAkBA,GAAW,CAAC0E,QAAA,EAAK4Q,SAAA,EAAME,UAAA,KAAUD,WAAA,KAAWI,WAAA,EAAQ9Q,SAAA,EAAMzE,WAAA,EAAQqV,WAAA,EAAQG,cAAA,EAAWF,YAAA,K,mBChCvGtY,EAAOC,QAAU,WACf,aA+CA,OAtCA,SAASyc,EAAUxc,EAAcC,GAC/B,IAAsBwc,EAAWC,EAA7Btc,EAAMH,EAAII,OACd,OAAID,GAAO,GACTqc,EAAYxc,EAAIuN,MAAM,EAAGpN,EAAM,GAC/Bsc,EAAazc,EAAIuN,MAAMpN,EAAM,EAAGA,GAepC,SAAeJ,EAAc2c,EAAMC,GACjC,IAAIC,EAAS,GAAIC,EAAQH,EAAKtc,OAAQ0c,EAAQH,EAAKvc,OACnD,KAAOyc,EAAQ,GAAKC,EAAQ,GACtB/c,EAAa2c,EAAK,GAAIC,EAAK,KAAO,GACpCC,EAAO1P,KAAKwP,EAAKK,SACjBF,MAEAD,EAAO1P,KAAKyP,EAAKI,SACjBD,KAGAD,EAAQ,EACVD,EAAO1P,KAAK8P,MAAMJ,EAAQF,GAE1BE,EAAO1P,KAAK8P,MAAMJ,EAAQD,GAE5B,OAAOC,EA9BEK,CAAMld,EAAcwc,EAAUxc,EAAcyc,GAAYD,EAAUxc,EAAc0c,KAEhFzc,EAAIuN,SAjBA,I,uBCAjB,IAAIgP,EAAWW,EACfX,EAAY,EAAQ,QACpBW,EAAkB,EAAQ,QAE1Brd,EAAOC,QAAU,WACf,aAEA,IAAIqd,EAIJ,SAASC,EAAER,GACT,OAAO,WACL,OAAOA,GAIX,SAASS,EAAUC,GACjBA,EAASA,GAAU,GACnBvW,KAAKuW,OAASA,EACdvW,KAAKuW,OAAOC,qBAAuBD,EAAOC,sBAAwB,WAClExW,KAAKuW,OAAOE,kBAAoBF,EAAOE,kBAGzC,SAASC,EAAe9G,EAAMlC,GAG5B,OAFAA,EAAMhG,OAASkI,EACfA,EAAK3E,SAAS9E,KAAKuH,GACZA,EAGT,SAASiJ,EAAKJ,EAAQhT,GACpBvD,KAAKuW,OAASA,EACdvW,KAAKuD,MAAQA,EACbvD,KAAKiL,SAAW,GAwBlB,SAAS2L,EAAsBhH,GAC7B,MAAgD,mBAAlCA,EAAK2G,OAAOE,kBAW5B,SAAStN,EAAS0N,EAAMnJ,EAAOoJ,GAC7B,IAAIC,EAEJ,KAAMrJ,aAAiBiJ,GACrB,MAAM,IAAIK,UAAU,+BAQtB,GALAtJ,EAAMhG,OAASmP,EACTA,EAAKtT,MAAMsT,EAAKN,OAAOC,gCAAiCnR,QAC5DwR,EAAKtT,MAAMsT,EAAKN,OAAOC,sBAAwB,IAG7CI,EAAsBC,GAExBE,EAAQZ,EACNU,EAAKN,OAAOE,kBACZI,EAAKtT,MAAMsT,EAAKN,OAAOC,sBACvB9I,EAAMnK,OAGRsT,EAAKtT,MAAMsT,EAAKN,OAAOC,sBAAsBjQ,OAAOwQ,EAAO,EAAGrJ,EAAMnK,OAGpEsT,EAAK5L,SAAS1E,OAAOwQ,EAAO,EAAGrJ,QAE/B,QAAoBoC,IAAhBgH,EACFD,EAAKtT,MAAMsT,EAAKN,OAAOC,sBAAsBrQ,KAAKuH,EAAMnK,OACxDsT,EAAK5L,SAAS9E,KAAKuH,OACd,CACL,GAAIoJ,EAAc,GAAKA,EAAcD,EAAK5L,SAAS5R,OACjD,MAAM,IAAI4d,MAAM,kBAElBJ,EAAKtT,MAAMsT,EAAKN,OAAOC,sBAAsBjQ,OAAOuQ,EAAa,EAAGpJ,EAAMnK,OAC1EsT,EAAK5L,SAAS1E,OAAOuQ,EAAa,EAAGpJ,GAGzC,OAAOA,EAqET,SAASwJ,IACP,IAAIC,EAAO,GAwBX,GAvByB,IAArBC,UAAU/d,OACgB,mBAAjB+d,UAAU,GACnBD,EAAK9B,GAAK+B,UAAU,GAEpBD,EAAK3c,QAAU4c,UAAU,GAEG,IAArBA,UAAU/d,OACS,mBAAjB+d,UAAU,IACnBD,EAAK9B,GAAK+B,UAAU,GACpBD,EAAKE,IAAMD,UAAU,KAErBD,EAAK3c,QAAU4c,UAAU,GACzBD,EAAK9B,GAAK+B,UAAU,KAGtBD,EAAK3c,QAAU4c,UAAU,GACzBD,EAAK9B,GAAK+B,UAAU,GACpBD,EAAKE,IAAMD,UAAU,IAEvBD,EAAK3c,QAAU2c,EAAK3c,SAAW,GAC1B2c,EAAK3c,QAAQ8c,WAChBH,EAAK3c,QAAQ8c,SAAW,QAErBlB,EAAee,EAAK3c,QAAQ8c,UAC/B,MAAM,IAAIL,MAAM,2FAElB,OAAOE,EAuFT,OAxRAf,EAAiB,GA2BjBE,EAAUiB,UAAU3O,MAAQ,SAAUrF,GACpC,IAAIpK,EAAGqe,EAAY5H,EAEnB,KAAMrM,aAAiBkO,QACrB,MAAM,IAAIuF,UAAU,iCAItB,GADApH,EAAO,IAAI+G,EAAK3W,KAAKuW,OAAQhT,GACzBA,EAAMvD,KAAKuW,OAAOC,gCAAiCnR,MAMrD,IALIrF,KAAKuW,OAAOE,oBACdlT,EAAMvD,KAAKuW,OAAOC,sBAAwBhB,EACxCxV,KAAKuW,OAAOE,kBACZlT,EAAMvD,KAAKuW,OAAOC,wBAEjBrd,EAAI,EAAGqe,EAAajU,EAAMvD,KAAKuW,OAAOC,sBAAsBnd,OAAQF,EAAIqe,EAAYre,IACvFud,EAAe9G,EAAM5P,KAAK4I,MAAMrF,EAAMvD,KAAKuW,OAAOC,sBAAsBrd,KAG5E,OAAOyW,GAOT+G,EAAKY,UAAU/P,OAAS,WACtB,YAAuBsI,IAAhB9P,KAAK0H,QAGdiP,EAAKY,UAAUE,YAAc,WAC3B,OAAOzX,KAAKiL,SAAS5R,OAAS,GA0ChCsd,EAAKY,UAAUpO,SAAW,SAAUuE,GAClC,OAAOvE,EAASnJ,KAAM0N,IAGxBiJ,EAAKY,UAAUG,gBAAkB,SAAUhK,EAAOqJ,GAChD,GAAIH,EAAsB5W,MACxB,MAAM,IAAIiX,MAAM,+DAGlB,OAAO9N,EAASnJ,KAAM0N,EAAOqJ,IAG/BJ,EAAKY,UAAU1M,SAAW,SAAUkM,GAClC,GAAIH,EAAsB5W,MACxB,MAAM,IAAIiX,MAAM,2DAGlB,GAAIjX,KAAKwH,SAAU,CACjB,GAAc,IAAVuP,EACF,OAAO/W,KAET,MAAM,IAAIiX,MAAM,kBAGlB,GAAIF,EAAQ,GAAKA,GAAS/W,KAAK0H,OAAOuD,SAAS5R,OAC7C,MAAM,IAAI4d,MAAM,kBAGlB,IAAIU,EAAW3X,KAAK0H,OAAOuD,SAASqD,QAAQtO,MAO5C,OALAA,KAAK0H,OAAOuD,SAAS1E,OAAOwQ,EAAO,EAAG/W,KAAK0H,OAAOuD,SAAS1E,OAAOoR,EAAU,GAAG,IAE/E3X,KAAK0H,OAAOnE,MAAMvD,KAAK0H,OAAO6O,OAAOC,sBAClCjQ,OAAOwQ,EAAO,EAAG/W,KAAK0H,OAAOnE,MAAMvD,KAAK0H,OAAO6O,OAAOC,sBAAsBjQ,OAAOoR,EAAU,GAAG,IAE5F3X,MAGT2W,EAAKY,UAAUK,QAAU,WACvB,IAAItQ,EAAO,GAOX,OANA,SAAUuQ,EAAUjI,GAClBtI,EAAKwQ,QAAQlI,GACRA,EAAKpI,UACRqQ,EAAUjI,EAAKlI,QAHnB,CAKG1H,MACIsH,GAGTqP,EAAKY,UAAUxM,SAAW,WACxB,OAAI/K,KAAKwH,SACA,EAEFxH,KAAK0H,OAAOuD,SAASqD,QAAQtO,OA4CtC2W,EAAKY,UAAUQ,KAAO,WACpB,IAAIZ,EACJA,EAAOD,EAAUjB,MAAMjW,KAAMoX,WAC7BhB,EAAee,EAAK3c,QAAQ8c,UAAUU,KAAKhY,KAAMmX,EAAK9B,GAAI8B,EAAKE,MAGjEjB,EAAe6B,IAAM,SAASC,EAAmBtO,EAAUuO,GACzD,IAAIhf,EAAGqe,EAAYY,EAEnB,IADAA,EAAYxO,EAASoO,KAAKG,EAASnY,MAC9B7G,EAAI,EAAGqe,EAAaxX,KAAKiL,SAAS5R,OAAQF,EAAIqe,EAAYre,IAAK,CAClE,IAAkB,IAAdif,EACF,OAAO,EAETA,EAAYF,EAAmBF,KAAKhY,KAAKiL,SAAS9R,GAAIyQ,EAAUuO,GAElE,OAAOC,GAGThC,EAAeiC,KAAO,SAASC,EAAoB1O,EAAUuO,GAC3D,IAAIhf,EAAGqe,EACP,IAAKre,EAAI,EAAGqe,EAAaxX,KAAKiL,SAAS5R,OAAQF,EAAIqe,EAAYre,IAE7D,IAAkB,IADNmf,EAAoBN,KAAKhY,KAAKiL,SAAS9R,GAAIyQ,EAAUuO,GAE/D,OAAO,EAIX,OADYvO,EAASoO,KAAKG,EAASnY,OAIrCoW,EAAemC,QAAU,SAAsB3O,EAAUuO,GACvD,IAAIK,EAAQ,CAACxY,OACb,SAAUyY,IACR,IAAItf,EAAGqe,EAAY5H,EACnB,GAAqB,IAAjB4I,EAAMnf,OAAV,CAIA,IAAKF,EAAI,EAAGqe,GADZ5H,EAAO4I,EAAMxC,SACiB/K,SAAS5R,OAAQF,EAAIqe,EAAYre,IAC7Dqf,EAAMrS,KAAKyJ,EAAK3E,SAAS9R,KAEU,IAAjCyQ,EAASoO,KAAKG,EAASvI,IACzB6I,KAVJ,IAeF9B,EAAKY,UAAUmB,IAAM,WACnB,IAAIvB,EAAMuB,EAAM,GAQhB,OAPAvB,EAAOD,EAAUjB,MAAMjW,KAAMoX,YACxB/B,GAAK8B,EAAK9B,IAAMgB,GAAE,GACvBD,EAAee,EAAK3c,QAAQ8c,UAAUU,KAAKhY,MAAM,SAAU4P,GACrDuH,EAAK9B,GAAG2C,KAAKb,EAAKE,IAAKzH,IACzB8I,EAAIvS,KAAKyJ,KAEVuH,EAAKE,KACDqB,GAGT/B,EAAKY,UAAU3M,MAAQ,WACrB,IAAIuM,EAAMvM,EASV,OARAuM,EAAOD,EAAUjB,MAAMjW,KAAMoX,YACxB/B,GAAK8B,EAAK9B,IAAMgB,GAAE,GACvBD,EAAee,EAAK3c,QAAQ8c,UAAUU,KAAKhY,MAAM,SAAU4P,GACzD,GAAIuH,EAAK9B,GAAG2C,KAAKb,EAAKE,IAAKzH,GAEzB,OADAhF,EAAQgF,GACD,IAERuH,EAAKE,KACDzM,GAGT+L,EAAKY,UAAU1N,KAAO,WACpB,IAAI8O,EAQJ,OAPK3Y,KAAKwH,WACRmR,EAAe3Y,KAAK0H,OAAOuD,SAASqD,QAAQtO,MAC5CA,KAAK0H,OAAOuD,SAAS1E,OAAOoS,EAAc,GAC1C3Y,KAAK0H,OAAOnE,MAAMvD,KAAKuW,OAAOC,sBAAsBjQ,OAAOoS,EAAc,GACzE3Y,KAAK0H,YAASoI,SACP9P,KAAK0H,QAEP1H,MAGFsW,EA7RQ,I,kCCJjB,I,oFCA6M,EC8C7M,CACE,WAAF,CACI,QAAJ,IAAI,MAAJ,IAAI,SAAJ,IAAI,QAAJ,IAAI,KAAJ,IAAI,aAAJ,IAAI,UAAJ,IAAI,cAAJ,KAEE,KAAF,WAAI,MAAJ,CACM,QAAN,EACM,QAAN,KACM,OAAN,KACM,QAAN,KACM,MAAN,KACM,QAAN,CACQ,MAAR,UACQ,MAAR,IACQ,OAAR,OAGE,QAAF,CACI,KADJ,SACA,OAAM,IAAN,OAKM,OAJA,KAAN,UACM,KAAN,QACM,KAAN,UACM,KAAN,sCACA,2BACQ,EAAR,UACQ,EAAR,aAGI,MAXJ,WAYM,KAAN,YACM,KAAN,WAEI,OAfJ,WAgBM,KAAN,YACM,KAAN,a,iCCxEI5a,EAAY,YACd,GHRW,WAAa,IAAIsY,EAAIhU,KAASiU,EAAGD,EAAIE,eAAmBC,EAAGH,EAAII,MAAMD,IAAIF,EAAG,OAAOE,EAAG,WAAW,CAAC7D,MAAM,CAAGsI,OAAQ5E,EAAIxZ,QAAQoe,QAAUrE,MAAM,CAAC,YAAYP,EAAIxZ,QAAQ0J,OAAOsQ,GAAG,CAAC,QAAU,SAASC,GAAQ,OAAIA,EAAOha,KAAK6T,QAAQ,QAAQ0F,EAAI6E,GAAGpE,EAAOqE,QAAQ,MAAM,GAAGrE,EAAOrO,IAAI,CAAC,MAAM,WAAoB,KAAc4N,EAAI+E,OAAOtE,KAAUlR,MAAM,CAAC2B,MAAO8O,EAAU,OAAEpK,SAAS,SAAUgL,GAAMZ,EAAIgF,OAAOpE,GAAKC,WAAW,WAAW,CAACV,EAAG,SAAS,CAACA,EAAG,YAAY,CAACI,MAAM,CAAC,KAAO,GAAG,MAAQP,EAAIxZ,QAAQsJ,MAAM,MAAQ,GAAG,KAAO,KAAK,CAACqQ,EAAG,kBAAkB,CAACG,YAAY,eAAe,CAACN,EAAIK,GAAGL,EAAIU,GAAGV,EAAIxa,WAAW,GAAGwa,EAAIK,GAAG,KAAKF,EAAG,cAAc,CAACa,WAAW,CAAC,CAACpX,KAAK,OAAOqX,QAAQ,SAAS/P,QAAS8O,EAAI9S,QAAS2T,WAAW,cAAcP,YAAY,QAAQ,CAACN,EAAIK,GAAGL,EAAIU,GAAGV,EAAI9S,YAAY8S,EAAIK,GAAG,KAAKF,EAAG,iBAAiB,CAACG,YAAY,QAAQ,CAACH,EAAG,YAAYH,EAAIK,GAAG,KAAKF,EAAG,QAAQ,CAACI,MAAM,CAAC,MAAQ,mBAAmB,KAAO,IAAI0E,SAAS,CAAC,MAAQ,SAASxE,GAAQ,OAAOT,EAAIkF,MAAMzE,MAAW,CAACT,EAAIK,GAAG,SAASL,EAAIK,GAAG,KAAKF,EAAG,QAAQ,CAACI,MAAM,CAAC,MAAQ,OAAO,KAAO,IAAI0E,SAAS,CAAC,MAAQ,SAASxE,GAAQ,OAAOT,EAAI+E,OAAOtE,MAAW,CAACT,EAAIK,GAAG,aAAa,IAAI,IAAI,KACnnC,IGUpB,EACA,KACA,KACA,MAIa,IAAA3Y,EAAiB,QAYhC,IAAkBA,EAAW,CAAC0E,OAAA,EAAK4Q,QAAA,EAAMmI,aAAA,IAAajI,UAAA,IAAUG,UAAA,EAAQF,UAAA,EAAQC,WAAA,EAASgI,cAAA","file":"builder.bundle.js","sourcesContent":["module.exports = (function () {\n  'use strict';\n\n  /**\n   * Find the index to insert an element in array keeping the sort order.\n   *\n   * @param {function} comparatorFn The comparator function which sorted the array.\n   * @param {array} arr The sorted array.\n   * @param {object} el The element to insert.\n   */\n  function findInsertIndex(comparatorFn, arr, el) {\n    var i, len;\n    for (i = 0, len = arr.length; i < len; i++) {\n      if (comparatorFn(arr[i], el) > 0) {\n        break;\n      }\n    }\n    return i;\n  }\n\n  return findInsertIndex;\n})();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{class:(\"vf-input \" + (_vm.field.class ? _vm.field.class : ''))},[_c('confirm',{ref:\"confirm\"}),_vm._v(\" \"),_c('v-toolbar',{staticClass:\"ma-0 pa-0\",attrs:{\"dark\":_vm.mode !== 'editor',\"flat\":\"\",\"dense\":\"\"}},[_c('label',[_c('v-btn',{attrs:{\"color\":_vm.mode === 'view' ? 'warning':'primary',\"icon\":\"\",\"small\":\"\"},on:{\"click\":function($event){_vm.mode = _vm.mode === 'view' ? 'editor':'view'}}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-eye\")])],1),_vm._v(\" \"),_c('v-btn',{attrs:{\"color\":_vm.mode === 'json' ? 'warning':'primary',\"icon\":\"\",\"small\":\"\"},on:{\"click\":function($event){_vm.mode = _vm.mode === 'json' ? 'editor':'json'}}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-code-array\")])],1),_vm._v(\" \"),_c('v-btn',{attrs:{\"color\":_vm.mode === 'blockly' ? 'warning':'primary',\"icon\":\"\",\"small\":\"\"},on:{\"click\":function($event){_vm.mode = _vm.mode === 'blockly' ? 'editor':'blockly'}}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-code-greater-than-or-equal\")])],1),_vm._v(\"\\n      \"+_vm._s(_vm.field.label)+\"\\n    \")],1),_vm._v(\" \"),_c('v-spacer'),_vm._v(\" \"),(_vm.templates)?_c('v-select',{staticStyle:{\"max-width\":\"250px\"},attrs:{\"item-value\":\"id\",\"item-text\":\"title\",\"reverse\":\"\",\"rounded\":\"\",\"solo\":\"\",\"small\":\"\",\"chips\":\"\",\"flat\":\"\",\"hide-details\":\"\",\"label\":\"Template\",\"dense\":\"\",\"items\":_vm.templates},model:{value:(_vm.template),callback:function ($$v) {_vm.template=$$v},expression:\"template\"}}):_vm._e(),_vm._v(\" \"),_c('v-btn',{attrs:{\"small\":\"\",\"icon\":\"\",\"color\":\"red\"},on:{\"click\":_vm.onResetValues}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-database-refresh\")])],1),_vm._v(\" \"),_c('v-btn',{attrs:{\"small\":\"\",\"icon\":\"\",\"color\":\"red\"},on:{\"click\":_vm.onReset}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-refresh\")])],1),_vm._v(\" \"),_c('v-btn',{attrs:{\"small\":\"\",\"icon\":\"\"},on:{\"click\":_vm.onDownload}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-download\")])],1),_vm._v(\" \"),_c('v-btn',{attrs:{\"small\":\"\",\"icon\":\"\"},on:{\"click\":function($event){_vm.startJSONUpload(_vm.onUploaded)()}}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-upload\")])],1)],1),_vm._v(\" \"),_c('vf-fields-renderer',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.mode === 'editor'),expression:\"mode === 'editor'\"}],style:((\"\" + (_vm.field.height ? (\"min-height: \" + (_vm.field.height) + \"px\"): ''))),attrs:{\"options\":{},\"fields\":_vm.formBuilderTreeview},model:{value:(_vm.schema),callback:function ($$v) {_vm.schema=$$v},expression:\"schema\"}}),_vm._v(\" \"),_c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.mode === 'view'),expression:\"mode === 'view'\"}]},[_c('v-system-bar',{attrs:{\"dark\":\"\",\"color\":_vm.blocklyError ? 'red' : 'primary'}},[_vm._v(\"\\n      Form Preview\\n      \"),_c('span',{staticClass:\"red--text text--lighten-3\"},[_vm._v(_vm._s(_vm.blocklyError ? '(has errors)':''))])]),_vm._v(\" \"),_c('vuetify-formjson',_vm._b({model:{value:(_vm.formModel),callback:function ($$v) {_vm.formModel=$$v},expression:\"formModel\"}},'vuetify-formjson',this[this.getFormSchemaPropName()],false))],1),_vm._v(\" \"),_c('v-card',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.mode === 'blockly'),expression:\"mode === 'blockly'\"}],staticClass:\"fill-height\",attrs:{\"light\":\"\",\"flat\":\"\"}},[_c('v-system-bar',{attrs:{\"dark\":\"\",\"color\":_vm.blocklyError ? 'red' : 'primary'}},[_c('v-btn',{staticClass:\"right\",attrs:{\"icon\":\"\",\"small\":\"\"},on:{\"click\":function($event){return _vm.blocklyPasteContent()}}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-content-paste\")])],1),_vm._v(\" \"),_c('v-btn',{staticClass:\"right\",attrs:{\"icon\":\"\",\"small\":\"\"},on:{\"click\":function($event){return _vm.blocklyCopyContent()}}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-content-copy\")])],1),_vm._v(\" \"),_c('v-btn',{staticClass:\"right\",attrs:{\"icon\":\"\",\"small\":\"\"},on:{\"click\":function($event){_vm.showCode = !_vm.showCode}}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(_vm._s(_vm.showCode ? 'mdi-eye':'mdi-code-braces-box'))])],1),_vm._v(\"Define functions and callbacks\\n      \"),_c('span',{staticClass:\"red--text text--lighten-3\"},[_vm._v(_vm._s(_vm.blocklyError ? '(has errors)':''))]),_vm._v(\" \"),_c('v-spacer'),_vm._v(\" \"),(_vm.blocklyError)?_c('v-dialog',{scopedSlots:_vm._u([{key:\"activator\",fn:function(ref){\nvar on = ref.on;\nreturn [_c('v-btn',_vm._g({attrs:{\"small\":\"\",\"icon\":\"\"}},on),[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-flask-remove-outline\")])],1)]}}],null,false,1872519304),model:{value:(_vm.blocklyErrorDialog),callback:function ($$v) {_vm.blocklyErrorDialog=$$v},expression:\"blocklyErrorDialog\"}},[_vm._v(\" \"),_c('v-card',{attrs:{\"dark\":\"\",\"color\":\"red\"}},[_c('v-card-title',[_vm._v(_vm._s(_vm.blocklyError.message))]),_vm._v(\" \"),_c('v-card-text',[_vm._v(_vm._s(_vm.blocklyError.stack))])],1)],1):_vm._e()],1),_vm._v(\" \"),_c('v-card-text',{staticClass:\"ma-0 pa-0 fill-height\"},[(! _vm.showCode)?_c('vf-blockly-input',{ref:\"blocklyEditor\",attrs:{\"field\":_vm.blocklyField},on:{\"selection\":_vm.onBlocklySelectionChanged},model:{value:(_vm.codeModel),callback:function ($$v) {_vm.codeModel=$$v},expression:\"codeModel\"}}):_vm._e(),_vm._v(\" \"),(_vm.showCode)?_c('vf-code-input',{attrs:{\"field\":{}},model:{value:(_vm.blocklyJSCode),callback:function ($$v) {_vm.blocklyJSCode=$$v},expression:\"blocklyJSCode\"}}):_vm._e()],1)],1),_vm._v(\" \"),(_vm.mode === 'json')?_c('v-card',{staticClass:\"fill-height\",attrs:{\"light\":\"\",\"flat\":\"\"}},[_c('v-system-bar',{attrs:{\"dark\":\"\",\"color\":\"primary\"}},[_vm._v(\"\\n      Manual FormBuilder edit\\n      \"),_c('v-spacer'),_vm._v(\" \"),_c('v-btn',{staticClass:\"right\",attrs:{\"dark\":\"\",\"icon\":\"\",\"small\":\"\"},on:{\"click\":_vm.applyManualEditor}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-content-save\")])],1),_vm._v(\" \"),_c('v-btn',{staticClass:\"right\",attrs:{\"dark\":\"\",\"icon\":\"\",\"small\":\"\"},on:{\"click\":_vm.resetManualEditor}},[_c('v-icon',{attrs:{\"small\":\"\"}},[_vm._v(\"mdi-refresh-circle\")])],1)],1),_vm._v(\" \"),_c('v-card-text',{staticClass:\"ma-0 pa-0 fill-height\"},[_c('vf-code-input',{directives:[{name:\"show\",rawName:\"v-show\",value:(_vm.mode === 'json'),expression:\"mode === 'json'\"}],staticClass:\"fill-height\",attrs:{\"field\":{}},model:{value:(_vm.jsonString),callback:function ($$v) {_vm.jsonString=$$v},expression:\"jsonString\"}})],1)],1):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings,\n    TextSettings,\n    CheckboxSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class TextInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VTextField.events\n            }\n        ]\n    }\n\n    getInputValidations() {\n        return {\n            required: CheckboxSettings('Required'),\n            numeric: CheckboxSettings('is Numeric'),\n            minLength: TextSettings('Min characters length'),\n            maxLength: TextSettings('Max characters length'),\n            mask: TextSettings('Input mask'),\n            removeMask: CheckboxSettings('Remove mask on dispatch'),\n            farsi: CheckboxSettings('Farsi/Arabic characters only'),\n            ascii: CheckboxSettings('ASCII characters only'),\n        }\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VTextField.fields,\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class SwitchInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VSwitch.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VSwitch.fields,\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    BaseInputSettings,\n    TextSettings,\n    CheckboxSettings\n} from './comon'\n\nexport default class FieldsRenderSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'options',\n                title: 'Component events',\n                events: [\n                    {\n                        id: 'input',\n                        title: 'Triggered when value inside the form is changed'\n                    }\n                ]\n            }\n        ]\n    }\n\n    getInputProperties (item) {\n        return {\n            id: {\n                type: 'input',\n                input: 'text',\n                label: 'ID',\n                class: 'col-12 ma-0 ps-0 pe-0',\n                updateKeyCodes: [13]\n            },\n            label: TextSettings('Label'),\n            hidden: CheckboxSettings('Hidden'),\n            options: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    formClass: TextSettings('Form Class'),\n                    type: {\n                        type: 'input',\n                        input: 'select',\n                        label: 'Type',\n                        objects: [\n                            {\n                                id: 'row',\n                                title: 'Row'\n                            },\n                            {\n                                id: 'col',\n                                title: 'Column'\n                            },\n                            {\n                                id: 'component',\n                                title: 'Custom Component'\n                            }\n                        ],\n                        decorator: {\n                            id: 'id',\n                            title: 'title',\n                            label: ':title'\n                        }\n                    },\n                    component: TextSettings('Component'),\n                    wrap: {\n                        options: {\n                            type: 'col',\n                            formClass: 'ma-0 pa-0'\n                        },\n                        fields: {\n                            enabled: CheckboxSettings('User Wrapper'),\n                            class: TextSettings('Wrapper Class'),\n                            props: TextSettings('Wrapper props in JSON String'),\n                            component: TextSettings('Wrapper Component'),\n                            inside: {\n                                options: {\n                                    type: 'col',\n                                    formClass: 'ma-0 pa-0'\n                                },\n                                fields: {\n                                    class: TextSettings('Wrapper inside Class'),\n                                    component: TextSettings('Wrapper inside Component'),\n                                    props: TextSettings('Wrapper inside props in JSON String'),\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings,\n    CheckboxSettings,\n    TextSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class SwitchInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VSelect.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            objects: {\n                type: 'input',\n                input: 'datatable',\n                label: 'Items',\n                class: 'col-12 ma-0 pa-0',\n                props: {\n                    'disable-pagination': true,\n                    dense: true,\n                    'show-select': true,\n                },\n                'hide-search': true,\n                columns: [\n                    {\n                        id: 'id',\n                        label: 'ID'\n                    },\n                    {\n                        id: 'title',\n                        label: 'Title'\n                    }\n                ],\n                crud: {\n                    create: {\n                        fields: {\n                            id: {\n                                type: 'input',\n                                input: 'text',\n                                class: 'col-6 pe-0 ps-0',\n                                label: 'ID'\n                            },\n                            title: {\n                                type: 'input',\n                                input: 'text',\n                                class: 'col-6 pe-0 ps-0',\n                                label: 'Title'\n                            }\n                        }\n                    }\n                },\n            },\n            multiple: CheckboxSettings('Multiple'),\n            already_selected: TextSettings('Already Selected'),\n            decorator: {\n                options: {\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    label: {\n                        type: 'input',\n                        input: 'text',\n                        label: 'Decorator Label',\n                        class: 'col-12',\n                    },\n                    labels: {\n                        type: 'input',\n                        input: 'text',\n                        label: 'Decorator Property Names',\n                        class: 'col-12',\n                        props: {\n                            hint: 'comma separated property names'\n                        }\n                    },\n                }\n            },\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VSelect.fields,\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class RangeInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VRangeSlider.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VRangeSlider.fields,\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class RadioGroupInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VRadioGroup.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VRadioGroup.fields,\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class ColorInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VTextField.events\n            },\n            {\n                id: 'pickerProps',\n                title: 'Color Picker events',\n                events: api.VColorPicker.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VDataTable.fields,\n                    messages: MessagesTab\n                }\n            },\n            pickerProps: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VColorPicker.fields\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings,\n    createEventsDatatableInputForSettingsForm\n} from './comon'\n\nimport api from './../api'\n\nexport default class ButtonGroupInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VBtnToggle.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            objects: {\n                type: 'input',\n                input: 'datatable',\n                label: 'Items',\n                class: 'col-12 ma-0 pa-0',\n                props: {\n                    'disable-pagination': true,\n                    dense: true\n                },\n                columns: [\n                    {\n                        column: 'id',\n                        title: 'ID'\n                    },\n                    {\n                        column: 'title',\n                        title: 'Title'\n                    }\n                ],\n                create: {\n                    title: 'Add item to select list',\n                    fields: {\n                        id: {\n                            type: 'input',\n                            input: 'text',\n                            class: 'col-6 pe-0 ps-0',\n                            label: 'ID'\n                        },\n                        title: {\n                            type: 'input',\n                            input: 'text',\n                            class: 'col-6 pe-0 ps-0',\n                            label: 'Title'\n                        },\n                        props: {\n                            options: {\n                                type: 'row'\n                            },\n                            fields: {\n                                'v-on': createEventsDatatableInputForSettingsForm('Item events', api.VCheckbox.events)\n                            }\n                        }\n                    }\n                },\n                edit: {},\n                remove: {}\n            },\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VBtnToggle.fields,\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    BaseInputSettings,\n    TextSettings,\n    createEventsDatatableInputForSettingsForm\n} from './comon'\n\nimport api from './../api'\n\nexport default class AutocompleteInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VAutocomplete.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            objects: {\n                type: 'input',\n                input: 'datatable',\n                label: 'Items',\n                class: 'col-12 ma-0 pa-0',\n                props: {\n                    'disable-pagination': true,\n                    dense: true\n                },\n                columns: [\n                    {\n                        column: 'id',\n                        title: 'ID'\n                    },\n                    {\n                        column: 'title',\n                        title: 'Title'\n                    }\n                ],\n                crud: {\n                    create: {\n                        fields: {\n                            id: {\n                                type: 'input',\n                                input: 'text',\n                                class: 'col-6 pe-0 ps-0',\n                                label: 'ID'\n                            },\n                            title: {\n                                type: 'input',\n                                input: 'text',\n                                class: 'col-6 pe-0 ps-0',\n                                label: 'Title'\n                            },\n                            props: {\n                                options: {\n                                    type: 'row'\n                                },\n                                fields: {\n                                    'v-on': createEventsDatatableInputForSettingsForm('Item events', api.VCheckbox.events)\n                                }\n                            }\n                        }\n                    },\n                }\n            },\n            table: {\n                options: {\n                    type: 'row',\n                    formClass: 'col-12 ma-0 pa-0',\n                },\n                fields: {\n                    query: {\n                        options: {\n                            type: 'row',\n                            formClass: 'col-12 ma-0 pa-0'\n                        },\n                        fields: {\n                            url: TextSettings('Remote API query URL'),\n                            relations: {\n                                type: 'input',\n                                input: 'datatable',\n                                label: 'Remote API query relations',\n                                columns: {\n                                    name: {\n                                        id: 'name',\n                                        label: 'Relation Name'\n                                    },\n                                    columns: {\n                                        id: 'columns',\n                                        label: 'Relation Columns'\n                                    },\n                                },\n                                props: {\n                                    'hide-footer': true,\n                                    'dense': true,\n                                    'show-select': true,\n                                },\n                                crud: {\n                                    create: {\n                                        fields: {\n                                            name: {\n                                                type: 'input',\n                                                input: 'text',\n                                                label: 'Relation Name'\n                                            },\n                                            columns: {\n                                                type: 'input',\n                                                input: 'text',\n                                                label: 'Relation Columns',\n                                                props: {\n                                                    hint: 'Column names without space and with , as separator character'\n                                                }\n                                            },\n                                        }\n                                    }\n                                }\n                            },\n                            appends: {\n                                type: 'input',\n                                input: 'datatable',\n                                label: 'Remote API query attributes to append',\n                                columns: {\n                                    attribute: {\n                                        id: 'attribute',\n                                        label: 'Attribute Name'\n                                    },\n                                },\n                                props: {\n                                    'hide-footer': true,\n                                    'dense': true,\n                                    'show-select': true,\n                                },\n                                crud: {\n                                    create: {\n                                        fields: {\n                                            attribute: {\n                                                type: 'input',\n                                                input: 'text',\n                                                label: 'Attribute Name'\n                                            },\n                                        }\n                                    }\n                                }\n                            },\n                        }\n                    },\n                }\n            },\n            decorator: {\n                options: {\n                    formClass: 'ma-0 pa-0',\n                },\n                fields: {\n                    label: {\n                        type: 'input',\n                        input: 'text',\n                        label: 'Decorator Label',\n                        class: 'col-12',\n                    },\n                    labels: {\n                        type: 'input',\n                        input: 'text',\n                        label: 'Decorator Property Names',\n                        class: 'col-12',\n                        props: {\n                            hint: 'comma separated property names'\n                        }\n                    },\n                }\n            },\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VAutocomplete.fields,\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class MultiTextInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VTextField.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            objects: {\n                type: 'input',\n                input: 'datatable',\n                label: 'Items',\n                class: 'col-12 ma-0 pa-0',\n                props: {\n                    'disable-pagination': true,\n                    dense: true\n                },\n                columns: [\n                    {\n                        column: 'id',\n                        title: 'ID'\n                    },\n                    {\n                        column: 'title',\n                        title: 'Title'\n                    }\n                ],\n                create: {\n                    title: 'Add item to multi text select list',\n                    fields: {\n                        id: {\n                            type: 'input',\n                            input: 'text',\n                            class: 'col-6 pe-0 ps-0',\n                            label: 'ID'\n                        },\n                        title: {\n                            type: 'input',\n                            input: 'text',\n                            class: 'col-6 pe-0 ps-0',\n                            label: 'Title'\n                        }\n                    }\n                },\n                edit: {},\n                remove: {}\n            },\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VTextField.fields,\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings\n} from './comon'\n\nexport default class JSONInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: [\n                    {\n                        id: 'change:error',\n                        title: 'Triggers when there is an error in json string'\n                    },\n                    {\n                        id: 'change:success',\n                        title: 'Triggers when json is changed and is valid'\n                    }\n                ]\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class ColorInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VCheckbox.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VCheckbox.fields,\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings,\n    createEventsDatatableInputForSettingsForm,\n    TextSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class ObjectsListInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: [\n                    {\n                        id: 'input',\n                        title: 'Triggered when value inside the form is changed'\n                    }\n                ]\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            objects: {\n                type: 'input',\n                input: 'datatable',\n                label: 'Items',\n                class: 'col-12 ma-0 pa-0',\n                props: {\n                    'disable-pagination': true,\n                    dense: true,\n                    'show-select': true,\n                },\n                'hide-search': true,\n                columns: [\n                    {\n                        id: 'id',\n                        label: 'ID'\n                    },\n                    {\n                        id: 'title',\n                        label: 'Title'\n                    }\n                ],\n                crud: {\n                    create: {\n                        title: 'Add item to select list',\n                        fields: {\n                            id: {\n                                type: 'input',\n                                input: 'text',\n                                class: 'col-6 pe-0 ps-0',\n                                label: 'ID'\n                            },\n                            title: {\n                                type: 'input',\n                                input: 'text',\n                                class: 'col-6 pe-0 ps-0',\n                                label: 'Title'\n                            },\n                        }\n                    },\n                }\n            },\n            decorator: {\n                options: {\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    label: {\n                        type: 'input',\n                        input: 'text',\n                        label: 'Decorator Label',\n                        class: 'col-12',\n                    },\n                    labels: {\n                        type: 'input',\n                        input: 'text',\n                        label: 'Decorator Property Names',\n                        class: 'col-12',\n                        props: {\n                            hint: 'comma separated property names'\n                        }\n                    },\n                }\n            },\n            props: {\n                options: {\n                    type: 'col',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    class: TextSettings('Items class'),\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    BaseInputSettings,\n    MessagesTab,\n    createEventsDatatableInputForSettingsForm,\n    TextSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class BitwiseFlagsInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: [\n                    {\n                        id: 'input',\n                        title: 'Triggered when value is changed'\n                    }\n                ]\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            objects: {\n                type: 'input',\n                input: 'datatable',\n                label: 'Items',\n                class: 'col-12 ma-0 pa-0',\n                props: {\n                    'disable-pagination': true,\n                    dense: true\n                },\n                columns: [\n                    {\n                        id: 'id',\n                        label: 'ID'\n                    },\n                    {\n                        id: 'title',\n                        label: 'Title'\n                    }\n                ],\n                crud: {\n                    create: {\n                        fields: {\n                            id: {\n                                type: 'input',\n                                input: 'text',\n                                class: 'col-6 pe-0 ps-0',\n                                label: 'ID'\n                            },\n                            title: {\n                                type: 'input',\n                                input: 'text',\n                                class: 'col-6 pe-0 ps-0',\n                                label: 'Title'\n                            }\n                        }\n                    },\n                }\n            },\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings,\n    SwitchSettings,\n    TextSettings,\n    ColorSettings\n} from './comon'\n\nexport default class ImageUploadInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return []\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    fullWidth: SwitchSettings('Full width'),\n                    fullHeight: SwitchSettings('Full height'),\n                    hideActions: SwitchSettings('Hide Actions'),\n                    clearable: SwitchSettings('Clearable'),\n                    clearIcon: TextSettings('Clear Icon'),\n                    disabled: SwitchSettings('Disabled'),\n                    readonly: TextSettings('Readonly'),\n                    debounce: TextSettings('Debounce'),\n                    flipHorizontallyIcon: TextSettings('Flip Horizontally Icon'),\n                    flipVerticallyIcon: TextSettings('Flip Vertically Icon Style'),\n                    imageQuality: TextSettings('Image Quality'),\n                    imageFormat: TextSettings('Image Format'),\n                    imageWidth: TextSettings('Image Width'),\n                    imageHeight: TextSettings('Image Height'),\n                    imageMaxScaling: TextSettings('Image Max Scaling'),\n                    imageMinScaling: TextSettings('Image Min Scaling'),\n                    imageBackgroundColor: ColorSettings('Image Background Color'),\n                    overlayBackgroundColor: ColorSettings('Overlay Background Color'),\n                    overlayBorderColor: ColorSettings('Overlay Border Color'),\n                    overlayBorderWidth: TextSettings('Overlay Border Width'),\n                    overlayPadding: TextSettings('Overlay Padding'),\n                    rotateClockwiseIcon: TextSettings('Overlay Padding'),\n                    rotateCounterClockwiseIcon: TextSettings('Overlay Padding'),\n                    scalingSliderColor: ColorSettings('Scaling Slider Color'),\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings,\n    CheckboxSettings,\n    TextSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class DatatableInputSettings extends BaseInputSettings {\n\n    constructor (inputs) {\n        super()\n        this.inputs = inputs;\n    }\n\n    getInputSlots () {\n        return [\n            {\n                id: 'columns',\n                title: 'Column',\n                inputs: this.inputs.filter((t) => t.id === 'column')\n            },\n            {\n                id: 'crud',\n                title: 'CRUD Create/Edit/Filter',\n            },\n            {\n                id: 'forms',\n                title: 'Datatable Form'\n            }\n        ]\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VDataTable.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            table: {\n                options: {\n                    type: 'row',\n                    formClass: 'col-12 ma-0 pa-0',\n                },\n                fields: {\n                    query: {\n                        options: {\n                            type: 'row',\n                            formClass: 'col-12 ma-0 pa-0'\n                        },\n                        fields: {\n                            url: TextSettings('Remote API query URL'),\n                            relations: {\n                                type: 'input',\n                                input: 'datatable',\n                                label: 'Remote API query relations',\n                                columns: {\n                                    name: {\n                                        id: 'name',\n                                        label: 'Relation Name'\n                                    },\n                                    columns: {\n                                        id: 'columns',\n                                        label: 'Relation Columns'\n                                    },\n                                },\n                                props: {\n                                    'hide-footer': true,\n                                    'dense': true,\n                                    'show-select': true,\n                                },\n                                crud: {\n                                    create: {\n                                        fields: {\n                                            name: {\n                                                type: 'input',\n                                                input: 'text',\n                                                label: 'Relation Name'\n                                            },\n                                            columns: {\n                                                type: 'input',\n                                                input: 'text',\n                                                label: 'Relation Columns',\n                                                props: {\n                                                    hint: 'Column names without space and with , as separator character'\n                                                }\n                                            },\n                                        }\n                                    }\n                                }\n                            },\n                            appends: {\n                                type: 'input',\n                                input: 'datatable',\n                                label: 'Remote API query attributes to append',\n                                columns: {\n                                    attribute: {\n                                        id: 'attribute',\n                                        label: 'Attribute Name'\n                                    },\n                                },\n                                props: {\n                                    'hide-footer': true,\n                                    'dense': true,\n                                    'show-select': true,\n                                },\n                                crud: {\n                                    create: {\n                                        fields: {\n                                            attribute: {\n                                                type: 'input',\n                                                input: 'text',\n                                                label: 'Attribute Name'\n                                            },\n                                        }\n                                    }\n                                }\n                            },\n                        }\n                    },\n                    'create-url': TextSettings('Remote Create Form URL'),\n                    'create-permissions': TextSettings('Create permission'),\n                    'reports-url': TextSettings('Remote url for Reports'),\n                    'reports-permissions': TextSettings('Reports permission'),\n                    'export-url': TextSettings('Remote url for downloading Exported file'),\n                }\n            },\n            'hide-create': CheckboxSettings('Can not Create'),\n            'hide-remove': CheckboxSettings('Can not Remove'),\n            'hide-filters': CheckboxSettings('Can not Filter'),\n            'hide-search': CheckboxSettings('Can not Search'),\n            'hide-settings': CheckboxSettings('Can not change settings'),\n            'hide-forms': CheckboxSettings('Can not fill forms'),\n            'hide-removable-filters': CheckboxSettings('Hide \"Remove Filters\" button'),\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VDataTable.fields,\n                    messages: MessagesTab\n                }\n            },\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    BaseInputSettings,\n    TextSettings,\n} from './comon'\n\nimport api from './../api'\n\nexport default class ButtonInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VBtn.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            icon: {\n                type: 'input',\n                input: 'text',\n                label: 'Icon'\n            },\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VBtn.fields\n                }\n            },\n            iconProps: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VIcon.fields\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    BaseInputSettings,\n    MessagesTab,\n    CheckboxSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class BitwiseFlagsInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: [\n                    ...api.VTextField.events\n                ]\n            },\n            {\n                id: 'dateProps',\n                title: 'Date Picker Events',\n                events: [\n                    {\n                        ...api.VDatePicker.events\n                    }\n                ]\n            },\n            {\n                id: 'timeProps',\n                title: 'Time Picker Events',\n                events: [\n                    {\n                        ...api.VTimePicker.events\n                    }\n                ]\n            },\n            {\n                id: 'calendarProps',\n                title: 'Calendar Picker Events',\n                events: [\n                    {\n                        ...api.VSelect.events\n                    }\n                ]\n            },\n            {\n                id: 'timezoneProps',\n                title: 'Timezone Picker Events',\n                events: [\n                    {\n                        ...api.VAutocomplete.events\n                    }\n                ]\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            hideTimezones: CheckboxSettings('Hide Timezones'),\n            hideCalendars: CheckboxSettings('Hide Calendars'),\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VTextField.fields,\n                    messages: MessagesTab\n                }\n            },\n            dateProps: {\n                fields: {\n                    ...api.VDatePicker.fields\n                }\n            },\n            timeProps: {\n                fields: {\n                    ...api.VTimePicker.fields\n                }\n            },\n            timezoneProps: {\n                fields: {\n                    ...api.VSelect.fields\n                }\n            },\n            calendarProps: {\n                fields: {\n                    ...api.VAutocomplete.fields\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings\n} from './comon'\n\nexport default class ColorInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return []\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    BaseInputSettings\n} from './comon'\n\nexport default class AutocompleteInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: [\n                    {\n                        id: 'input',\n                        title: 'Triggerred when Input value is changed'\n                    }\n                ]\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    BaseInputSettings,\n    CheckboxSettings\n} from './comon'\n\nexport default class AutocompleteInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: [\n                    {\n                        id: 'input',\n                        title: 'Triggerred when Input value is changed'\n                    }\n                ]\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            readonly: CheckboxSettings('Readonly', 'removes editor buttons from paragraph input and display in view mode'),\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    BaseInputSettings,\n    TextSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class AlertInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VAlert.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            message: TextSettings('Message'),\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VAlert.fields\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    BaseInputSettings,\n    NumberSettings\n} from './comon'\n\nexport default class FormJSONSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return []\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            height: NumberSettings('Fixed Height')\n        }\n    }\n}\n","import {\n    BaseInputSettings,\n    TextSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class TextInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VPagination.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            id: {\n                type: 'input',\n                input: 'text',\n                label: 'ID',\n                class: 'col-12 ma-0 ps-0 pe-0',\n                updateKeyCodes: [13]\n            },\n            class: {\n                type: 'input',\n                input: 'text',\n                label: 'Class',\n                class: 'col-12 ma-0 ps-0 pe-0'\n            },\n            hidden: {\n                type: 'input',\n                input: 'checkbox',\n                label: 'Hidden',\n                class: 'col-12 ma-0 ps-0 pe-0'\n            },\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VPagination.fields,\n                    'total-visible': TextSettings('Total Visible'),\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    BaseInputSettings,\n    TextSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class SimpleCaptchaSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return []\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VTextField.fields,\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings,\n    CheckboxSettings,\n    TextSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class FileUploadInputSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: [\n                    {\n                        id: 'finished',\n                        title: 'on upload finished'\n                    },\n                    {\n                        id: 'error',\n                        title: 'on upload error'\n                    }\n                ]\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            singleFile: CheckboxSettings('Single file'),\n            max_file_size: TextSettings('Max file size (1m, 2g, for ex.)'),\n            chunk_size: TextSettings('Chunk Size (200kb,...)'),\n            max_retries: TextSettings('Max retries'),\n            prevent_duplicates: CheckboxSettings('Prevent duplicates'),\n            filters: {\n                type: 'input',\n                input: 'datatable',\n                label: 'Availabel extensions',\n                columns: [\n                    {\n                        id: 'title',\n                        label: 'Title'\n                    },\n                    {\n                        id: 'extensions',\n                        label: 'Extensions'\n                    },\n                ],\n                crud: {\n                    create: {\n                        fields: {\n                            extensions: TextSettings('Extensions (jpeg,jpg,...)'),\n                            title: TextSettings('Title'),\n                        }\n                    }\n                },\n                props: {\n                    'show-select': true,\n                    'hide-footer': true,\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    BaseInputSettings,\n    TextSettings\n} from './comon'\n\nexport default class AdminBarTemplateSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return []\n    }\n\n    getInputProperties () {\n        return {\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    BaseInputSettings,\n    TextSettings,\n    CheckboxSettings\n} from './comon'\n\nexport default class AppBarTemplateSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return []\n    }\n\n    getInputProperties () {\n        return {\n            contClass: TextSettings('Container Class'),\n            fluid: CheckboxSettings('Container fluid'),\n            rowClass: TextSettings('Row Class'),\n            colClass: TextSettings('Col Class'),\n            rowAlign: TextSettings('Row Align'),\n            rowJustify: TextSettings('Row Justify'),\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    BaseInputSettings,\n    TextSettings\n} from './comon'\n\nexport default class CenteredTemplateSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return []\n    }\n\n    getInputProperties () {\n        return {\n            contClass: TextSettings('Container class'),\n            rowClass : TextSettings('Row class'),\n            colClass : TextSettings('Col class'),\n            'x-lg': {\n                type: 'input',\n                input: 'text',\n                label: 'X Large width',\n            },\n            lg: {\n                type: 'input',\n                input: 'text',\n                label: 'Large width',\n            },\n            md: {\n                type: 'input',\n                input: 'text',\n                label: 'Medium width',\n            },\n            sm: {\n                type: 'input',\n                input: 'text',\n                label: 'Small width',\n            },\n            'x-sm': {\n                type: 'input',\n                input: 'text',\n                label: 'X Small width',\n            },\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings,\n    TextSettings,\n    CheckboxSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class SimpleFileSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VFileInput.events\n            }\n        ]\n    }\n\n    getInputValidations() {\n        return {\n            required: CheckboxSettings('Required'),\n            numeric: CheckboxSettings('is Numeric'),\n            minLength: TextSettings('Min characters length'),\n            maxLength: TextSettings('Max characters length'),\n            mask: TextSettings('Input mask'),\n            removeMask: CheckboxSettings('Remove mask on dispatch'),\n            farsi: CheckboxSettings('Farsi/Arabic characters only'),\n            ascii: CheckboxSettings('ASCII characters only'),\n        }\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VFileInput.fields,\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class GroupSingleExpansionSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VExpansionPanel.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VExpansionPanel.fields,\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class GroupExpansionSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VExpansionPanel.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VExpansionPanel.fields,\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class GroupTabsSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VTab.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VTab.fields,\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings\n} from './comon'\n\nimport api from './../api'\n\nexport default class GroupTreeviewSettings extends BaseInputSettings {\n    getInputSlots () {\n        return []\n    }\n\n    getInputEventGroupsList () {\n        return [\n            {\n                id: 'props',\n                title: 'Component events',\n                events: api.VTreeview.events\n            }\n        ]\n    }\n\n    getInputProperties () {\n        return {\n            ...CommonInputEssentials,\n            props: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    ...api.VTreeview.fields,\n                    messages: MessagesTab\n                }\n            }\n        }\n    }\n}\n","import {\n    BaseInputSettings,\n    TextSettings,\n    CheckboxSettings\n} from './comon'\n\nexport default class GroupExpansionSettings extends BaseInputSettings {\n    getInputSlots () {\n        return [\n            {\n                id: 'fields',\n                title: 'Fields'\n            }\n        ]\n    }\n\n    getInputEventGroupsList () {\n        return []\n    }\n\n    getInputProperties () {\n        return {\n            id: {\n                type: 'input',\n                input: 'text',\n                label: 'ID',\n                class: 'col-12 ma-0 ps-0 pe-0',\n                updateKeyCodes: [13]\n            },\n            label: {\n                type: 'input',\n                input: 'text',\n                label: 'Label',\n                class: 'col-12 ma-0 ps-0 pe-0'\n            },\n            hidden: {\n                type: 'input',\n                input: 'switch',\n                label: 'Hidden',\n                class: 'col-12 ma-0 ps-0 pe-0'\n            },\n            options: {\n                options: {\n                    type: 'row',\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    formClass: TextSettings('Form Class'),\n                    type: {\n                        type: 'input',\n                        input: 'select',\n                        label: 'Type',\n                        objects: [\n                            {\n                                id: 'row',\n                                title: 'Row'\n                            },\n                            {\n                                id: 'col',\n                                title: 'Column'\n                            },\n                            {\n                                id: 'component',\n                                title: 'Custom Component'\n                            }\n                        ],\n                        decorator: {\n                            id: 'id',\n                            title: 'title',\n                            label: ':title'\n                        }\n                    },\n                    component: TextSettings('Component'),\n                    wrap: {\n                        options: {\n                            type: 'col',\n                            formClass: 'ma-0 pa-0'\n                        },\n                        fields: {\n                            enabled: CheckboxSettings('User Wrapper'),\n                            class: TextSettings('Wrapper Class'),\n                            props: TextSettings('Wrapper props in JSON String'),\n                            component: TextSettings('Wrapper Component'),\n                            inside: {\n                                options: {\n                                    type: 'col',\n                                    formClass: 'ma-0 pa-0'\n                                },\n                                fields: {\n                                    class: TextSettings('Wrapper inside Class'),\n                                    component: TextSettings('Wrapper inside Component'),\n                                    props: TextSettings('Wrapper inside props in JSON String'),\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    BaseInputSettings,\n    TextSettings,\n    CheckboxSettings\n} from './comon'\n\nexport default class DatatableColumnSettings extends BaseInputSettings {\n\n    getInputSlots (item) {\n        if (this.dic && this.dic[item.model.id]) {\n            if (this.dic[item.model.id].tabs.fieldProperties.type === 'actions') {\n                return [\n                    {\n                        id: 'actions',\n                        title: 'Actions'\n                    }\n                ]\n            }\n        }\n        return []\n    }\n\n    getInputEventGroupsList (item) {\n        if (this.dic && this.dic[item.model.id]) {\n            if (this.dic[item.model.id].tabs.fieldProperties.type === 'actions') {\n                return [\n                    {\n                        id: 'props',\n                        title: 'Column Events',\n                        events: [\n                            {\n                                id: 'before-render',\n                                title: 'Before Column is rendererd',\n                            }\n                        ]\n                    }\n                ]\n            }\n        }\n\n        return []\n    }\n\n    onSettingsUpdated (vals, item) {\n        if (!this.dic) {\n            this.dic = {}\n        }\n        if (item) {\n            this.dic[item.model.id] = vals\n        }\n    }\n\n    getInputProperties (item) {\n        const extras = {}\n        if (this.dic && this.dic[item.model.id]) {\n            const values = this.dic[item.model.id]\n            const type = values.tabs && values.tabs.fieldProperties ? values.tabs.fieldProperties.type : null;\n            if (type === 'custom') {\n                extras.component = {\n                    type: 'input',\n                    input: 'text',\n                    label: 'Component',\n                    class: 'col-12 ma-0 pa-0',\n                }\n                extras.slot = {\n                    type: 'input',\n                    input: 'text',\n                    label: 'Slot',\n                    class: 'col-12 ma-0 pa-0',\n                }\n            } else if (type === 'expan-list') {\n                extras.component = {\n                    type: 'input',\n                    input: 'text',\n                    label: 'Expand Component',\n                    class: 'col-12 ma-0 pa-0',\n                }\n            } else if (type === 'nested-object') {\n                extras['nested-path'] = {\n                    type: 'input',\n                    input: 'text',\n                    label: 'Nested Path',\n                    class: 'col-12 ma-0 pa-0',\n                }\n            } else if (type === 'hover-list') {\n                extras['decorator'] = {\n                    options: {\n                        formClass: 'ma-0 pa-0'\n                    },\n                    fields: {\n                        label: {\n                            type: 'input',\n                            input: 'text',\n                            label: 'Decorator Label',\n                            class: 'col-12',\n                        },\n                        labels: {\n                            type: 'input',\n                            input: 'text',\n                            label: 'Decorator Property Names',\n                            class: 'col-12',\n                            props: {\n                                hint: 'comma separated property names'\n                            }\n                        },\n                    }\n                }\n            } else if (type === 'objects-map' || type === 'bitwise-flags') {\n                extras['decorator'] = {\n                    options: {\n                        formClass: 'ma-0 pa-0'\n                    },\n                    fields: {\n                        label: {\n                            type: 'input',\n                            input: 'text',\n                            label: 'Decorator Label',\n                        },\n                        labels: {\n                            type: 'input',\n                            input: 'text',\n                            label: 'Decorator Property Names',\n                            props: {\n                                hint: 'comma separated property names'\n                            }\n                        },\n                    }\n                }\n                extras['nested-path-key'] = {\n                    type: 'input',\n                    input: 'text',\n                    label: 'Nested Path',\n                    class: 'col-12 ma-0 pa-0 mb-2',\n                }\n                extras['map'] = {\n                    type: 'input',\n                    input: 'datatable',\n                    label: 'Objects',\n                    columns: [\n                        {\n                            id: 'id',\n                            label: 'ID'\n                        },\n                        {\n                            id: 'title',\n                            label: 'Title'\n                        },\n                        {\n                            id: 'color',\n                            label: 'Color'\n                        }\n                    ],\n                    'hide-search': false,\n                    props: {\n                        'show-select': true,\n                    },\n                    crud: {\n                        create: {\n                            fields: {\n                                id: TextSettings('ID'),\n                                title: TextSettings('Title'),\n                                color: {\n                                    type:'input',\n                                    input: 'color',\n                                    label: 'Color',\n                                }\n                            },\n                            options: {\n                                type: 'col',\n                            }\n                        }\n                    }\n                }\n            } else if (type === 'amount') {\n                extras['currency'] = TextSettings('Currency')\n                extras['emptyMessage'] = TextSettings('Emppty message')\n                extras['show_type'] = CheckboxSettings('Show type')\n                extras['positive'] = TextSettings('Positive value')\n                extras['negative'] = TextSettings('Negative value')\n            }\n        }\n\n        return {\n            ...CommonInputEssentials,\n            sortable: {\n                type: 'input',\n                input: 'checkbox',\n                label: 'Sortable',\n                class: 'col-12 ma-0 pa-0',\n            },\n            sort_name: {\n                type: 'input',\n                input: 'text',\n                label: 'Sort key name',\n                class: 'col-12 ma-0 pa-0',\n            },\n            align: {\n                type: 'input',\n                input: 'select',\n                label: 'Align',\n                class: 'col-6',\n                objects: [\n                    {\n                        id: 'start',\n                        title: 'Start'\n                    },\n                    {\n                        id: 'end',\n                        title: 'End'\n                    },\n                    {\n                        id: 'center',\n                        title: 'Center'\n                    }\n                ],\n            },\n            width: {\n                type: 'input',\n                input: 'text',\n                label: 'Width',\n                class: 'col-6',\n            },\n            type: {\n                type: 'input',\n                input: 'select',\n                label: 'Column content type',\n                class: 'col-12',\n                objects: [\n                    {\n                        id: 'simple',\n                        title: 'Simple'\n                    },\n                    {\n                        id: 'nested-object',\n                        title: 'Nested Object'\n                    },\n                    {\n                        id: 'datetime',\n                        title: 'DateTime'\n                    },\n                    {\n                        id: 'hover-list',\n                        title: 'Hover List'\n                    },\n                    {\n                        id: 'expan-list',\n                        title: 'Expandable List'\n                    },\n                    {\n                        id: 'actions',\n                        title: 'Actions'\n                    },\n                    {\n                        id: 'amount',\n                        title: 'Currency/Amount',\n                    },\n                    {\n                        id: 'objects-map',\n                        title: 'Objects Map',\n                    },\n                    {\n                        id: 'bitwise-flags',\n                        title: 'Bitwise Flags',\n                    },\n                    {\n                        id: 'custom',\n                        title: 'Custom Component'\n                    },\n\n                ]\n            },\n            ...extras\n        }\n    }\n}\n","import {\n    CommonInputEssentials,\n    MessagesTab,\n    BaseInputSettings,\n    TextSettings,\n    CheckboxSettings\n} from '../comon'\n\n\nexport default class ChartSettings extends BaseInputSettings {\n    getInputSlots() {\n        return [\n            {\n                id: 'filters',\n                title: 'Filters'\n            }\n        ]\n    }\n\n    getInputEventGroupsList() {\n        return []\n    }\n\n    getInputProperties() {\n        return {\n            ...CommonInputEssentials,\n            subtitle: TextSettings('Subtitle'),\n            report_url: TextSettings('Report URL'),\n            report_name: TextSettings('Report Name'),\n            report_label_key: TextSettings('Label key for mapping labels (id)'),\n            report_item_key: TextSettings('Report key for mapping labels (domain,role,...)'),\n            report_groups: TextSettings('Group datasets by keys'),\n            default_duration: TextSettings('Default duration', 'one of (1m, 5m, 10m, 30m, 1h, 3h, 6h, 12h, 1d, 2d, 7d, 15d, 30d, 90d, 180d, 1y, 2y'),\n            default_window: TextSettings('Default window', 'one of (1s, 10s, 30s, 1m, 5m, 10m, 15m, 30m, 1h, 3h, 6h, 12h, 1d, 7d, 30d'),\n            is_windowed: CheckboxSettings('is Windowed'),\n            is_x_time: CheckboxSettings('is X axis time series'),\n            report_type: {\n                type: 'input',\n                input: 'select',\n                label: 'Report type',\n                multiple: false,\n                objects: [\n                    {\n                        id: 'pie',\n                        title: 'Pie'\n                    },\n                    {\n                        id: 'bar',\n                        title: 'Bar'\n                    },\n                    {\n                        id: 'line',\n                        title: 'Line'\n                    },\n                    {\n                        id: 'scatter',\n                        title: 'Scatter'\n                    },\n                ],\n                props: {\n                    multiple: false,\n                }\n            },\n            decorator: {\n                options: {\n                    formClass: 'ma-0 pa-0'\n                },\n                fields: {\n                    label: {\n                        type: 'input',\n                        input: 'text',\n                        label: 'Decorator Label',\n                    },\n                    labels: {\n                        type: 'input',\n                        input: 'text',\n                        label: 'Decorator Property Names',\n                        props: {\n                            hint: 'comma separated property names'\n                        }\n                    },\n                }\n            },\n            group: {\n                type: 'input',\n                input: 'text',\n                label: 'Query server group columns',\n                props: {\n                    class: 'col-12, pa-0'\n                },\n            },\n            func: {\n                type: 'input',\n                input: 'text',\n                label: 'Query server function name',\n                props: {\n                    class: 'col-12, pa-0'\n                },\n            },\n            query_filters: {\n                type: 'input',\n                input: 'datatable',\n                label: 'Query servier filters',\n                columns: [\n                    {\n                        id: 'filter',\n                        title: 'Filter',\n                    },\n                    {\n                        id: 'value',\n                        title: 'Value',\n                    },\n                ],\n                props: {\n                    'disable-pagination': true,\n                    dense: true,\n                    'show-select': true,\n                },\n                'hide-search': true,\n                crud: {\n                    create: {\n                        fields: {\n                            filter: {\n                                type: 'input',\n                                input: 'text',\n                                label: 'Filter tag'\n                            },\n                            value: {\n                                type: 'input',\n                                input: 'text',\n                                label: 'Value of tag',\n                            }\n                        }\n                    }\n                },\n            },\n            xs: TextSettings('X-Small cols'),\n            sm: TextSettings('Small cols'),\n            md: TextSettings('Medium cols'),\n            lg: TextSettings('Large cols'),\n        }\n    }\n}\n","import TextInputSettings from './settings/TextInput'\nimport SwitchInputSettings from './settings/SwitchInput'\nimport FieldsRendererSettings from './settings/FieldsRenderer'\nimport InputSelectSettings from './settings/SelectInput'\nimport RangeInputSettings from './settings/RangeInput'\nimport RadioGroupInputSettings from './settings/RadioGroupInput'\n\nimport ColorInputSettings from './settings/ColorInput'\nimport ButtonGroupInputSettings from './settings/ButtonGroupInput'\nimport AutocompleteInputSettings from './settings/AutocompleteInput'\nimport MultiTextInputSettings from './settings/MultiTextInput'\nimport JSONInputSettings from './settings/JSONInput'\nimport CheckboxInputSettings from './settings/CheckboxInput'\nimport ObjectsListInputSettings from './settings/ObjectsListInput'\nimport BitwiseFlagsInputSettings from './settings/BitwiseFlagsInput'\nimport ImageUploadInputSettings from './settings/ImageUploadInput'\nimport DatatableInputSettings from './settings/DatatableInput'\nimport ButtonInput from './settings/ButtonInput'\nimport DateTimeInputSettings from './settings/DateTimeInput'\nimport CalednarInputSettings from './settings/CalendarInput'\nimport MarkdownInputSettings from './settings/MarkdownInput'\nimport ParagraphInputSettings from './settings/ParagraphInput'\nimport AlertInputSettings from './settings/AlertInput'\nimport FormJSONSettings from './settings/FormJSONInput'\nimport PaginationSettings from './settings/PaginationInput'\nimport SimpleCaptchaSettings from './settings/SimpleCaptcha'\nimport FileUploadInputSettings from './settings/FileUploadInput'\nimport AdminBarTemplateSettings from './settings/AdminBar'\nimport AppBarTemplateSettings from './settings/AppBar'\nimport CenteredTemplateSettings from './settings/Centered'\nimport SimpleFileSettings from './settings/SimpleFileInput'\n\nimport GroupSingleExpansionSettings from './settings/GroupSingleExpansion'\nimport GroupExpansionSettings from './settings/GroupExpansion'\nimport GroupTabsSettings from './settings/GroupTabs'\nimport GroupTreeviewSettings from './settings/GroupTreeview'\nimport GroupSettings from './settings/Group'\nimport DatatableColumnSettings from './settings/DatatableColumn'\n\nimport ChartSettings       from './settings/reports/ChartSettings'\n\n\n/**\n * A mixin component for FormJSON Builder\n *  implements all necessary methods and properties for\n *  a fully functioning FomrJSON Builder\n */\nexport default {\n    props: {\n        availableInputs: Array,\n    },\n    data () {\n\n        const inputTypeSettings = {\n            'vf-text-input': new TextInputSettings(),\n            'vf-fields-renderer': new FieldsRendererSettings(),\n            'vf-switch-input': new SwitchInputSettings(),\n            'vf-select-input': new InputSelectSettings(),\n            'vf-range-input': new RangeInputSettings(),\n            'vf-radio-group-input': new RadioGroupInputSettings(),\n            'vf-color-input': new ColorInputSettings(),\n            'vf-button-group-input': new ButtonGroupInputSettings(),\n            'vf-autocomplete-input': new AutocompleteInputSettings(),\n            'vf-multi-text-input': new MultiTextInputSettings(),\n            'vf-json-input': new JSONInputSettings(),\n            'vf-checkbox-input': new CheckboxInputSettings(),\n            'vf-bitwise-flags-input': new BitwiseFlagsInputSettings(),\n            'vf-objects-list-input': new ObjectsListInputSettings(),\n            'vf-datatable-input': new DatatableInputSettings(),\n            'vf-group-single-exp': new GroupSingleExpansionSettings(),\n            'vf-group-expansion': new GroupExpansionSettings(),\n            'vf-group-tabs': new GroupTabsSettings(),\n            'vf-group-treeview': new GroupTreeviewSettings(),\n            'vf-button-input': new ButtonInput(),\n            'vf-image-upload-input': new ImageUploadInputSettings(),\n            'vf-datetime-input': new DateTimeInputSettings(),\n            'vf-calendar-input': new CalednarInputSettings(),\n            'vf-paragraph-input': new ParagraphInputSettings(),\n            'vf-markdown-input': new MarkdownInputSettings(),\n            'vf-alert-input': new AlertInputSettings(),\n            'vf-formjson-input': new FormJSONSettings(),\n            'vf-simple-captcha-input': new SimpleCaptchaSettings(),\n            'vf-file-upload-input': new FileUploadInputSettings(),\n            group: new GroupSettings(),\n            column: new DatatableColumnSettings(),\n            'Centered': new CenteredTemplateSettings(),\n            'AdminBar': new AdminBarTemplateSettings(),\n            'AppBar': new AppBarTemplateSettings(),\n            'vf-pagination-input': new PaginationSettings(),\n            'vf-reports-chart-input': new ChartSettings(),\n            'vf-simple-file-input': new SimpleFileSettings(),\n        }\n\n        const FormBuilderInputsList = []\n        if (this.availableInputs) {\n            FormBuilderInputsList.push(...this.availableInputs)\n        } else {\n            for (const key in inputTypeSettings) {\n                const parts = key.split('-')\n                if (parts[0] === 'vf') {\n                    const title = parts.splice(1)\n                    title[0] = title[0].slice(0, 1).toUpperCase() + title[0].slice(1)\n                    FormBuilderInputsList.push({\n                        id: key,\n                        title: title.join(' '),\n                        group: 'form',\n                    })\n                }\n            }\n            for (const key in window.ExtraFormJSONSettings) {\n                const parts = key.split('-')\n                if (parts[0] === 'vf') {\n                    const title = parts.splice(1)\n                    title[0] = title[0].slice(0, 1).toUpperCase() + title[0].slice(1)\n                    inputTypeSettings[key] = window.ExtraFormJSONSettings[key]\n                    FormBuilderInputsList.push({\n                        id: key,\n                        title: title.join(' '),\n                        group: 'website',\n                    })\n                }\n            }\n\n            FormBuilderInputsList.push({\n                id: 'group',\n                title: 'Group',\n                group: 'form',\n            })\n            FormBuilderInputsList.push({\n                id: 'column',\n                title: 'DataTable Column',\n                group: 'form',\n            })\n            FormBuilderInputsList.push({\n                id: 'component',\n                title: 'Custom Component',\n                group: 'form',\n            })\n            FormBuilderInputsList.sort((a, b) => ('' + a.title).localeCompare(b.title))\n        }\n        inputTypeSettings['vf-datatable-input'].inputs = FormBuilderInputsList\n\n        return {\n            inputs: FormBuilderInputsList,\n            inputTypeSettings\n        }\n    },\n    methods: {\n        getCopyPathAction: function (items, item) {\n            return {\n                type: 'button',\n                icon: 'mdi-map-marker-path',\n                iconProps: {\n                    small: true,\n                    color: 'secondary',\n                },\n                props: {\n                    icon: true,\n                    small: true,\n                    click: () => {\n                        const path = [];\n                        let iter = item;\n                        while (iter) {\n                            if (!iter.isRoot()) {\n                                path.push(iter.model.id);\n                                if (iter.value.slots?.slot) {\n                                    path.push(iter.value.slots.slot);\n                                }\n                            }\n                            iter = iter.parent;\n                            if (iter && iter.model.type === 'vf-fields-renderer') {\n                                path.push('fields');\n                            }\n                        }\n                        var dummy = document.createElement(\"textarea\");\n                        // to avoid breaking orgain page when copying more words\n                        // cant copy when adding below this code\n                        // dummy.style.display = 'none'\n                        document.body.appendChild(dummy);\n                        //Be careful if you use texarea. setAttribute('value', value), which works with \"input\" does not work with \"textarea\". – Eduard\n                        dummy.value = path.join('.');\n                        dummy.select();\n                        document.execCommand(\"copy\");\n                        document.body.removeChild(dummy);\n                        this.$store.state.host.showSnack('Path Copied', 'success');\n                    }\n                }\n            }\n        },\n        getCopyContentAction: function (items, item) {\n            return {\n                type: 'button',\n                icon: 'mdi-content-copy',\n                iconProps: {\n                    small: true,\n                    color: 'primary',\n                },\n                props: {\n                    icon: true,\n                    small: true,\n                    click: () => {\n                        var dummy = document.createElement(\"textarea\");\n                        // to avoid breaking orgain page when copying more words\n                        // cant copy when adding below this code\n                        // dummy.style.display = 'none'\n                        document.body.appendChild(dummy);\n                        //Be careful if you use texarea. setAttribute('value', value), which works with \"input\" does not work with \"textarea\". – Eduard\n                        dummy.value = JSON.stringify(item.model);\n                        dummy.select();\n                        document.execCommand(\"copy\");\n                        document.body.removeChild(dummy);\n                        this.$store.state.host.showSnack('Content Copied', 'success');\n                    }\n                }\n            }\n        },\n        getPasteContentNextAction: function (items, item) {\n            return {\n                type: 'button',\n                icon: 'mdi-content-paste',\n                iconProps: {\n                    small: true,\n                    color: 'warning',\n                },\n                props: {\n                    icon: true,\n                    small: true,\n                    click: () => {\n                        const newItem = JSON.parse(text);\n                        const newModel = this.treeModel.parse(newItem)\n                        newModel.value = {\n                            settings: {\n                                tabs: {\n                                    fieldProperties: {\n                                        id: newItem.id\n                                    }\n                                }\n                            },\n                            slots: {\n                                slot: null\n                            }\n                        }\n\n                        const itemParentTypeSettings = this.inputTypeSettings[item.model.type]\n                        if (itemParentTypeSettings && itemParentTypeSettings.getInputSlots(item).length > 0) {\n                            newModel.value.slots.slot = itemParentTypeSettings.getInputSlots(item)[0].id\n                        }\n\n                        item.parent.addChild(newModel)\n                    }\n                }\n            }\n        },\n        getPasteContentInsideAction: function (items, item) {\n            return {\n                type: 'button',\n                icon: 'mdi-plus-network',\n                iconProps: {\n                    small: true,\n                    color: 'warning',\n                },\n                props: {\n                    icon: true,\n                    small: true,\n                    click: () => {\n                        navigator.clipboard.readText()\n                        .then(text => {\n                            const newItem = JSON.parse(text);\n                            const newModel = this.treeModel.parse(newItem)\n                            newModel.value = {\n                                settings: {\n                                    tabs: {\n                                        fieldProperties: {\n                                            id: newItem.id\n                                        }\n                                    }\n                                },\n                                slots: {\n                                    slot: null\n                                }\n                            }\n\n                            const itemParentTypeSettings = this.inputTypeSettings[item.model.type]\n                            if (itemParentTypeSettings && itemParentTypeSettings.getInputSlots(item).length > 0) {\n                                newModel.value.slots.slot = itemParentTypeSettings.getInputSlots(item)[0].id\n                            }\n\n                            item.addChild(newModel)\n                        })\n                        .catch(err => {\n                            this.$store.state.host.showSnack('Could not read clipboard')\n                        });\n                    }\n                }\n            }\n        },\n        getRemoveAction: function (items, item) {\n            return {\n                type: 'confirm',\n                iconProps: {\n                    small: true,\n                    color: 'red'\n                },\n                icon: 'mdi-minus-box',\n                props: {\n                    small: true,\n                    icon: true\n                },\n                confirm: 'Delete',\n                message: 'Are you sure you want to remove item ' + item.model.id + '?',\n                callback: (confirm) => {\n                    if (confirm) {\n                        item.drop()\n                    }\n                }\n            }\n        },\n        getSettingsAction: function (items, item, onUpdated) {\n            const fields = this.inputTypeSettings[item.model.type] ? this.inputTypeSettings[item.model.type] : {}\n            const form = {\n                type: 'drawer',\n                onUpdated,\n                iconProps: {\n                    color: 'primary',\n                    small: true\n                },\n                icon: 'mdi-settings',\n                props: {\n                    icon: true,\n                    small: true\n                },\n                fields\n            }\n            if (fields.getSettingsFormFields) {\n                form.fields = fields.getSettingsFormFields(item)\n            }\n\n            return form\n        },\n        getDuplicateAction: function (items, item) {\n            return {\n                type: 'button',\n                icon: 'mdi-content-duplicate',\n                iconProps: {\n                    small: true,\n                    color: 'orange',\n                },\n                props: {\n                    icon: true,\n                    small: true,\n                    click: () => {\n                        const newCopy = JSON.parse(JSON.stringify({ ...item.model }))\n                        newCopy.id = ('rnd' + Math.random() * Number.MAX_SAFE_INTEGER).substr(0, 10)\n                        const newModel = this.treeModel.parse(newCopy)\n                        newModel.value = JSON.parse(JSON.stringify({ ...item.value }))\n                        this.appendNestedPathValue(newModel, 'value.settings.id', newCopy.id)\n                        item.parent.addChild(newModel)\n                    }\n                }\n            }\n        },\n        getMoveAction: function (items, item, inputs) {\n            return {\n                type: 'menu',\n                iconProps: {\n                    small: true,\n                    color: 'primary'\n                },\n                icon: 'mdi-format-vertical-align-center',\n                props: {\n                    small: true,\n                    icon: true\n                },\n                formProps: {\n                    options: {\n                        type: 'component',\n                        component: 'v-card',\n                        formClass: 'ma-0 px-0 py-0',\n                        wrap: {\n                            component: 'v-list',\n                            class: 'pa-0',\n                            props: {\n                                dense: true\n                            },\n                            inside: {\n                                component: 'v-list-item',\n                                props: {\n                                    dense: true\n                                }\n                            }\n                        }\n                    }\n                },\n                fields: {\n                    first: {\n                        type: 'input',\n                        input: 'button',\n                        props: {\n                            icon: true,\n                            small: true,\n                            click: () => {\n                                item.setIndex(0)\n                            }\n                        },\n                        iconProps: {\n                            small: true\n                        },\n                        icon: 'mdi-format-vertical-align-top'\n                    },\n                    up: {\n                        type: 'input',\n                        input: 'button',\n                        props: {\n                            icon: true,\n                            small: true,\n                            click: () => {\n                                if (item.getIndex() > 0) {\n                                    item.setIndex(item.getIndex() - 1)\n                                }\n                            }\n                        },\n                        iconProps: {\n                            small: true\n                        },\n                        icon: 'mdi-transfer-up'\n                    },\n                    down: {\n                        type: 'input',\n                        input: 'button',\n                        props: {\n                            icon: true,\n                            small: true,\n                            click: () => {\n                                if (item.getIndex() < item.parent.children.length - 1) {\n                                    item.setIndex(item.getIndex() + 1)\n                                }\n                            }\n                        },\n                        iconProps: {\n                            small: true\n                        },\n                        icon: 'mdi-transfer-down'\n                    },\n                    bottom: {\n                        type: 'input',\n                        input: 'button',\n                        props: {\n                            icon: true,\n                            small: true,\n                            click: () => {\n                                item.setIndex(item.parent.children.length - 1)\n                            }\n                        },\n                        iconProps: {\n                            small: true\n                        },\n                        icon: 'mdi-format-vertical-align-bottom'\n                    }\n                }\n            }\n        },\n        getAddAction: function (items, itemParent, inputs) {\n            if (!inputs) { inputs = this.inputs }\n            return {\n                type: 'dialog',\n                icon: 'mdi-plus',\n                iconProps: {\n                    color: 'success',\n                    small: true\n                },\n                props: {\n                    icon: true,\n                    small: true\n                },\n                formProps: {\n                    options: {\n                        type: 'component',\n                        component: 'v-card'\n                    }\n                },\n                fields: {\n                    type: {\n                        type: 'input',\n                        input: 'buttons-list',\n                        label: 'Add a new field to Form Builder',\n                        class: 'mt-3',\n                        groups: [\n                            {\n                                id: 'form',\n                                title: 'FormJSON'\n                            },\n                            {\n                                id: 'website',\n                                title: 'Website',\n                            },\n                        ],\n                        decorator: {\n                            id: 'id',\n                            title: 'title',\n                            label: ':title'\n                        },\n                        objects: inputs,\n                        props: {\n                            outlined: true,\n                            class: 'ma-1'\n                        },\n                        once: true,\n                        click: (clicked) => {\n                            const newItem = {\n                                id: ('rnd' + Math.random() * Number.MAX_SAFE_INTEGER).substr(0, 10),\n                                title: clicked.title,\n                                type: clicked.id\n                            }\n                            const newModel = this.treeModel.parse(newItem)\n                            newModel.value = {\n                                settings: {\n                                    tabs: {\n                                        fieldProperties: {\n                                            id: newItem.id\n                                        }\n                                    }\n                                },\n                                slots: {\n                                    slot: null\n                                }\n                            }\n\n                            const itemParentTypeSettings = this.inputTypeSettings[itemParent.model.type]\n                            if (itemParentTypeSettings && itemParentTypeSettings.getInputSlots(itemParent).length > 0) {\n                                newModel.value.slots.slot = itemParentTypeSettings.getInputSlots(itemParent)[0].id\n                            }\n\n                            itemParent.addChild(newModel)\n                        }\n                    }\n                }\n            }\n        },\n        getChangeSlotAction: function (item, slots) {\n            return {\n                type: 'menu',\n                iconProps: {\n                    small: true,\n                    color: 'secondary'\n                },\n                icon: 'mdi-widgets',\n                props: {\n                    small: true,\n                    icon: true\n                },\n                formProps: {\n                    options: {\n                        type: 'component',\n                        component: 'v-card',\n                    }\n                },\n                fields: {\n                    slot: {\n                        type: 'input',\n                        input: 'radio-group',\n                        label: 'Component Slot',\n                        objects: slots\n                    }\n                },\n            }\n        },\n\n        /**\n         * get [ActionsProvider] for formjson builder treeview items\n         */\n        getFormJSONBuilderActionProviderForTreeview () {\n            return {\n                hasAction: (slot, item) => {\n                    return true\n                },\n                getActions: (slot, item) => {\n                    const actions = {}\n                    switch (slot) {\n                    case 'append':\n                        if (!item.isRoot()) {\n                            actions.remove = this.getRemoveAction(\n                                this.schema.builder,\n                                item\n                            )\n                            actions.copy_path = this.getCopyPathAction(\n                                this.schema.builder,\n                                item\n                            )\n                            actions.move = this.getMoveAction(\n                                this.schema.builder,\n                                item\n                            )\n                            actions.duplicate = this.getDuplicateAction(\n                                this.schema.builder,\n                                item\n                            )\n                            actions.copy = this.getCopyContentAction(this.schema.builder, item);\n                            actions.pasteNext = this.getPasteContentNextAction(this.schema.builder, item);\n                        } else if (this.template && this.inputTypeSettings[this.template]) {\n                            actions.__template = {\n                                type: 'drawer',\n                                iconProps: {\n                                    color: 'cyan',\n                                    small: true\n                                },\n                                icon: 'mdi-format-paint',\n                                props: {\n                                    icon: true,\n                                    small: true\n                                },\n                                fields: this.inputTypeSettings[this.template].getInputProperties(item)\n                            }\n                        }\n                        break\n                    case 'prepend':\n                        if (!item.isRoot()) {\n                            const parentTypeSettings = this.inputTypeSettings[item.parent.model.type]\n                            if (parentTypeSettings && parentTypeSettings.getInputSlots(item).length > 1) {\n                                actions.slots = this.getChangeSlotAction(\n                                    item,\n                                    parentTypeSettings.getInputSlots(item)\n                                )\n                            }\n                        }\n                        if (item.model.type === 'vf-fields-renderer') {\n                            actions.pasteInside = this.getPasteContentInsideAction(this.schema.builder, item);\n                            actions.add = this.getAddAction(this.schema.builder, item)\n                        }\n                        if (this.inputTypeSettings[item.model.type] && this.inputTypeSettings[item.model.type].getInputSlots) {\n                            if (this.inputTypeSettings[item.model.type].getInputSlots(item).length > 0) {\n                                actions.add = this.getAddAction(this.schema.builder, item)\n                            }\n                        }\n                        if (item.model.type.startsWith('group')) {\n                            actions.add = this.getAddAction(this.schema.builder, item, this.inputs.filter((t) => !['group', 'column'].includes(t.id)))\n                        }\n                        if (item.model.type.startsWith('vf-group-')) {\n                            actions.add = this.getAddAction(this.schema.builder, item, this.inputs.filter((t) => t.id === 'group'))\n                        }\n                        actions.settings = this.getSettingsAction(\n                            this.schema.builder,\n                            item,\n                            vals => {\n                                if (vals && vals.tabs && vals.tabs.fieldProperties && vals.tabs.fieldProperties.id) {\n                                    if (item.model.id !== vals.tabs.fieldProperties.id) {\n                                        item.model.id = vals.tabs.fieldProperties.id\n                                    }\n                                }\n                                if (this.inputTypeSettings[item.model.type] && this.inputTypeSettings[item.model.type].onSettingsUpdated) {\n                                    this.inputTypeSettings[item.model.type].onSettingsUpdated(vals, item)\n                                }\n                            }\n                        )\n                        break\n                    }\n                    return actions\n                }\n            }\n        },\n\n        /**\n         * get properties object for a <vuetify-formjson> from treeview (formjson builder) items\n         */\n        getFormJSONFromSchema (schema) {\n            const formjson = {}\n            const iterateAndEvaluateItems = (items, ref) => {\n                /**\n                 * create child from each item type\n                 * iterate on all items and their children\n                 */\n                items.forEach(item => {\n                    /** the property field to store child objects */\n                    let appendChildrenProperty = 'default'\n                    /** item settings */\n                    let itemTypeSettings = null\n\n                    if (item.model.type && item.model.type !== 'vf-fields-renderer') {\n                        itemTypeSettings = this.inputTypeSettings[item.model.type]\n                        /** input type item */\n                        if (item.model.type.endsWith('input')) {\n                            const idSlices = item.model.type.split('-')\n                            ref[item.model.id] = {\n                                type: 'input',\n                                input: idSlices.slice(1, idSlices.length - 1).join('-')\n                            }\n                        }\n                        /** group type item */\n                        else if (item.model.type.startsWith('vf-group-')) {\n                            appendChildrenProperty = 'groups'\n                            const idSlices = item.model.type.split('-')\n                            ref[item.model.id] = {\n                                type: 'group',\n                                group: idSlices.slice(2).join('-'),\n                                groups: {}\n                            }\n                        }\n                        /** input/group inner slot */\n                        else {\n                            ref[item.model.id] = {\n                                __custom_slot: item.model.type\n                            }\n                        }\n                    } else {\n                        /** its a vf-fields-renderer */\n                        itemTypeSettings = this.inputTypeSettings['vf-fields-renderer']\n                        ref[item.model.id] = {\n                            id: item.model.id,\n                            fields: {}\n                        }\n                        appendChildrenProperty = 'fields'\n                    }\n\n                    /** append item props from settings if\n                     * there is a settings available from type */\n                    if (itemTypeSettings) {\n                        const itemSettings = itemTypeSettings.getInputPropsFromSettings((item.value && item.value.settings ? item.value.settings : {}));\n                        ref[item.model.id] = {\n                            ...ref[item.model.id],\n                            ...itemSettings\n                        }\n                    }\n\n                    // append template properties if target item has one\n                    if (item.value && item.value.__template) {\n                        ref[item.model.id] = {\n                            ...ref[item.model.id],\n                            __template: { ...item.value.__template }\n                        }\n                    }\n\n                    // iterate childrens\n                    if (item.children.length > 0) {\n                        if (itemTypeSettings && itemTypeSettings.getInputSlots(item).length > 0) {\n                            // iterate on slot childs\n                            itemTypeSettings.getInputSlots(item).forEach((slot) => {\n                                if (!ref[item.model.id][slot.id]) {\n                                    ref[item.model.id][slot.id] = {}\n                                }\n                                iterateAndEvaluateItems(item.children.filter((child) => child.value && child.value.slots && child.value.slots.slot === slot.id), ref[item.model.id][slot.id])\n                            })\n                        }\n                        // iterate on default slot\n                        if (!ref[item.model.id][appendChildrenProperty]) {\n                            ref[item.model.id][appendChildrenProperty] = {}\n                        }\n\n                        iterateAndEvaluateItems(\n                            item.children.filter((child) => !child.value || !child.value.slots || !child.value.slots.slot),\n                            ref[item.model.id][appendChildrenProperty]\n                        )\n                    }\n                })\n            }\n            iterateAndEvaluateItems(schema, formjson)\n            return formjson\n        },\n\n        /**\n         * get treeview items for <vf-formjson-input> (formjson builder) from a <vuetify-formjson>(formjson) properties object\n         * @param {Object} tree form json properties\n         */\n        getFormSchemaFromFormJSON (formjson) {\n            const getTree = (data, emptyType = null, slot = null) => {\n                const tree = []\n                for (const prop in data) {\n                    let itemType = 'vf-fields-renderer'\n                    let itemId = prop\n\n                    if (data[prop].type) {\n                        switch (data[prop].type) {\n                        case 'input':\n                            itemType = 'vf-' + data[prop].input + '-input'\n                            break\n                        case 'group':\n                            itemType = 'vf-group-' + data[prop].group\n                            break\n                        case 'component':\n                            itemType = data[prop].component\n                            break\n                        default:\n                            if (data[prop].__custom_slot) {\n                                itemType = data[prop].__custom_slot\n                            } else {\n                                itemType = data[prop].type\n                            }\n                            break\n                        }\n                    } else if (data[prop].__custom_slot) {\n                        itemType = data[prop].__custom_slot\n                        itemId = data[prop].id\n                    } else if (emptyType) {\n                        itemType = emptyType\n                        itemId = data[prop].id\n                    } else {\n                        itemId = data[prop].id\n                    }\n                    const newItem = {\n                        id: itemId,\n                        type: itemType\n                    }\n                    const newModel = this.treeModel.parse(newItem)\n                    let children = []\n                    if (data[prop].fields) {\n                        children = getTree(data[prop].fields)\n                    } else if (data[prop].groups) {\n                        children = getTree(data[prop].groups, 'group')\n                    }\n\n                    let eventsVals = {}\n                    let settingsVals = {}\n                    // keep property names which contain inner slots and content from ending up in settingsVals\n                    const notDataKeys = [\n                        'fields',\n                        'groups',\n                        'components',\n                        'v-on',\n                    ]\n\n                    // apply settings on item value before asking for InputSlots\n                    for (const inner in data[prop]) {\n                        if (notDataKeys.indexOf(inner) < 0) {\n                            if (typeof data[prop][inner] === 'object') {\n                                if (Array.isArray(data[prop][inner])) {\n                                    settingsVals[inner] = []\n                                } else {\n                                    settingsVals[inner] = {}\n                                }\n                                for (const nested in data[prop][inner]) {\n                                    if (nested !== 'v-on') {\n                                        settingsVals[inner][nested] = data[prop][inner][nested]\n                                    } else {\n                                        if (!eventsVals[inner]) {\n                                            eventsVals[inner] = []\n                                        }\n                                        for (const event in data[prop][inner][nested]) {\n                                            eventsVals[inner].push({\n                                                event: event,\n                                                function: data[prop][inner][nested][event]\n                                            })\n                                        }\n                                    }\n                                }\n                            } else {\n                                settingsVals[inner] = data[prop][inner]\n                            }\n                        }\n                    }\n\n                    // add slotted children if exists\n                    const itemTypeSettings = this.inputTypeSettings[itemType]\n                    if (itemTypeSettings) {\n                        if (itemTypeSettings.onSettingsUpdated) {\n                            // update type on values\n                            itemTypeSettings.onSettingsUpdated({\n                                tabs: {\n                                    fieldProperties: settingsVals,\n                                    eventHandlers: eventsVals\n                                }\n                            }, newModel);\n                        }\n                        // now receive the slots and iterate on them\n                        const slots = itemTypeSettings.getInputSlots(newModel);\n                        slots.forEach((slot) => {\n                            if (data[prop][slot.id]) {\n                                children.push(...getTree(data[prop][slot.id], null, slot.id))\n                            }\n                        })\n\n                        // add slots to notDataKeys\n                        notDataKeys.push(...slots.map((i) => i.id))\n                    }\n\n                    children.forEach(child => {\n                        newModel.addChild(child)\n                    })\n\n\n                    // apply settings on item value again to break children update chain\n                    eventsVals = {}\n                    settingsVals = {}\n                    for (const inner in data[prop]) {\n                        if (notDataKeys.indexOf(inner) < 0) {\n                            if (typeof data[prop][inner] === 'object') {\n                                if (Array.isArray(data[prop][inner])) {\n                                    settingsVals[inner] = []\n                                } else {\n                                    settingsVals[inner] = {}\n                                }\n                                for (const nested in data[prop][inner]) {\n                                    if (nested !== 'v-on') {\n                                        settingsVals[inner][nested] = data[prop][inner][nested]\n                                    } else {\n                                        if (!eventsVals[inner]) {\n                                            eventsVals[inner] = []\n                                        }\n                                        for (const event in data[prop][inner][nested]) {\n                                            eventsVals[inner].push({\n                                                event: event,\n                                                function: data[prop][inner][nested][event]\n                                            })\n                                        }\n                                    }\n                                }\n                            } else {\n                                settingsVals[inner] = data[prop][inner]\n                            }\n                        }\n                    }\n                    newModel.value = {\n                        settings: {\n                            tabs: {\n                                fieldProperties: settingsVals,\n                                eventHandlers: JSON.parse(JSON.stringify(eventsVals)),\n                                validations: settingsVals.validations,\n                            }\n                        },\n                        slots: {\n                            slot: slot\n                        }\n                    }\n\n                    tree.push(newModel)\n                }\n                return tree\n            }\n            const treeModel = getTree(formjson)\n            return treeModel\n        }\n    }\n}\n","export default {\n    methods: {\n        onUploaded(data) {\n            const tree = this.getFormSchemaFromFormJSON({\n                [data.schema.id]: data.schema\n            })\n            this.schema = {\n                builder: tree\n            }\n            this.codeModel = data.code\n            this[this.getFormValuePropName()] = data.values\n            if (data.template && data.template.name) {\n                this.template = data.template.name\n                this.schema.builder[0].value.__template = data.template.props\n            }\n        },\n        getWorkspace() {\n            const formjson = this.getFormJSONFromSchema(this.schema.builder);\n            const rootFieldsRenderer = formjson[this.schema.builder[0].model.id]\n            const inputValue = {\n                schema: {\n                    ...rootFieldsRenderer\n                },\n                code: this.codeModel,\n                values: this[this.getFormValuePropName()],\n                template: {\n                    name: this.template,\n                    props: this.schema.builder[0].value ? this.schema.builder[0].value.__template : {}\n                }\n            }\n            return inputValue;\n        },\n        onDownload() {\n            this.startJSONDownload(JSON.stringify(this.getWorkspace(), null, 2))()\n        },\n        onReset() {\n            this.$refs.confirm\n                .open(\n                    'Reset',\n                    'Are you sure you want to reset the Schema and Actions?', {\n                        color: 'red'\n                    }\n                )\n                .then(confirm => {\n                    if (confirm) {\n                        this[this.getFormValuePropName()] = {}\n                        const tree = this.field.tree ?\n                            this.field.tree : {\n                                id: 'formjson',\n                                type: 'vf-fields-renderer',\n                                children: []\n                            }\n                        this.schema = {\n                            builder: [this.treeModel.parse(JSON.parse(JSON.stringify(tree)))]\n                        }\n                        this.codeModel = ''\n                        this.tempate = null\n                    }\n                })\n        },\n\n        onResetValues() {\n            this.$refs.confirm\n                .open(\n                    'Reset',\n                    'Are you sure you want to reset Form Values?', {\n                        color: 'red'\n                    }\n                )\n                .then(confirm => {\n                    if (confirm) {\n                        const iterate = function (node, valueRef) {\n                            if (node.children.length > 0) {\n                                node.children.forEach((child) => {\n                                    if (valueRef[child.model.id]) {\n                                        if (child.model.type !== \"vf-paragraph-input\" &&\n                                            typeof valueRef[child.model.id] !== \"object\" ||\n                                            Array.isArray(valueRef[child.model.id])) {\n                                            valueRef[child.model.id] = undefined\n                                        } else if (child.children) {\n                                            iterate(child, valueRef[child.model.id]);\n                                        }\n                                    }\n                                })\n                            }\n                        }\n                        // iterate on form value, reset all values for types except for paragraph\n                        iterate(this.schema.builder[0], this[this.getFormValuePropName()])\n                        this.updateFormJSONInput();\n                    }\n                })\n        },\n\n        onCopyToClipBoard(text) {\n            function fallbackCopyTextToClipboard(text) {\n                var textArea = document.createElement(\"textarea\");\n                textArea.value = text;\n\n                // Avoid scrolling to bottom\n                textArea.style.top = \"0\";\n                textArea.style.left = \"0\";\n                textArea.style.position = \"fixed\";\n\n                document.body.appendChild(textArea);\n                textArea.focus();\n                textArea.select();\n\n                try {\n                    var successful = document.execCommand('copy');\n                    var msg = successful ? 'successful' : 'unsuccessful';\n                    console.log('Fallback: Copying text command was ' + msg);\n                } catch (err) {\n                    console.error('Fallback: Oops, unable to copy', err);\n                }\n\n                document.body.removeChild(textArea);\n            }\n\n            if (!navigator.clipboard) {\n                fallbackCopyTextToClipboard(text);\n                return;\n            }\n            navigator.clipboard.writeText(text).then(function () {\n                console.log('Async: Copying to clipboard was successful!');\n            }, function (err) {\n                console.error('Async: Could not copy text: ', err);\n            });\n        },\n\n        onPasteFromClipboard(resolve) {\n            navigator.clipboard.readText().then(resolve);\n        }\n    }\n}\n","import mod from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormJSONBuilder.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormJSONBuilder.vue?vue&type=script&lang=js&\"","<template>\n  <div :class=\"`vf-input ${field.class ? field.class : ''}`\">\n    <confirm ref=\"confirm\"></confirm>\n    <v-toolbar :dark=\"mode !== 'editor'\" flat dense class=\"ma-0 pa-0\">\n      <label>\n        <v-btn\n          :color=\"mode === 'view' ? 'warning':'primary'\"\n          icon\n          small\n          @click=\"mode = mode === 'view' ? 'editor':'view'\"\n        >\n          <v-icon small>mdi-eye</v-icon>\n        </v-btn>\n        <v-btn\n          :color=\"mode === 'json' ? 'warning':'primary'\"\n          icon\n          small\n          @click=\"mode = mode === 'json' ? 'editor':'json'\"\n        >\n          <v-icon small>mdi-code-array</v-icon>\n        </v-btn>\n        <v-btn\n          :color=\"mode === 'blockly' ? 'warning':'primary'\"\n          icon\n          small\n          @click=\"mode = mode === 'blockly' ? 'editor':'blockly'\"\n        >\n          <v-icon small>mdi-code-greater-than-or-equal</v-icon>\n        </v-btn>\n        {{ field.label }}\n      </label>\n      <v-spacer></v-spacer>\n      <v-select\n        style=\"max-width: 250px;\"\n        item-value=\"id\"\n        item-text=\"title\"\n        reverse\n        rounded\n        solo\n        small\n        chips\n        flat\n        hide-details\n        v-model=\"template\"\n        label=\"Template\"\n        dense\n        v-if=\"templates\"\n        :items=\"templates\"\n      ></v-select>\n      <v-btn small icon @click=\"onResetValues\" color=\"red\">\n        <v-icon small>mdi-database-refresh</v-icon>\n      </v-btn>\n      <v-btn small icon @click=\"onReset\" color=\"red\">\n        <v-icon small>mdi-refresh</v-icon>\n      </v-btn>\n      <v-btn small icon @click=\"onDownload\">\n        <v-icon small>mdi-download</v-icon>\n      </v-btn>\n      <v-btn small icon @click=\"startJSONUpload(onUploaded)()\">\n        <v-icon small>mdi-upload</v-icon>\n      </v-btn>\n    </v-toolbar>\n    <vf-fields-renderer\n      v-show=\"mode === 'editor'\"\n      :options=\"{}\"\n      :fields=\"formBuilderTreeview\"\n      v-model=\"schema\"\n      :style=\"`${field.height ? `min-height: ${field.height}px`: ''}`\"\n    ></vf-fields-renderer>\n    <div v-show=\"mode === 'view'\">\n      <v-system-bar dark :color=\"blocklyError ? 'red' : 'primary' \">\n        Form Preview\n        <span class=\"red--text text--lighten-3\">{{ blocklyError ? '(has errors)':'' }}</span>\n      </v-system-bar>\n      <vuetify-formjson v-model=\"formModel\" v-bind=\"this[this.getFormSchemaPropName()]\"></vuetify-formjson>\n    </div>\n    <v-card light v-show=\"mode === 'blockly'\" flat class=\"fill-height\">\n      <v-system-bar dark :color=\"blocklyError ? 'red' : 'primary' \">\n        <v-btn class=\"right\" icon small @click=\"blocklyPasteContent()\">\n          <v-icon small>mdi-content-paste</v-icon>\n        </v-btn>\n        <v-btn class=\"right\" icon small @click=\"blocklyCopyContent()\">\n          <v-icon small>mdi-content-copy</v-icon>\n        </v-btn>\n        <v-btn class=\"right\" icon small @click=\"showCode = !showCode\">\n          <v-icon small>{{ showCode ? 'mdi-eye':'mdi-code-braces-box' }}</v-icon>\n        </v-btn>Define functions and callbacks\n        <span\n          class=\"red--text text--lighten-3\"\n        >{{ blocklyError ? '(has errors)':'' }}</span>\n        <v-spacer></v-spacer>\n        <v-dialog v-if=\"blocklyError\" v-model=\"blocklyErrorDialog\">\n          <template v-slot:activator=\"{on}\">\n            <v-btn small icon v-on=\"on\">\n              <v-icon small>mdi-flask-remove-outline</v-icon>\n            </v-btn>\n          </template>\n          <v-card dark color=\"red\">\n            <v-card-title>{{ blocklyError.message }}</v-card-title>\n            <v-card-text>{{ blocklyError.stack }}</v-card-text>\n          </v-card>\n        </v-dialog>\n      </v-system-bar>\n      <v-card-text class=\"ma-0 pa-0 fill-height\">\n        <vf-blockly-input\n          ref=\"blocklyEditor\"\n          v-if=\"! showCode\"\n          :field=\"blocklyField\"\n          v-model=\"codeModel\"\n          @selection=\"onBlocklySelectionChanged\"\n        ></vf-blockly-input>\n        <vf-code-input v-if=\"showCode\" v-model=\"blocklyJSCode\" :field=\"{}\"></vf-code-input>\n      </v-card-text>\n    </v-card>\n    <v-card light v-if=\"mode === 'json'\" flat class=\"fill-height\">\n      <v-system-bar dark color=\"primary\">\n        Manual FormBuilder edit\n        <v-spacer></v-spacer>\n        <v-btn class=\"right\" dark icon small @click=\"applyManualEditor\">\n          <v-icon small>mdi-content-save</v-icon>\n        </v-btn>\n        <v-btn class=\"right\" dark icon small @click=\"resetManualEditor\">\n          <v-icon small>mdi-refresh-circle</v-icon>\n        </v-btn>\n      </v-system-bar>\n      <v-card-text class=\"ma-0 pa-0 fill-height\">\n        <vf-code-input\n          class=\"fill-height\"\n          v-show=\"mode === 'json'\"\n          :field=\"{}\"\n          v-model=\"jsonString\"\n        ></vf-code-input>\n      </v-card-text>\n    </v-card>\n  </div>\n</template>\n\n<script>\nimport FormJSONBuilder from \"./builder\";\nimport { JSONWorkspace } from \"./../mixins\";\nimport confirm from \"./../../Confirm.vue\";\nimport TreeModel from \"tree-model\";\nimport Blockly from \"blockly\";\nimport FormJSONBuilderRenderer from \"./generator\";\nimport { GenerateJSCode } from \"./../Blockly/generator\";\nimport BuilderJSONWorkspaceButtons from \"./workspace\";\nimport {\n  VCard,\n  VCardTitle,\n  VBtn,\n  VIcon,\n  VCardText,\n  VSpacer,\n  VToolbar,\n  VDialog,\n  VSystemBar\n} from \"vuetify/lib\";\n\nexport default {\n  components: {\n    confirm,\n    VCard,\n    VCardTitle,\n    VBtn,\n    VIcon,\n    VCardText,\n    VSpacer,\n    VToolbar,\n    VDialog,\n    VSystemBar\n  },\n  mixins: [\n    FormJSONBuilder,\n    FormJSONBuilderRenderer,\n    JSONWorkspace,\n    BuilderJSONWorkspaceButtons\n  ],\n  name: \"vf-formjson-input\",\n  props: {\n    id: String,\n    field: Object,\n    value: {\n      type: Object,\n      default: () => ({})\n    }\n  },\n  data() {\n    const treeModel = new TreeModel({});\n    const tree = this.field.tree\n      ? this.field.tree\n      : {\n          id: \"sample_form\",\n          type: \"vf-fields-renderer\",\n          children: []\n        };\n    const items = [treeModel.parse(JSON.parse(JSON.stringify(tree)))]; // use a copy to keep this.tree intact\n    return {\n      treeModel,\n      devalue: this.value,\n      schema: {\n        builder: items\n      },\n      formBuilderTreeview: {\n        builder: {\n          type: \"group\",\n          group: \"treeview\",\n          iconProps: {\n            small: true\n          },\n          btnProps: {\n            small: true\n          },\n          drawerProps: {\n            width: 400,\n            dark: false,\n            \"center-active\": true\n          },\n          formProps: {\n            class: \"pa-4\",\n            options: {\n              type: \"col\",\n              dense: true,\n              small: true\n            }\n          },\n          class: \"fill-height ma-2\",\n          decorator: {\n            id: \"model.id\",\n            title: \"model.title\",\n            type: \"model.type\",\n            label: \"[:type] #:id\"\n          },\n          actions: this.getFormJSONBuilderActionProviderForTreeview(),\n          props: {\n            dense: true,\n            \"item-key\": \"id\",\n            \"item-text\": \"title\",\n            shaped: true,\n            hoverable: true,\n            rounded: true,\n            \"return-object\": true,\n            \"selection-type\": \"independent\",\n            \"multiple-active\": false,\n            transition: true\n          }\n        }\n      },\n      showCodeEditor: false,\n      mode: \"editor\",\n      codeModel: {},\n      blocklyErrorDialog: false,\n      blocklyField: {\n        class: \"fill-height\"\n      },\n      currentSelectedBlocksCode: \"\",\n      blocklyError: null,\n      fullscreenCodeEditor: false,\n      showCode: false,\n      blocklyJSCode: \"\",\n      jsonString: \"\",\n      onFormInit: null,\n      template: null,\n      templates: this.field.templates\n        ? this.field.templates\n        : [\n            {\n              id: \"Centered\",\n              title: \"Centered\"\n            },\n            {\n              id: \"AppBar\",\n              title: \"App Navigation\"\n            },\n            {\n              id: \"AdminBar\",\n              title: \"Admin Navigation\"\n            }\n          ]\n    };\n  },\n  methods: {\n    /**\n     * update component value,\n     * update internal values for current component state\n     * update the preview form by compiling values\n     */\n    updateFormJSONInput() {\n      const formjson = this.getFormJSONFromSchema(this.schema.builder);\n      const formId = this.schema.builder[0].model.id;\n      try {\n        const compiledForm = this.CompileFormJSONSchemaWithCode(\n          this,\n          formjson,\n          this.codeModel,\n          {}\n        );\n        this[this.getFormSchemaPropName()] = {\n          fields: compiledForm[formId].fields,\n          options: compiledForm[formId].options,\n          id: formId\n        };\n        this.blocklyError = null;\n        this.onFormInit = compiledForm.onFormInit;\n      } catch (e) {\n        this.blocklyError = e;\n      }\n\n      this.$nextTick(() => {\n          const workspace = this.getWorkspace();\n          this.jsonString = JSON.stringify(workspace, null, 2);\n          this.$emit(\"input\", workspace);\n      });\n    },\n    applyManualEditor() {\n      try {\n        this.onUploaded(JSON.parse(this.jsonString));\n      } catch (e) {\n        console.log(e);\n      }\n    },\n    resetManualEditor() {\n      this.jsonString = JSON.stringify(this.getWorkspace(), null, 2);\n    },\n    onBlocklySelectionChanged(code) {\n      this.currentSelectedBlocksCode = code;\n    },\n    blocklyCopyContent() {\n      this.onCopyToClipBoard(this.currentSelectedBlocksCode);\n    },\n    blocklyPasteContent() {\n      this.onPasteFromClipboard(text => {\n        this.$refs.blocklyEditor.pasteToWorkspace(text);\n      });\n    }\n  },\n\n  mounted() {\n    if (this.devalue && this.devalue.code && this.devalue.schema) {\n      this.onUploaded(this.devalue);\n    } else {\n      /**\n       * set component init value\n       */\n      this.updateFormJSONInput();\n    }\n  },\n\n  watch: {\n    mode() {\n      /**\n       * blockly needs to be refreshed, when displayed for the first time,\n       *  or window is resized after display\n       */\n      if (this.mode === \"blockly\") {\n        this.$nextTick(() => {\n          if (this.$refs.blocklyEditor) {\n            this.$refs.blocklyEditor.refreshSize();\n            this.$refs.blocklyEditor.updateBlocks();\n          }\n        });\n      } else if (this.mode === \"view\") {\n        // if (this.onFormInit) {\n        //   this.onFormInit();\n        // }\n      }\n    },\n\n    /**\n     * update component value when schema (treeview model) is chabged\n     */\n    schema: {\n      deep: true,\n      handler() {\n        this.updateFormJSONInput();\n        this.$emit(\"update:schema\", this.schema);\n      }\n    },\n\n    /**\n     * update component value when code is changed\n     */\n    codeModel() {\n      this.updateFormJSONInput();\n      this.blocklyJSCode = GenerateJSCode(\n        Blockly,\n        this.codeModel,\n        this.field.blocks\n      );\n      this.$emit(\"update:code\", this.schema);\n    },\n\n    template() {\n      this.updateFormJSONInput();\n    },\n\n    formModel: {\n      deep: true,\n      handler() {\n        this.updateFormJSONInput();\n        this.resetManualEditor();\n      }\n    }\n  }\n};\n</script>\n","import { render, staticRenderFns } from \"./FormJSONBuilder.vue?vue&type=template&id=6c4f6c53&\"\nimport script from \"./FormJSONBuilder.vue?vue&type=script&lang=js&\"\nexport * from \"./FormJSONBuilder.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VCardTitle } from 'vuetify/lib/components/VCard';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VIcon } from 'vuetify/lib/components/VIcon';\nimport { VSelect } from 'vuetify/lib/components/VSelect';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VSystemBar } from 'vuetify/lib/components/VSystemBar';\nimport { VToolbar } from 'vuetify/lib/components/VToolbar';\ninstallComponents(component, {VBtn,VCard,VCardText,VCardTitle,VDialog,VIcon,VSelect,VSpacer,VSystemBar,VToolbar})\n","module.exports = (function () {\n  'use strict';\n\n  /**\n   * Sort an array using the merge sort algorithm.\n   *\n   * @param {function} comparatorFn The comparator function.\n   * @param {array} arr The array to sort.\n   * @returns {array} The sorted array.\n   */\n  function mergeSort(comparatorFn, arr) {\n    var len = arr.length, firstHalf, secondHalf;\n    if (len >= 2) {\n      firstHalf = arr.slice(0, len / 2);\n      secondHalf = arr.slice(len / 2, len);\n      return merge(comparatorFn, mergeSort(comparatorFn, firstHalf), mergeSort(comparatorFn, secondHalf));\n    } else {\n      return arr.slice();\n    }\n  }\n\n  /**\n   * The merge part of the merge sort algorithm.\n   *\n   * @param {function} comparatorFn The comparator function.\n   * @param {array} arr1 The first sorted array.\n   * @param {array} arr2 The second sorted array.\n   * @returns {array} The merged and sorted array.\n   */\n  function merge(comparatorFn, arr1, arr2) {\n    var result = [], left1 = arr1.length, left2 = arr2.length;\n    while (left1 > 0 && left2 > 0) {\n      if (comparatorFn(arr1[0], arr2[0]) <= 0) {\n        result.push(arr1.shift());\n        left1--;\n      } else {\n        result.push(arr2.shift());\n        left2--;\n      }\n    }\n    if (left1 > 0) {\n      result.push.apply(result, arr1);\n    } else {\n      result.push.apply(result, arr2);\n    }\n    return result;\n  }\n\n  return mergeSort;\n})();\n","var mergeSort, findInsertIndex;\nmergeSort = require('mergesort');\nfindInsertIndex = require('find-insert-index');\n\nmodule.exports = (function () {\n  'use strict';\n\n  var walkStrategies;\n\n  walkStrategies = {};\n\n  function k(result) {\n    return function () {\n      return result;\n    };\n  }\n\n  function TreeModel(config) {\n    config = config || {};\n    this.config = config;\n    this.config.childrenPropertyName = config.childrenPropertyName || 'children';\n    this.config.modelComparatorFn = config.modelComparatorFn;\n  }\n\n  function addChildToNode(node, child) {\n    child.parent = node;\n    node.children.push(child);\n    return child;\n  }\n\n  function Node(config, model) {\n    this.config = config;\n    this.model = model;\n    this.children = [];\n  }\n\n  TreeModel.prototype.parse = function (model) {\n    var i, childCount, node;\n\n    if (!(model instanceof Object)) {\n      throw new TypeError('Model must be of type object.');\n    }\n\n    node = new Node(this.config, model);\n    if (model[this.config.childrenPropertyName] instanceof Array) {\n      if (this.config.modelComparatorFn) {\n        model[this.config.childrenPropertyName] = mergeSort(\n          this.config.modelComparatorFn,\n          model[this.config.childrenPropertyName]);\n      }\n      for (i = 0, childCount = model[this.config.childrenPropertyName].length; i < childCount; i++) {\n        addChildToNode(node, this.parse(model[this.config.childrenPropertyName][i]));\n      }\n    }\n    return node;\n  };\n\n  function hasComparatorFunction(node) {\n    return typeof node.config.modelComparatorFn === 'function';\n  }\n\n  Node.prototype.isRoot = function () {\n    return this.parent === undefined;\n  };\n\n  Node.prototype.hasChildren = function () {\n    return this.children.length > 0;\n  };\n\n  function addChild(self, child, insertIndex) {\n    var index;\n\n    if (!(child instanceof Node)) {\n      throw new TypeError('Child must be of type Node.');\n    }\n\n    child.parent = self;\n    if (!(self.model[self.config.childrenPropertyName] instanceof Array)) {\n      self.model[self.config.childrenPropertyName] = [];\n    }\n\n    if (hasComparatorFunction(self)) {\n      // Find the index to insert the child\n      index = findInsertIndex(\n        self.config.modelComparatorFn,\n        self.model[self.config.childrenPropertyName],\n        child.model);\n\n      // Add to the model children\n      self.model[self.config.childrenPropertyName].splice(index, 0, child.model);\n\n      // Add to the node children\n      self.children.splice(index, 0, child);\n    } else {\n      if (insertIndex === undefined) {\n        self.model[self.config.childrenPropertyName].push(child.model);\n        self.children.push(child);\n      } else {\n        if (insertIndex < 0 || insertIndex > self.children.length) {\n          throw new Error('Invalid index.');\n        }\n        self.model[self.config.childrenPropertyName].splice(insertIndex, 0, child.model);\n        self.children.splice(insertIndex, 0, child);\n      }\n    }\n    return child;\n  }\n\n  Node.prototype.addChild = function (child) {\n    return addChild(this, child);\n  };\n\n  Node.prototype.addChildAtIndex = function (child, index) {\n    if (hasComparatorFunction(this)) {\n      throw new Error('Cannot add child at index when using a comparator function.');\n    }\n\n    return addChild(this, child, index);\n  };\n\n  Node.prototype.setIndex = function (index) {\n    if (hasComparatorFunction(this)) {\n      throw new Error('Cannot set node index when using a comparator function.');\n    }\n\n    if (this.isRoot()) {\n      if (index === 0) {\n        return this;\n      }\n      throw new Error('Invalid index.');\n    }\n\n    if (index < 0 || index >= this.parent.children.length) {\n      throw new Error('Invalid index.');\n    }\n\n    var oldIndex = this.parent.children.indexOf(this);\n\n    this.parent.children.splice(index, 0, this.parent.children.splice(oldIndex, 1)[0]);\n\n    this.parent.model[this.parent.config.childrenPropertyName]\n      .splice(index, 0, this.parent.model[this.parent.config.childrenPropertyName].splice(oldIndex, 1)[0]);\n\n    return this;\n  };\n\n  Node.prototype.getPath = function () {\n    var path = [];\n    (function addToPath(node) {\n      path.unshift(node);\n      if (!node.isRoot()) {\n        addToPath(node.parent);\n      }\n    })(this);\n    return path;\n  };\n\n  Node.prototype.getIndex = function () {\n    if (this.isRoot()) {\n      return 0;\n    }\n    return this.parent.children.indexOf(this);\n  };\n\n  /**\n   * Parse the arguments of traversal functions. These functions can take one optional\n   * first argument which is an options object. If present, this object will be stored\n   * in args.options. The only mandatory argument is the callback function which can\n   * appear in the first or second position (if an options object is given). This\n   * function will be saved to args.fn. The last optional argument is the context on\n   * which the callback function will be called. It will be available in args.ctx.\n   *\n   * @returns Parsed arguments.\n   */\n  function parseArgs() {\n    var args = {};\n    if (arguments.length === 1) {\n      if (typeof arguments[0] === 'function') {\n        args.fn = arguments[0];\n      } else {\n        args.options = arguments[0];\n      }\n    } else if (arguments.length === 2) {\n      if (typeof arguments[0] === 'function') {\n        args.fn = arguments[0];\n        args.ctx = arguments[1];\n      } else {\n        args.options = arguments[0];\n        args.fn = arguments[1];\n      }\n    } else {\n      args.options = arguments[0];\n      args.fn = arguments[1];\n      args.ctx = arguments[2];\n    }\n    args.options = args.options || {};\n    if (!args.options.strategy) {\n      args.options.strategy = 'pre';\n    }\n    if (!walkStrategies[args.options.strategy]) {\n      throw new Error('Unknown tree walk strategy. Valid strategies are \\'pre\\' [default], \\'post\\' and \\'breadth\\'.');\n    }\n    return args;\n  }\n\n  Node.prototype.walk = function () {\n    var args;\n    args = parseArgs.apply(this, arguments);\n    walkStrategies[args.options.strategy].call(this, args.fn, args.ctx);\n  };\n\n  walkStrategies.pre = function depthFirstPreOrder(callback, context) {\n    var i, childCount, keepGoing;\n    keepGoing = callback.call(context, this);\n    for (i = 0, childCount = this.children.length; i < childCount; i++) {\n      if (keepGoing === false) {\n        return false;\n      }\n      keepGoing = depthFirstPreOrder.call(this.children[i], callback, context);\n    }\n    return keepGoing;\n  };\n\n  walkStrategies.post = function depthFirstPostOrder(callback, context) {\n    var i, childCount, keepGoing;\n    for (i = 0, childCount = this.children.length; i < childCount; i++) {\n      keepGoing = depthFirstPostOrder.call(this.children[i], callback, context);\n      if (keepGoing === false) {\n        return false;\n      }\n    }\n    keepGoing = callback.call(context, this);\n    return keepGoing;\n  };\n\n  walkStrategies.breadth = function breadthFirst(callback, context) {\n    var queue = [this];\n    (function processQueue() {\n      var i, childCount, node;\n      if (queue.length === 0) {\n        return;\n      }\n      node = queue.shift();\n      for (i = 0, childCount = node.children.length; i < childCount; i++) {\n        queue.push(node.children[i]);\n      }\n      if (callback.call(context, node) !== false) {\n        processQueue();\n      }\n    })();\n  };\n\n  Node.prototype.all = function () {\n    var args, all = [];\n    args = parseArgs.apply(this, arguments);\n    args.fn = args.fn || k(true);\n    walkStrategies[args.options.strategy].call(this, function (node) {\n      if (args.fn.call(args.ctx, node)) {\n        all.push(node);\n      }\n    }, args.ctx);\n    return all;\n  };\n\n  Node.prototype.first = function () {\n    var args, first;\n    args = parseArgs.apply(this, arguments);\n    args.fn = args.fn || k(true);\n    walkStrategies[args.options.strategy].call(this, function (node) {\n      if (args.fn.call(args.ctx, node)) {\n        first = node;\n        return false;\n      }\n    }, args.ctx);\n    return first;\n  };\n\n  Node.prototype.drop = function () {\n    var indexOfChild;\n    if (!this.isRoot()) {\n      indexOfChild = this.parent.children.indexOf(this);\n      this.parent.children.splice(indexOfChild, 1);\n      this.parent.model[this.config.childrenPropertyName].splice(indexOfChild, 1);\n      this.parent = undefined;\n      delete this.parent;\n    }\n    return this;\n  };\n\n  return TreeModel;\n})();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-dialog',{style:({ zIndex: _vm.options.zIndex }),attrs:{\"max-width\":_vm.options.width},on:{\"keydown\":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,\"esc\",27,$event.key,[\"Esc\",\"Escape\"])){ return null; }return _vm.cancel($event)}},model:{value:(_vm.dialog),callback:function ($$v) {_vm.dialog=$$v},expression:\"dialog\"}},[_c('v-card',[_c('v-toolbar',{attrs:{\"dark\":\"\",\"color\":_vm.options.color,\"dense\":\"\",\"flat\":\"\"}},[_c('v-toolbar-title',{staticClass:\"white--text\"},[_vm._v(_vm._s(_vm.title))])],1),_vm._v(\" \"),_c('v-card-text',{directives:[{name:\"show\",rawName:\"v-show\",value:(!!_vm.message),expression:\"!!message\"}],staticClass:\"pa-4\"},[_vm._v(_vm._s(_vm.message))]),_vm._v(\" \"),_c('v-card-actions',{staticClass:\"pt-0\"},[_c('v-spacer'),_vm._v(\" \"),_c('v-btn',{attrs:{\"color\":\"primary darken-1\",\"text\":\"\"},nativeOn:{\"click\":function($event){return _vm.agree($event)}}},[_vm._v(\"Yes\")]),_vm._v(\" \"),_c('v-btn',{attrs:{\"color\":\"grey\",\"text\":\"\"},nativeOn:{\"click\":function($event){return _vm.cancel($event)}}},[_vm._v(\"Cancel\")])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Confirm.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Confirm.vue?vue&type=script&lang=js&\"","<template>\n  <v-dialog v-model=\"dialog\" :max-width=\"options.width\" :style=\"{ zIndex: options.zIndex }\" @keydown.esc=\"cancel\">\n    <v-card>\n      <v-toolbar dark :color=\"options.color\" dense flat>\n        <v-toolbar-title class=\"white--text\">{{ title }}</v-toolbar-title>\n      </v-toolbar>\n      <v-card-text v-show=\"!!message\" class=\"pa-4\">{{ message }}</v-card-text>\n      <v-card-actions class=\"pt-0\">\n        <v-spacer></v-spacer>\n        <v-btn color=\"primary darken-1\" text @click.native=\"agree\">Yes</v-btn>\n        <v-btn color=\"grey\" text @click.native=\"cancel\">Cancel</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script>\nimport { VDialog, VCard, VToolbar, VSpacer, VBtn, VCardActions, VCardText, VToolbarTitle } from 'vuetify/lib'\n/**\n * Vuetify Confirm Dialog component\n *\n * Insert component where you want to use it:\n * <confirm ref=\"confirm\"></confirm>\n *\n * Call it:\n * this.$refs.confirm.open('Delete', 'Are you sure?', { color: 'red' }).then((confirm) => {})\n * Or use await:\n * if (await this.$refs.confirm.open('Delete', 'Are you sure?', { color: 'red' })) {\n *   // yes\n * }\n * else {\n *   // cancel\n * }\n *\n * Alternatively you can place it in main App component and access it globally via this.$root.$confirm\n * <template>\n *   <v-app>\n *     ...\n *     <confirm ref=\"confirm\"></confirm>\n *   </v-app>\n * </template>\n *\n * mounted() {\n *   this.$root.$confirm = this.$refs.confirm.open\n * }\n */\nexport default {\n    components: {\n        VDialog, VCard, VToolbar, VSpacer, VBtn, VCardActions, VCardText, VToolbarTitle\n    },\n    data: () => ({\n        dialog: false,\n        resolve: null,\n        reject: null,\n        message: null,\n        title: null,\n        options: {\n            color: 'primary',\n            width: 290,\n            zIndex: 200\n        }\n    }),\n    methods: {\n        open (title, message, options) {\n            this.dialog = true\n            this.title = title\n            this.message = message\n            this.options = Object.assign(this.options, options)\n            return new Promise((resolve, reject) => {\n                this.resolve = resolve\n                this.reject = reject\n            })\n        },\n        agree () {\n            this.resolve(true)\n            this.dialog = false\n        },\n        cancel () {\n            this.resolve(false)\n            this.dialog = false\n        }\n    }\n}\n</script>\n","import { render, staticRenderFns } from \"./Confirm.vue?vue&type=template&id=dcebe38a&\"\nimport script from \"./Confirm.vue?vue&type=script&lang=js&\"\nexport * from \"./Confirm.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports\n\n/* vuetify-loader */\nimport installComponents from \"!../../../../node_modules/vuetify-loader/lib/runtime/installComponents.js\"\nimport { VBtn } from 'vuetify/lib/components/VBtn';\nimport { VCard } from 'vuetify/lib/components/VCard';\nimport { VCardActions } from 'vuetify/lib/components/VCard';\nimport { VCardText } from 'vuetify/lib/components/VCard';\nimport { VDialog } from 'vuetify/lib/components/VDialog';\nimport { VSpacer } from 'vuetify/lib/components/VGrid';\nimport { VToolbar } from 'vuetify/lib/components/VToolbar';\nimport { VToolbarTitle } from 'vuetify/lib/components/VToolbar';\ninstallComponents(component, {VBtn,VCard,VCardActions,VCardText,VDialog,VSpacer,VToolbar,VToolbarTitle})\n"],"sourceRoot":""}